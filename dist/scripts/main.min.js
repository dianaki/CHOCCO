"use strict";function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}!function(e,t){"object"===("undefined"==typeof module?"undefined":_typeof(module))&&"object"===_typeof(module.exports)?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error("jQuery requires a window with a document");return t(e)}:t(e)}("undefined"!=typeof window?window:void 0,function(P,e){function g(e){return null!=e&&e===e.window}var t=[],o=Object.getPrototypeOf,s=t.slice,b=t.flat?function(e){return t.flat.call(e)}:function(e){return t.concat.apply([],e)},l=t.push,i=t.indexOf,n={},r=n.toString,m=n.hasOwnProperty,a=m.toString,c=a.call(Object),T={},v=function(e){return"function"==typeof e&&"number"!=typeof e.nodeType},w=P.document,u={type:!0,src:!0,nonce:!0,noModule:!0};function S(e,t,n){var o,i,r=(n=n||w).createElement("script");if(r.text=e,t)for(o in u)(i=t[o]||t.getAttribute&&t.getAttribute(o))&&r.setAttribute(o,i);n.head.appendChild(r).parentNode.removeChild(r)}function y(e){return null==e?e+"":"object"===_typeof(e)||"function"==typeof e?n[r.call(e)]||"object":_typeof(e)}var d="3.5.1",A=function e(t,n){return new e.fn.init(t,n)};function p(e){var t=!!e&&"length"in e&&e.length,n=y(e);return!v(e)&&!g(e)&&("array"===n||0===t||"number"==typeof t&&0<t&&t-1 in e)}A.fn=A.prototype={jquery:d,constructor:A,length:0,toArray:function(){return s.call(this)},get:function(e){return null==e?s.call(this):e<0?this[e+this.length]:this[e]},pushStack:function(e){var t=A.merge(this.constructor(),e);return t.prevObject=this,t},each:function(e){return A.each(this,e)},map:function(n){return this.pushStack(A.map(this,function(e,t){return n.call(e,t,e)}))},slice:function(){return this.pushStack(s.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},even:function(){return this.pushStack(A.grep(this,function(e,t){return(t+1)%2}))},odd:function(){return this.pushStack(A.grep(this,function(e,t){return t%2}))},eq:function(e){var t=this.length,n=+e+(e<0?t:0);return this.pushStack(0<=n&&n<t?[this[n]]:[])},end:function(){return this.prevObject||this.constructor()},push:l,sort:t.sort,splice:t.splice},A.extend=A.fn.extend=function(){var e,t,n,o,i,r,a=arguments[0]||{},s=1,l=arguments.length,c=!1;for("boolean"==typeof a&&(c=a,a=arguments[s]||{},s++),"object"===_typeof(a)||v(a)||(a={}),s===l&&(a=this,s--);s<l;s++)if(null!=(e=arguments[s]))for(t in e)o=e[t],"__proto__"!==t&&a!==o&&(c&&o&&(A.isPlainObject(o)||(i=Array.isArray(o)))?(n=a[t],r=i&&!Array.isArray(n)?[]:i||A.isPlainObject(n)?n:{},i=!1,a[t]=A.extend(c,r,o)):void 0!==o&&(a[t]=o));return a},A.extend({expando:"jQuery"+(d+Math.random()).replace(/\D/g,""),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isPlainObject:function(e){var t,n;return!(!e||"[object Object]"!==r.call(e))&&(!(t=o(e))||"function"==typeof(n=m.call(t,"constructor")&&t.constructor)&&a.call(n)===c)},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},globalEval:function(e,t,n){S(e,{nonce:t&&t.nonce},n)},each:function(e,t){var n,o=0;if(p(e))for(n=e.length;o<n&&!1!==t.call(e[o],o,e[o]);o++);else for(o in e)if(!1===t.call(e[o],o,e[o]))break;return e},makeArray:function(e,t){var n=t||[];return null!=e&&(p(Object(e))?A.merge(n,"string"==typeof e?[e]:e):l.call(n,e)),n},inArray:function(e,t,n){return null==t?-1:i.call(t,e,n)},merge:function(e,t){for(var n=+t.length,o=0,i=e.length;o<n;o++)e[i++]=t[o];return e.length=i,e},grep:function(e,t,n){for(var o=[],i=0,r=e.length,a=!n;i<r;i++)!t(e[i],i)!=a&&o.push(e[i]);return o},map:function(e,t,n){var o,i,r=0,a=[];if(p(e))for(o=e.length;r<o;r++)null!=(i=t(e[r],r,n))&&a.push(i);else for(r in e)null!=(i=t(e[r],r,n))&&a.push(i);return b(a)},guid:1,support:T}),"function"==typeof Symbol&&(A.fn[Symbol.iterator]=t[Symbol.iterator]),A.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(e,t){n["[object "+t+"]"]=t.toLowerCase()});var f=function(n){function d(e,t){var n="0x"+e.slice(1)-65536;return t||(n<0?String.fromCharCode(65536+n):String.fromCharCode(n>>10|55296,1023&n|56320))}function i(){x()}var e,f,S,r,a,h,p,g,y,l,c,x,P,s,w,b,u,m,T,A="sizzle"+ +new Date,v=n.document,M=0,o=0,C=le(),E=le(),G=le(),H=le(),B=function(e,t){return e===t&&(c=!0),0},D={}.hasOwnProperty,t=[],I=t.pop,L=t.push,k=t.push,N=t.slice,O=function(e,t){for(var n=0,o=e.length;n<o;n++)if(e[n]===t)return n;return-1},$="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",R="[\\x20\\t\\r\\n\\f]",F="(?:\\\\[\\da-fA-F]{1,6}"+R+"?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",V="\\["+R+"*("+F+")(?:"+R+"*([*^$|!~]?=)"+R+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+F+"))|)"+R+"*\\]",X=":("+F+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+V+")*)|.*)\\)|)",W=new RegExp(R+"+","g"),_=new RegExp("^"+R+"+|((?:^|[^\\\\])(?:\\\\.)*)"+R+"+$","g"),j=new RegExp("^"+R+"*,"+R+"*"),q=new RegExp("^"+R+"*([>+~]|"+R+")"+R+"*"),z=new RegExp(R+"|>"),U=new RegExp(X),K=new RegExp("^"+F+"$"),Y={ID:new RegExp("^#("+F+")"),CLASS:new RegExp("^\\.("+F+")"),TAG:new RegExp("^("+F+"|[*])"),ATTR:new RegExp("^"+V),PSEUDO:new RegExp("^"+X),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+R+"*(even|odd|(([+-]|)(\\d*)n|)"+R+"*(?:([+-]|)"+R+"*(\\d+)|))"+R+"*\\)|)","i"),bool:new RegExp("^(?:"+$+")$","i"),needsContext:new RegExp("^"+R+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+R+"*((?:-\\d)?\\d*)"+R+"*\\)|)(?=[^-]|$)","i")},Q=/HTML$/i,Z=/^(?:input|select|textarea|button)$/i,J=/^h\d$/i,ee=/^[^{]+\{\s*\[native \w/,te=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,ne=/[+~]/,oe=new RegExp("\\\\[\\da-fA-F]{1,6}"+R+"?|\\\\([^\\r\\n\\f])","g"),ie=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,re=function(e,t){return t?"\0"===e?"ï¿½":e.slice(0,-1)+"\\"+e.charCodeAt(e.length-1).toString(16)+" ":"\\"+e},ae=Te(function(e){return!0===e.disabled&&"fieldset"===e.nodeName.toLowerCase()},{dir:"parentNode",next:"legend"});try{k.apply(t=N.call(v.childNodes),v.childNodes),t[v.childNodes.length].nodeType}catch(e){k={apply:t.length?function(e,t){L.apply(e,N.call(t))}:function(e,t){for(var n=e.length,o=0;e[n++]=t[o++];);e.length=n-1}}}function se(t,e,n,o){var i,r,a,s,l,c,u,d=e&&e.ownerDocument,p=e?e.nodeType:9;if(n=n||[],"string"!=typeof t||!t||1!==p&&9!==p&&11!==p)return n;if(!o&&(x(e),e=e||P,w)){if(11!==p&&(l=te.exec(t)))if(i=l[1]){if(9===p){if(!(a=e.getElementById(i)))return n;if(a.id===i)return n.push(a),n}else if(d&&(a=d.getElementById(i))&&T(e,a)&&a.id===i)return n.push(a),n}else{if(l[2])return k.apply(n,e.getElementsByTagName(t)),n;if((i=l[3])&&f.getElementsByClassName&&e.getElementsByClassName)return k.apply(n,e.getElementsByClassName(i)),n}if(f.qsa&&!H[t+" "]&&(!b||!b.test(t))&&(1!==p||"object"!==e.nodeName.toLowerCase())){if(u=t,d=e,1===p&&(z.test(t)||q.test(t))){for((d=ne.test(t)&&ge(e.parentNode)||e)===e&&f.scope||((s=e.getAttribute("id"))?s=s.replace(ie,re):e.setAttribute("id",s=A)),r=(c=h(t)).length;r--;)c[r]=(s?"#"+s:":scope")+" "+me(c[r]);u=c.join(",")}try{return k.apply(n,d.querySelectorAll(u)),n}catch(e){H(t,!0)}finally{s===A&&e.removeAttribute("id")}}}return g(t.replace(_,"$1"),e,n,o)}function le(){var n=[];function o(e,t){return n.push(e+" ")>S.cacheLength&&delete o[n.shift()],o[e+" "]=t}return o}function ce(e){return e[A]=!0,e}function ue(e){var t=P.createElement("fieldset");try{return!!e(t)}catch(e){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function de(e,t){for(var n=e.split("|"),o=n.length;o--;)S.attrHandle[n[o]]=t}function pe(e,t){var n=t&&e,o=n&&1===e.nodeType&&1===t.nodeType&&e.sourceIndex-t.sourceIndex;if(o)return o;if(n)for(;n=n.nextSibling;)if(n===t)return-1;return e?1:-1}function fe(t){return function(e){return"form"in e?e.parentNode&&!1===e.disabled?"label"in e?"label"in e.parentNode?e.parentNode.disabled===t:e.disabled===t:e.isDisabled===t||e.isDisabled!==!t&&ae(e)===t:e.disabled===t:"label"in e&&e.disabled===t}}function he(a){return ce(function(r){return r=+r,ce(function(e,t){for(var n,o=a([],e.length,r),i=o.length;i--;)e[n=o[i]]&&(e[n]=!(t[n]=e[n]))})})}function ge(e){return e&&void 0!==e.getElementsByTagName&&e}for(e in f=se.support={},a=se.isXML=function(e){var t=e.namespaceURI,n=(e.ownerDocument||e).documentElement;return!Q.test(t||n&&n.nodeName||"HTML")},x=se.setDocument=function(e){var t,n,o=e?e.ownerDocument||e:v;return o!=P&&9===o.nodeType&&o.documentElement&&(s=(P=o).documentElement,w=!a(P),v!=P&&(n=P.defaultView)&&n.top!==n&&(n.addEventListener?n.addEventListener("unload",i,!1):n.attachEvent&&n.attachEvent("onunload",i)),f.scope=ue(function(e){return s.appendChild(e).appendChild(P.createElement("div")),void 0!==e.querySelectorAll&&!e.querySelectorAll(":scope fieldset div").length}),f.attributes=ue(function(e){return e.className="i",!e.getAttribute("className")}),f.getElementsByTagName=ue(function(e){return e.appendChild(P.createComment("")),!e.getElementsByTagName("*").length}),f.getElementsByClassName=ee.test(P.getElementsByClassName),f.getById=ue(function(e){return s.appendChild(e).id=A,!P.getElementsByName||!P.getElementsByName(A).length}),f.getById?(S.filter.ID=function(e){var t=e.replace(oe,d);return function(e){return e.getAttribute("id")===t}},S.find.ID=function(e,t){if(void 0!==t.getElementById&&w){var n=t.getElementById(e);return n?[n]:[]}}):(S.filter.ID=function(e){var n=e.replace(oe,d);return function(e){var t=void 0!==e.getAttributeNode&&e.getAttributeNode("id");return t&&t.value===n}},S.find.ID=function(e,t){if(void 0!==t.getElementById&&w){var n,o,i,r=t.getElementById(e);if(r){if((n=r.getAttributeNode("id"))&&n.value===e)return[r];for(i=t.getElementsByName(e),o=0;r=i[o++];)if((n=r.getAttributeNode("id"))&&n.value===e)return[r]}return[]}}),S.find.TAG=f.getElementsByTagName?function(e,t){return void 0!==t.getElementsByTagName?t.getElementsByTagName(e):f.qsa?t.querySelectorAll(e):void 0}:function(e,t){var n,o=[],i=0,r=t.getElementsByTagName(e);if("*"!==e)return r;for(;n=r[i++];)1===n.nodeType&&o.push(n);return o},S.find.CLASS=f.getElementsByClassName&&function(e,t){if(void 0!==t.getElementsByClassName&&w)return t.getElementsByClassName(e)},u=[],b=[],(f.qsa=ee.test(P.querySelectorAll))&&(ue(function(e){var t;s.appendChild(e).innerHTML="<a id='"+A+"'></a><select id='"+A+"-\r\\' msallowcapture=''><option selected=''></option></select>",e.querySelectorAll("[msallowcapture^='']").length&&b.push("[*^$]="+R+"*(?:''|\"\")"),e.querySelectorAll("[selected]").length||b.push("\\["+R+"*(?:value|"+$+")"),e.querySelectorAll("[id~="+A+"-]").length||b.push("~="),(t=P.createElement("input")).setAttribute("name",""),e.appendChild(t),e.querySelectorAll("[name='']").length||b.push("\\["+R+"*name"+R+"*="+R+"*(?:''|\"\")"),e.querySelectorAll(":checked").length||b.push(":checked"),e.querySelectorAll("a#"+A+"+*").length||b.push(".#.+[+~]"),e.querySelectorAll("\\\f"),b.push("[\\r\\n\\f]")}),ue(function(e){e.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var t=P.createElement("input");t.setAttribute("type","hidden"),e.appendChild(t).setAttribute("name","D"),e.querySelectorAll("[name=d]").length&&b.push("name"+R+"*[*^$|!~]?="),2!==e.querySelectorAll(":enabled").length&&b.push(":enabled",":disabled"),s.appendChild(e).disabled=!0,2!==e.querySelectorAll(":disabled").length&&b.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),b.push(",.*:")})),(f.matchesSelector=ee.test(m=s.matches||s.webkitMatchesSelector||s.mozMatchesSelector||s.oMatchesSelector||s.msMatchesSelector))&&ue(function(e){f.disconnectedMatch=m.call(e,"*"),m.call(e,"[s!='']:x"),u.push("!=",X)}),b=b.length&&new RegExp(b.join("|")),u=u.length&&new RegExp(u.join("|")),t=ee.test(s.compareDocumentPosition),T=t||ee.test(s.contains)?function(e,t){var n=9===e.nodeType?e.documentElement:e,o=t&&t.parentNode;return e===o||!(!o||1!==o.nodeType||!(n.contains?n.contains(o):e.compareDocumentPosition&&16&e.compareDocumentPosition(o)))}:function(e,t){if(t)for(;t=t.parentNode;)if(t===e)return!0;return!1},B=t?function(e,t){if(e===t)return c=!0,0;var n=!e.compareDocumentPosition-!t.compareDocumentPosition;return n||(1&(n=(e.ownerDocument||e)==(t.ownerDocument||t)?e.compareDocumentPosition(t):1)||!f.sortDetached&&t.compareDocumentPosition(e)===n?e==P||e.ownerDocument==v&&T(v,e)?-1:t==P||t.ownerDocument==v&&T(v,t)?1:l?O(l,e)-O(l,t):0:4&n?-1:1)}:function(e,t){if(e===t)return c=!0,0;var n,o=0,i=e.parentNode,r=t.parentNode,a=[e],s=[t];if(!i||!r)return e==P?-1:t==P?1:i?-1:r?1:l?O(l,e)-O(l,t):0;if(i===r)return pe(e,t);for(n=e;n=n.parentNode;)a.unshift(n);for(n=t;n=n.parentNode;)s.unshift(n);for(;a[o]===s[o];)o++;return o?pe(a[o],s[o]):a[o]==v?-1:s[o]==v?1:0}),P},se.matches=function(e,t){return se(e,null,null,t)},se.matchesSelector=function(e,t){if(x(e),f.matchesSelector&&w&&!H[t+" "]&&(!u||!u.test(t))&&(!b||!b.test(t)))try{var n=m.call(e,t);if(n||f.disconnectedMatch||e.document&&11!==e.document.nodeType)return n}catch(e){H(t,!0)}return 0<se(t,P,null,[e]).length},se.contains=function(e,t){return(e.ownerDocument||e)!=P&&x(e),T(e,t)},se.attr=function(e,t){(e.ownerDocument||e)!=P&&x(e);var n=S.attrHandle[t.toLowerCase()],o=n&&D.call(S.attrHandle,t.toLowerCase())?n(e,t,!w):void 0;return void 0!==o?o:f.attributes||!w?e.getAttribute(t):(o=e.getAttributeNode(t))&&o.specified?o.value:null},se.escape=function(e){return(e+"").replace(ie,re)},se.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},se.uniqueSort=function(e){var t,n=[],o=0,i=0;if(c=!f.detectDuplicates,l=!f.sortStable&&e.slice(0),e.sort(B),c){for(;t=e[i++];)t===e[i]&&(o=n.push(i));for(;o--;)e.splice(n[o],1)}return l=null,e},r=se.getText=function(e){var t,n="",o=0,i=e.nodeType;if(i){if(1===i||9===i||11===i){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=r(e)}else if(3===i||4===i)return e.nodeValue}else for(;t=e[o++];)n+=r(t);return n},(S=se.selectors={cacheLength:50,createPseudo:ce,match:Y,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(oe,d),e[3]=(e[3]||e[4]||e[5]||"").replace(oe,d),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||se.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&se.error(e[0]),e},PSEUDO:function(e){var t,n=!e[6]&&e[2];return Y.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||"":n&&U.test(n)&&(t=h(n,!0))&&(t=n.indexOf(")",n.length-t)-n.length)&&(e[0]=e[0].slice(0,t),e[2]=n.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(oe,d).toLowerCase();return"*"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=C[e+" "];return t||(t=new RegExp("(^|"+R+")"+e+"("+R+"|$)"))&&C(e,function(e){return t.test("string"==typeof e.className&&e.className||void 0!==e.getAttribute&&e.getAttribute("class")||"")})},ATTR:function(n,o,i){return function(e){var t=se.attr(e,n);return null==t?"!="===o:!o||(t+="","="===o?t===i:"!="===o?t!==i:"^="===o?i&&0===t.indexOf(i):"*="===o?i&&-1<t.indexOf(i):"$="===o?i&&t.slice(-i.length)===i:"~="===o?-1<(" "+t.replace(W," ")+" ").indexOf(i):"|="===o&&(t===i||t.slice(0,i.length+1)===i+"-"))}},CHILD:function(h,e,t,g,b){var m="nth"!==h.slice(0,3),T="last"!==h.slice(-4),v="of-type"===e;return 1===g&&0===b?function(e){return!!e.parentNode}:function(e,t,n){var o,i,r,a,s,l,c=m!=T?"nextSibling":"previousSibling",u=e.parentNode,d=v&&e.nodeName.toLowerCase(),p=!n&&!v,f=!1;if(u){if(m){for(;c;){for(a=e;a=a[c];)if(v?a.nodeName.toLowerCase()===d:1===a.nodeType)return!1;l=c="only"===h&&!l&&"nextSibling"}return!0}if(l=[T?u.firstChild:u.lastChild],T&&p){for(f=(s=(o=(i=(r=(a=u)[A]||(a[A]={}))[a.uniqueID]||(r[a.uniqueID]={}))[h]||[])[0]===M&&o[1])&&o[2],a=s&&u.childNodes[s];a=++s&&a&&a[c]||(f=s=0)||l.pop();)if(1===a.nodeType&&++f&&a===e){i[h]=[M,s,f];break}}else if(p&&(f=s=(o=(i=(r=(a=e)[A]||(a[A]={}))[a.uniqueID]||(r[a.uniqueID]={}))[h]||[])[0]===M&&o[1]),!1===f)for(;(a=++s&&a&&a[c]||(f=s=0)||l.pop())&&((v?a.nodeName.toLowerCase()!==d:1!==a.nodeType)||!++f||(p&&((i=(r=a[A]||(a[A]={}))[a.uniqueID]||(r[a.uniqueID]={}))[h]=[M,f]),a!==e)););return(f-=b)===g||f%g==0&&0<=f/g}}},PSEUDO:function(e,r){var t,a=S.pseudos[e]||S.setFilters[e.toLowerCase()]||se.error("unsupported pseudo: "+e);return a[A]?a(r):1<a.length?(t=[e,e,"",r],S.setFilters.hasOwnProperty(e.toLowerCase())?ce(function(e,t){for(var n,o=a(e,r),i=o.length;i--;)e[n=O(e,o[i])]=!(t[n]=o[i])}):function(e){return a(e,0,t)}):a}},pseudos:{not:ce(function(e){var o=[],i=[],s=p(e.replace(_,"$1"));return s[A]?ce(function(e,t,n,o){for(var i,r=s(e,null,o,[]),a=e.length;a--;)(i=r[a])&&(e[a]=!(t[a]=i))}):function(e,t,n){return o[0]=e,s(o,null,n,i),o[0]=null,!i.pop()}}),has:ce(function(t){return function(e){return 0<se(t,e).length}}),contains:ce(function(t){return t=t.replace(oe,d),function(e){return-1<(e.textContent||r(e)).indexOf(t)}}),lang:ce(function(n){return K.test(n||"")||se.error("unsupported lang: "+n),n=n.replace(oe,d).toLowerCase(),function(e){var t;do{if(t=w?e.lang:e.getAttribute("xml:lang")||e.getAttribute("lang"))return(t=t.toLowerCase())===n||0===t.indexOf(n+"-")}while((e=e.parentNode)&&1===e.nodeType);return!1}}),target:function(e){var t=n.location&&n.location.hash;return t&&t.slice(1)===e.id},root:function(e){return e===s},focus:function(e){return e===P.activeElement&&(!P.hasFocus||P.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:fe(!1),disabled:fe(!0),checked:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,!0===e.selected},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!S.pseudos.empty(e)},header:function(e){return J.test(e.nodeName)},input:function(e){return Z.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&"button"===e.type||"button"===t},text:function(e){var t;return"input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(t=e.getAttribute("type"))||"text"===t.toLowerCase())},first:he(function(){return[0]}),last:he(function(e,t){return[t-1]}),eq:he(function(e,t,n){return[n<0?n+t:n]}),even:he(function(e,t){for(var n=0;n<t;n+=2)e.push(n);return e}),odd:he(function(e,t){for(var n=1;n<t;n+=2)e.push(n);return e}),lt:he(function(e,t,n){for(var o=n<0?n+t:t<n?t:n;0<=--o;)e.push(o);return e}),gt:he(function(e,t,n){for(var o=n<0?n+t:n;++o<t;)e.push(o);return e})}}).pseudos.nth=S.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})S.pseudos[e]=function(t){return function(e){return"input"===e.nodeName.toLowerCase()&&e.type===t}}(e);for(e in{submit:!0,reset:!0})S.pseudos[e]=function(n){return function(e){var t=e.nodeName.toLowerCase();return("input"===t||"button"===t)&&e.type===n}}(e);function be(){}function me(e){for(var t=0,n=e.length,o="";t<n;t++)o+=e[t].value;return o}function Te(s,e,t){var l=e.dir,c=e.next,u=c||l,d=t&&"parentNode"===u,p=o++;return e.first?function(e,t,n){for(;e=e[l];)if(1===e.nodeType||d)return s(e,t,n);return!1}:function(e,t,n){var o,i,r,a=[M,p];if(n){for(;e=e[l];)if((1===e.nodeType||d)&&s(e,t,n))return!0}else for(;e=e[l];)if(1===e.nodeType||d)if(i=(r=e[A]||(e[A]={}))[e.uniqueID]||(r[e.uniqueID]={}),c&&c===e.nodeName.toLowerCase())e=e[l]||e;else{if((o=i[u])&&o[0]===M&&o[1]===p)return a[2]=o[2];if((i[u]=a)[2]=s(e,t,n))return!0}return!1}}function ve(i){return 1<i.length?function(e,t,n){for(var o=i.length;o--;)if(!i[o](e,t,n))return!1;return!0}:i[0]}function Se(e,t,n,o,i){for(var r,a=[],s=0,l=e.length,c=null!=t;s<l;s++)(r=e[s])&&(n&&!n(r,o,i)||(a.push(r),c&&t.push(s)));return a}function ye(f,h,g,b,m,e){return b&&!b[A]&&(b=ye(b)),m&&!m[A]&&(m=ye(m,e)),ce(function(e,t,n,o){var i,r,a,s=[],l=[],c=t.length,u=e||function(e,t,n){for(var o=0,i=t.length;o<i;o++)se(e,t[o],n);return n}(h||"*",n.nodeType?[n]:n,[]),d=!f||!e&&h?u:Se(u,s,f,n,o),p=g?m||(e?f:c||b)?[]:t:d;if(g&&g(d,p,n,o),b)for(i=Se(p,l),b(i,[],n,o),r=i.length;r--;)(a=i[r])&&(p[l[r]]=!(d[l[r]]=a));if(e){if(m||f){if(m){for(i=[],r=p.length;r--;)(a=p[r])&&i.push(d[r]=a);m(null,p=[],i,o)}for(r=p.length;r--;)(a=p[r])&&-1<(i=m?O(e,a):s[r])&&(e[i]=!(t[i]=a))}}else p=Se(p===t?p.splice(c,p.length):p),m?m(null,t,p,o):k.apply(t,p)})}function xe(b,m){function e(e,t,n,o,i){var r,a,s,l=0,c="0",u=e&&[],d=[],p=y,f=e||v&&S.find.TAG("*",i),h=M+=null==p?1:Math.random()||.1,g=f.length;for(i&&(y=t==P||t||i);c!==g&&null!=(r=f[c]);c++){if(v&&r){for(a=0,t||r.ownerDocument==P||(x(r),n=!w);s=b[a++];)if(s(r,t||P,n)){o.push(r);break}i&&(M=h)}T&&((r=!s&&r)&&l--,e&&u.push(r))}if(l+=c,T&&c!==l){for(a=0;s=m[a++];)s(u,d,t,n);if(e){if(0<l)for(;c--;)u[c]||d[c]||(d[c]=I.call(o));d=Se(d)}k.apply(o,d),i&&!e&&0<d.length&&1<l+m.length&&se.uniqueSort(o)}return i&&(M=h,y=p),u}var T=0<m.length,v=0<b.length;return T?ce(e):e}return be.prototype=S.filters=S.pseudos,S.setFilters=new be,h=se.tokenize=function(e,t){var n,o,i,r,a,s,l,c=E[e+" "];if(c)return t?0:c.slice(0);for(a=e,s=[],l=S.preFilter;a;){for(r in n&&!(o=j.exec(a))||(o&&(a=a.slice(o[0].length)||a),s.push(i=[])),n=!1,(o=q.exec(a))&&(n=o.shift(),i.push({value:n,type:o[0].replace(_," ")}),a=a.slice(n.length)),S.filter)!(o=Y[r].exec(a))||l[r]&&!(o=l[r](o))||(n=o.shift(),i.push({value:n,type:r,matches:o}),a=a.slice(n.length));if(!n)break}return t?a.length:a?se.error(e):E(e,s).slice(0)},p=se.compile=function(e,t){var n,o=[],i=[],r=G[e+" "];if(!r){for(n=(t=t||h(e)).length;n--;)(r=function e(t){for(var i,n,o,r=t.length,a=S.relative[t[0].type],s=a||S.relative[" "],l=a?1:0,c=Te(function(e){return e===i},s,!0),u=Te(function(e){return-1<O(i,e)},s,!0),d=[function(e,t,n){var o=!a&&(n||t!==y)||((i=t).nodeType?c:u)(e,t,n);return i=null,o}];l<r;l++)if(n=S.relative[t[l].type])d=[Te(ve(d),n)];else{if((n=S.filter[t[l].type].apply(null,t[l].matches))[A]){for(o=++l;o<r&&!S.relative[t[o].type];o++);return ye(1<l&&ve(d),1<l&&me(t.slice(0,l-1).concat({value:" "===t[l-2].type?"*":""})).replace(_,"$1"),n,l<o&&e(t.slice(l,o)),o<r&&e(t=t.slice(o)),o<r&&me(t))}d.push(n)}return ve(d)}(t[n]))[A]?o.push(r):i.push(r);(r=G(e,xe(i,o))).selector=e}return r},g=se.select=function(e,t,n,o){var i,r,a,s,l,c="function"==typeof e&&e,u=!o&&h(e=c.selector||e);if(n=n||[],1===u.length){if(2<(r=u[0]=u[0].slice(0)).length&&"ID"===(a=r[0]).type&&9===t.nodeType&&w&&S.relative[r[1].type]){if(!(t=(S.find.ID(a.matches[0].replace(oe,d),t)||[])[0]))return n;c&&(t=t.parentNode),e=e.slice(r.shift().value.length)}for(i=Y.needsContext.test(e)?0:r.length;i--&&(a=r[i],!S.relative[s=a.type]);)if((l=S.find[s])&&(o=l(a.matches[0].replace(oe,d),ne.test(r[0].type)&&ge(t.parentNode)||t))){if(r.splice(i,1),!(e=o.length&&me(r)))return k.apply(n,o),n;break}}return(c||p(e,u))(o,t,!w,n,!t||ne.test(e)&&ge(t.parentNode)||t),n},f.sortStable=A.split("").sort(B).join("")===A,f.detectDuplicates=!!c,x(),f.sortDetached=ue(function(e){return 1&e.compareDocumentPosition(P.createElement("fieldset"))}),ue(function(e){return e.innerHTML="<a href='#'></a>","#"===e.firstChild.getAttribute("href")})||de("type|href|height|width",function(e,t,n){if(!n)return e.getAttribute(t,"type"===t.toLowerCase()?1:2)}),f.attributes&&ue(function(e){return e.innerHTML="<input/>",e.firstChild.setAttribute("value",""),""===e.firstChild.getAttribute("value")})||de("value",function(e,t,n){if(!n&&"input"===e.nodeName.toLowerCase())return e.defaultValue}),ue(function(e){return null==e.getAttribute("disabled")})||de($,function(e,t,n){var o;if(!n)return!0===e[t]?t.toLowerCase():(o=e.getAttributeNode(t))&&o.specified?o.value:null}),se}(P);A.find=f,A.expr=f.selectors,A.expr[":"]=A.expr.pseudos,A.uniqueSort=A.unique=f.uniqueSort,A.text=f.getText,A.isXMLDoc=f.isXML,A.contains=f.contains,A.escapeSelector=f.escape;function h(e,t,n){for(var o=[],i=void 0!==n;(e=e[t])&&9!==e.nodeType;)if(1===e.nodeType){if(i&&A(e).is(n))break;o.push(e)}return o}function x(e,t){for(var n=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&n.push(e);return n}var M=A.expr.match.needsContext;function C(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()}var E=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;function G(e,n,o){return v(n)?A.grep(e,function(e,t){return!!n.call(e,t,e)!==o}):n.nodeType?A.grep(e,function(e){return e===n!==o}):"string"!=typeof n?A.grep(e,function(e){return-1<i.call(n,e)!==o}):A.filter(n,e,o)}A.filter=function(e,t,n){var o=t[0];return n&&(e=":not("+e+")"),1===t.length&&1===o.nodeType?A.find.matchesSelector(o,e)?[o]:[]:A.find.matches(e,A.grep(t,function(e){return 1===e.nodeType}))},A.fn.extend({find:function(e){var t,n,o=this.length,i=this;if("string"!=typeof e)return this.pushStack(A(e).filter(function(){for(t=0;t<o;t++)if(A.contains(i[t],this))return!0}));for(n=this.pushStack([]),t=0;t<o;t++)A.find(e,i[t],n);return 1<o?A.uniqueSort(n):n},filter:function(e){return this.pushStack(G(this,e||[],!1))},not:function(e){return this.pushStack(G(this,e||[],!0))},is:function(e){return!!G(this,"string"==typeof e&&M.test(e)?A(e):e||[],!1).length}});var H,B=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;(A.fn.init=function(e,t,n){var o,i;if(!e)return this;if(n=n||H,"string"!=typeof e)return e.nodeType?(this[0]=e,this.length=1,this):v(e)?void 0!==n.ready?n.ready(e):e(A):A.makeArray(e,this);if(!(o="<"===e[0]&&">"===e[e.length-1]&&3<=e.length?[null,e,null]:B.exec(e))||!o[1]&&t)return!t||t.jquery?(t||n).find(e):this.constructor(t).find(e);if(o[1]){if(t=t instanceof A?t[0]:t,A.merge(this,A.parseHTML(o[1],t&&t.nodeType?t.ownerDocument||t:w,!0)),E.test(o[1])&&A.isPlainObject(t))for(o in t)v(this[o])?this[o](t[o]):this.attr(o,t[o]);return this}return(i=w.getElementById(o[2]))&&(this[0]=i,this.length=1),this}).prototype=A.fn,H=A(w);var D=/^(?:parents|prev(?:Until|All))/,I={children:!0,contents:!0,next:!0,prev:!0};function L(e,t){for(;(e=e[t])&&1!==e.nodeType;);return e}A.fn.extend({has:function(e){var t=A(e,this),n=t.length;return this.filter(function(){for(var e=0;e<n;e++)if(A.contains(this,t[e]))return!0})},closest:function(e,t){var n,o=0,i=this.length,r=[],a="string"!=typeof e&&A(e);if(!M.test(e))for(;o<i;o++)for(n=this[o];n&&n!==t;n=n.parentNode)if(n.nodeType<11&&(a?-1<a.index(n):1===n.nodeType&&A.find.matchesSelector(n,e))){r.push(n);break}return this.pushStack(1<r.length?A.uniqueSort(r):r)},index:function(e){return e?"string"==typeof e?i.call(A(e),this[0]):i.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(A.uniqueSort(A.merge(this.get(),A(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),A.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return h(e,"parentNode")},parentsUntil:function(e,t,n){return h(e,"parentNode",n)},next:function(e){return L(e,"nextSibling")},prev:function(e){return L(e,"previousSibling")},nextAll:function(e){return h(e,"nextSibling")},prevAll:function(e){return h(e,"previousSibling")},nextUntil:function(e,t,n){return h(e,"nextSibling",n)},prevUntil:function(e,t,n){return h(e,"previousSibling",n)},siblings:function(e){return x((e.parentNode||{}).firstChild,e)},children:function(e){return x(e.firstChild)},contents:function(e){return null!=e.contentDocument&&o(e.contentDocument)?e.contentDocument:(C(e,"template")&&(e=e.content||e),A.merge([],e.childNodes))}},function(o,i){A.fn[o]=function(e,t){var n=A.map(this,i,e);return"Until"!==o.slice(-5)&&(t=e),t&&"string"==typeof t&&(n=A.filter(t,n)),1<this.length&&(I[o]||A.uniqueSort(n),D.test(o)&&n.reverse()),this.pushStack(n)}});var k=/[^\x20\t\r\n\f]+/g;function N(e){return e}function O(e){throw e}function $(e,t,n,o){var i;try{e&&v(i=e.promise)?i.call(e).done(t).fail(n):e&&v(i=e.then)?i.call(e,t,n):t.apply(void 0,[e].slice(o))}catch(e){n.apply(void 0,[e])}}A.Callbacks=function(o){var e,n;o="string"==typeof o?(e=o,n={},A.each(e.match(k)||[],function(e,t){n[t]=!0}),n):A.extend({},o);function i(){for(s=s||o.once,a=r=!0;c.length;u=-1)for(t=c.shift();++u<l.length;)!1===l[u].apply(t[0],t[1])&&o.stopOnFalse&&(u=l.length,t=!1);o.memory||(t=!1),r=!1,s&&(l=t?[]:"")}var r,t,a,s,l=[],c=[],u=-1,d={add:function(){return l&&(t&&!r&&(u=l.length-1,c.push(t)),function n(e){A.each(e,function(e,t){v(t)?o.unique&&d.has(t)||l.push(t):t&&t.length&&"string"!==y(t)&&n(t)})}(arguments),t&&!r&&i()),this},remove:function(){return A.each(arguments,function(e,t){for(var n;-1<(n=A.inArray(t,l,n));)l.splice(n,1),n<=u&&u--}),this},has:function(e){return e?-1<A.inArray(e,l):0<l.length},empty:function(){return l=l&&[],this},disable:function(){return s=c=[],l=t="",this},disabled:function(){return!l},lock:function(){return s=c=[],t||r||(l=t=""),this},locked:function(){return!!s},fireWith:function(e,t){return s||(t=[e,(t=t||[]).slice?t.slice():t],c.push(t),r||i()),this},fire:function(){return d.fireWith(this,arguments),this},fired:function(){return!!a}};return d},A.extend({Deferred:function(e){var r=[["notify","progress",A.Callbacks("memory"),A.Callbacks("memory"),2],["resolve","done",A.Callbacks("once memory"),A.Callbacks("once memory"),0,"resolved"],["reject","fail",A.Callbacks("once memory"),A.Callbacks("once memory"),1,"rejected"]],i="pending",a={state:function(){return i},always:function(){return s.done(arguments).fail(arguments),this},catch:function(e){return a.then(null,e)},pipe:function(){var i=arguments;return A.Deferred(function(o){A.each(r,function(e,t){var n=v(i[t[4]])&&i[t[4]];s[t[1]](function(){var e=n&&n.apply(this,arguments);e&&v(e.promise)?e.promise().progress(o.notify).done(o.resolve).fail(o.reject):o[t[0]+"With"](this,n?[e]:arguments)})}),i=null}).promise()},then:function(t,n,o){var l=0;function c(i,r,a,s){return function(){function e(){var e,t;if(!(i<l)){if((e=a.apply(n,o))===r.promise())throw new TypeError("Thenable self-resolution");t=e&&("object"===_typeof(e)||"function"==typeof e)&&e.then,v(t)?s?t.call(e,c(l,r,N,s),c(l,r,O,s)):(l++,t.call(e,c(l,r,N,s),c(l,r,O,s),c(l,r,N,r.notifyWith))):(a!==N&&(n=void 0,o=[e]),(s||r.resolveWith)(n,o))}}var n=this,o=arguments,t=s?e:function(){try{e()}catch(e){A.Deferred.exceptionHook&&A.Deferred.exceptionHook(e,t.stackTrace),l<=i+1&&(a!==O&&(n=void 0,o=[e]),r.rejectWith(n,o))}};i?t():(A.Deferred.getStackHook&&(t.stackTrace=A.Deferred.getStackHook()),P.setTimeout(t))}}return A.Deferred(function(e){r[0][3].add(c(0,e,v(o)?o:N,e.notifyWith)),r[1][3].add(c(0,e,v(t)?t:N)),r[2][3].add(c(0,e,v(n)?n:O))}).promise()},promise:function(e){return null!=e?A.extend(e,a):a}},s={};return A.each(r,function(e,t){var n=t[2],o=t[5];a[t[1]]=n.add,o&&n.add(function(){i=o},r[3-e][2].disable,r[3-e][3].disable,r[0][2].lock,r[0][3].lock),n.add(t[3].fire),s[t[0]]=function(){return s[t[0]+"With"](this===s?void 0:this,arguments),this},s[t[0]+"With"]=n.fireWith}),a.promise(s),e&&e.call(s,s),s},when:function(e){function t(t){return function(e){i[t]=this,r[t]=1<arguments.length?s.call(arguments):e,--n||a.resolveWith(i,r)}}var n=arguments.length,o=n,i=Array(o),r=s.call(arguments),a=A.Deferred();if(n<=1&&($(e,a.done(t(o)).resolve,a.reject,!n),"pending"===a.state()||v(r[o]&&r[o].then)))return a.then();for(;o--;)$(r[o],t(o),a.reject);return a.promise()}});var R=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;A.Deferred.exceptionHook=function(e,t){P.console&&P.console.warn&&e&&R.test(e.name)&&P.console.warn("jQuery.Deferred exception: "+e.message,e.stack,t)},A.readyException=function(e){P.setTimeout(function(){throw e})};var F=A.Deferred();function V(){w.removeEventListener("DOMContentLoaded",V),P.removeEventListener("load",V),A.ready()}A.fn.ready=function(e){return F.then(e).catch(function(e){A.readyException(e)}),this},A.extend({isReady:!1,readyWait:1,ready:function(e){(!0===e?--A.readyWait:A.isReady)||(A.isReady=!0)!==e&&0<--A.readyWait||F.resolveWith(w,[A])}}),A.ready.then=F.then,"complete"===w.readyState||"loading"!==w.readyState&&!w.documentElement.doScroll?P.setTimeout(A.ready):(w.addEventListener("DOMContentLoaded",V),P.addEventListener("load",V));function X(e,t,n,o,i,r,a){var s=0,l=e.length,c=null==n;if("object"===y(n))for(s in i=!0,n)X(e,t,s,n[s],!0,r,a);else if(void 0!==o&&(i=!0,v(o)||(a=!0),c&&(t=a?(t.call(e,o),null):(c=t,function(e,t,n){return c.call(A(e),n)})),t))for(;s<l;s++)t(e[s],n,a?o:o.call(e[s],s,t(e[s],n)));return i?e:c?t.call(e):l?t(e[0],n):r}var W=/^-ms-/,_=/-([a-z])/g;function j(e,t){return t.toUpperCase()}function q(e){return e.replace(W,"ms-").replace(_,j)}function z(e){return 1===e.nodeType||9===e.nodeType||!+e.nodeType}function U(){this.expando=A.expando+U.uid++}U.uid=1,U.prototype={cache:function(e){var t=e[this.expando];return t||(t={},z(e)&&(e.nodeType?e[this.expando]=t:Object.defineProperty(e,this.expando,{value:t,configurable:!0}))),t},set:function(e,t,n){var o,i=this.cache(e);if("string"==typeof t)i[q(t)]=n;else for(o in t)i[q(o)]=t[o];return i},get:function(e,t){return void 0===t?this.cache(e):e[this.expando]&&e[this.expando][q(t)]},access:function(e,t,n){return void 0===t||t&&"string"==typeof t&&void 0===n?this.get(e,t):(this.set(e,t,n),void 0!==n?n:t)},remove:function(e,t){var n,o=e[this.expando];if(void 0!==o){if(void 0!==t){n=(t=Array.isArray(t)?t.map(q):(t=q(t))in o?[t]:t.match(k)||[]).length;for(;n--;)delete o[t[n]]}void 0!==t&&!A.isEmptyObject(o)||(e.nodeType?e[this.expando]=void 0:delete e[this.expando])}},hasData:function(e){var t=e[this.expando];return void 0!==t&&!A.isEmptyObject(t)}};var K=new U,Y=new U,Q=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,Z=/[A-Z]/g;function J(e,t,n){var o,i;if(void 0===n&&1===e.nodeType)if(o="data-"+t.replace(Z,"-$&").toLowerCase(),"string"==typeof(n=e.getAttribute(o))){try{n="true"===(i=n)||"false"!==i&&("null"===i?null:i===+i+""?+i:Q.test(i)?JSON.parse(i):i)}catch(e){}Y.set(e,t,n)}else n=void 0;return n}A.extend({hasData:function(e){return Y.hasData(e)||K.hasData(e)},data:function(e,t,n){return Y.access(e,t,n)},removeData:function(e,t){Y.remove(e,t)},_data:function(e,t,n){return K.access(e,t,n)},_removeData:function(e,t){K.remove(e,t)}}),A.fn.extend({data:function(n,e){var t,o,i,r=this[0],a=r&&r.attributes;if(void 0!==n)return"object"===_typeof(n)?this.each(function(){Y.set(this,n)}):X(this,function(e){var t;return r&&void 0===e?void 0!==(t=Y.get(r,n))||void 0!==(t=J(r,n))?t:void 0:void this.each(function(){Y.set(this,n,e)})},null,e,1<arguments.length,null,!0);if(this.length&&(i=Y.get(r),1===r.nodeType&&!K.get(r,"hasDataAttrs"))){for(t=a.length;t--;)a[t]&&0===(o=a[t].name).indexOf("data-")&&(o=q(o.slice(5)),J(r,o,i[o]));K.set(r,"hasDataAttrs",!0)}return i},removeData:function(e){return this.each(function(){Y.remove(this,e)})}}),A.extend({queue:function(e,t,n){var o;if(e)return t=(t||"fx")+"queue",o=K.get(e,t),n&&(!o||Array.isArray(n)?o=K.access(e,t,A.makeArray(n)):o.push(n)),o||[]},dequeue:function(e,t){t=t||"fx";var n=A.queue(e,t),o=n.length,i=n.shift(),r=A._queueHooks(e,t);"inprogress"===i&&(i=n.shift(),o--),i&&("fx"===t&&n.unshift("inprogress"),delete r.stop,i.call(e,function(){A.dequeue(e,t)},r)),!o&&r&&r.empty.fire()},_queueHooks:function(e,t){var n=t+"queueHooks";return K.get(e,n)||K.access(e,n,{empty:A.Callbacks("once memory").add(function(){K.remove(e,[t+"queue",n])})})}}),A.fn.extend({queue:function(t,n){var e=2;return"string"!=typeof t&&(n=t,t="fx",e--),arguments.length<e?A.queue(this[0],t):void 0===n?this:this.each(function(){var e=A.queue(this,t,n);A._queueHooks(this,t),"fx"===t&&"inprogress"!==e[0]&&A.dequeue(this,t)})},dequeue:function(e){return this.each(function(){A.dequeue(this,e)})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,t){function n(){--i||r.resolveWith(a,[a])}var o,i=1,r=A.Deferred(),a=this,s=this.length;for("string"!=typeof e&&(t=e,e=void 0),e=e||"fx";s--;)(o=K.get(a[s],e+"queueHooks"))&&o.empty&&(i++,o.empty.add(n));return n(),r.promise(t)}});var ee=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,te=new RegExp("^(?:([+-])=|)("+ee+")([a-z%]*)$","i"),ne=["Top","Right","Bottom","Left"],oe=w.documentElement,ie=function(e){return A.contains(e.ownerDocument,e)},re={composed:!0};oe.getRootNode&&(ie=function(e){return A.contains(e.ownerDocument,e)||e.getRootNode(re)===e.ownerDocument});var ae=function(e,t){return"none"===(e=t||e).style.display||""===e.style.display&&ie(e)&&"none"===A.css(e,"display")};function se(e,t,n,o){var i,r,a=20,s=o?function(){return o.cur()}:function(){return A.css(e,t,"")},l=s(),c=n&&n[3]||(A.cssNumber[t]?"":"px"),u=e.nodeType&&(A.cssNumber[t]||"px"!==c&&+l)&&te.exec(A.css(e,t));if(u&&u[3]!==c){for(l/=2,c=c||u[3],u=+l||1;a--;)A.style(e,t,u+c),(1-r)*(1-(r=s()/l||.5))<=0&&(a=0),u/=r;u*=2,A.style(e,t,u+c),n=n||[]}return n&&(u=+u||+l||0,i=n[1]?u+(n[1]+1)*n[2]:+n[2],o&&(o.unit=c,o.start=u,o.end=i)),i}var le={};function ce(e,t){for(var n,o,i,r,a,s,l,c=[],u=0,d=e.length;u<d;u++)(o=e[u]).style&&(n=o.style.display,t?("none"===n&&(c[u]=K.get(o,"display")||null,c[u]||(o.style.display="")),""===o.style.display&&ae(o)&&(c[u]=(l=s=a=r=void 0,a=(i=o).ownerDocument,s=i.nodeName,(l=le[s])||(r=a.body.appendChild(a.createElement(s)),l=A.css(r,"display"),r.parentNode.removeChild(r),"none"===l&&(l="block"),le[s]=l)))):"none"!==n&&(c[u]="none",K.set(o,"display",n)));for(u=0;u<d;u++)null!=c[u]&&(e[u].style.display=c[u]);return e}A.fn.extend({show:function(){return ce(this,!0)},hide:function(){return ce(this)},toggle:function(e){return"boolean"==typeof e?e?this.show():this.hide():this.each(function(){ae(this)?A(this).show():A(this).hide()})}});var ue,de,pe=/^(?:checkbox|radio)$/i,fe=/<([a-z][^\/\0>\x20\t\r\n\f]*)/i,he=/^$|^module$|\/(?:java|ecma)script/i;ue=w.createDocumentFragment().appendChild(w.createElement("div")),(de=w.createElement("input")).setAttribute("type","radio"),de.setAttribute("checked","checked"),de.setAttribute("name","t"),ue.appendChild(de),T.checkClone=ue.cloneNode(!0).cloneNode(!0).lastChild.checked,ue.innerHTML="<textarea>x</textarea>",T.noCloneChecked=!!ue.cloneNode(!0).lastChild.defaultValue,ue.innerHTML="<option></option>",T.option=!!ue.lastChild;var ge={thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};function be(e,t){var n=void 0!==e.getElementsByTagName?e.getElementsByTagName(t||"*"):void 0!==e.querySelectorAll?e.querySelectorAll(t||"*"):[];return void 0===t||t&&C(e,t)?A.merge([e],n):n}function me(e,t){for(var n=0,o=e.length;n<o;n++)K.set(e[n],"globalEval",!t||K.get(t[n],"globalEval"))}ge.tbody=ge.tfoot=ge.colgroup=ge.caption=ge.thead,ge.th=ge.td,T.option||(ge.optgroup=ge.option=[1,"<select multiple='multiple'>","</select>"]);var Te=/<|&#?\w+;/;function ve(e,t,n,o,i){for(var r,a,s,l,c,u,d=t.createDocumentFragment(),p=[],f=0,h=e.length;f<h;f++)if((r=e[f])||0===r)if("object"===y(r))A.merge(p,r.nodeType?[r]:r);else if(Te.test(r)){for(a=a||d.appendChild(t.createElement("div")),s=(fe.exec(r)||["",""])[1].toLowerCase(),l=ge[s]||ge._default,a.innerHTML=l[1]+A.htmlPrefilter(r)+l[2],u=l[0];u--;)a=a.lastChild;A.merge(p,a.childNodes),(a=d.firstChild).textContent=""}else p.push(t.createTextNode(r));for(d.textContent="",f=0;r=p[f++];)if(o&&-1<A.inArray(r,o))i&&i.push(r);else if(c=ie(r),a=be(d.appendChild(r),"script"),c&&me(a),n)for(u=0;r=a[u++];)he.test(r.type||"")&&n.push(r);return d}var Se=/^key/,ye=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,xe=/^([^.]*)(?:\.(.+)|)/;function Pe(){return!0}function we(){return!1}function Ae(e,t){return e===function(){try{return w.activeElement}catch(e){}}()==("focus"===t)}function Me(e,t,n,o,i,r){var a,s;if("object"===_typeof(t)){for(s in"string"!=typeof n&&(o=o||n,n=void 0),t)Me(e,s,n,o,t[s],r);return e}if(null==o&&null==i?(i=n,o=n=void 0):null==i&&("string"==typeof n?(i=o,o=void 0):(i=o,o=n,n=void 0)),!1===i)i=we;else if(!i)return e;return 1===r&&(a=i,(i=function(e){return A().off(e),a.apply(this,arguments)}).guid=a.guid||(a.guid=A.guid++)),e.each(function(){A.event.add(this,t,i,o,n)})}function Ce(e,i,r){r?(K.set(e,i,!1),A.event.add(e,i,{namespace:!1,handler:function(e){var t,n,o=K.get(this,i);if(1&e.isTrigger&&this[i]){if(o.length)(A.event.special[i]||{}).delegateType&&e.stopPropagation();else if(o=s.call(arguments),K.set(this,i,o),t=r(this,i),this[i](),o!==(n=K.get(this,i))||t?K.set(this,i,!1):n={},o!==n)return e.stopImmediatePropagation(),e.preventDefault(),n.value}else o.length&&(K.set(this,i,{value:A.event.trigger(A.extend(o[0],A.Event.prototype),o.slice(1),this)}),e.stopImmediatePropagation())}})):void 0===K.get(e,i)&&A.event.add(e,i,Pe)}A.event={global:{},add:function(t,e,n,o,i){var r,a,s,l,c,u,d,p,f,h,g,b=K.get(t);if(z(t))for(n.handler&&(n=(r=n).handler,i=r.selector),i&&A.find.matchesSelector(oe,i),n.guid||(n.guid=A.guid++),(l=b.events)||(l=b.events=Object.create(null)),(a=b.handle)||(a=b.handle=function(e){return void 0!==A&&A.event.triggered!==e.type?A.event.dispatch.apply(t,arguments):void 0}),c=(e=(e||"").match(k)||[""]).length;c--;)f=g=(s=xe.exec(e[c])||[])[1],h=(s[2]||"").split(".").sort(),f&&(d=A.event.special[f]||{},f=(i?d.delegateType:d.bindType)||f,d=A.event.special[f]||{},u=A.extend({type:f,origType:g,data:o,handler:n,guid:n.guid,selector:i,needsContext:i&&A.expr.match.needsContext.test(i),namespace:h.join(".")},r),(p=l[f])||((p=l[f]=[]).delegateCount=0,d.setup&&!1!==d.setup.call(t,o,h,a)||t.addEventListener&&t.addEventListener(f,a)),d.add&&(d.add.call(t,u),u.handler.guid||(u.handler.guid=n.guid)),i?p.splice(p.delegateCount++,0,u):p.push(u),A.event.global[f]=!0)},remove:function(e,t,n,o,i){var r,a,s,l,c,u,d,p,f,h,g,b=K.hasData(e)&&K.get(e);if(b&&(l=b.events)){for(c=(t=(t||"").match(k)||[""]).length;c--;)if(f=g=(s=xe.exec(t[c])||[])[1],h=(s[2]||"").split(".").sort(),f){for(d=A.event.special[f]||{},p=l[f=(o?d.delegateType:d.bindType)||f]||[],s=s[2]&&new RegExp("(^|\\.)"+h.join("\\.(?:.*\\.|)")+"(\\.|$)"),a=r=p.length;r--;)u=p[r],!i&&g!==u.origType||n&&n.guid!==u.guid||s&&!s.test(u.namespace)||o&&o!==u.selector&&("**"!==o||!u.selector)||(p.splice(r,1),u.selector&&p.delegateCount--,d.remove&&d.remove.call(e,u));a&&!p.length&&(d.teardown&&!1!==d.teardown.call(e,h,b.handle)||A.removeEvent(e,f,b.handle),delete l[f])}else for(f in l)A.event.remove(e,f+t[c],n,o,!0);A.isEmptyObject(l)&&K.remove(e,"handle events")}},dispatch:function(e){var t,n,o,i,r,a,s=new Array(arguments.length),l=A.event.fix(e),c=(K.get(this,"events")||Object.create(null))[l.type]||[],u=A.event.special[l.type]||{};for(s[0]=l,t=1;t<arguments.length;t++)s[t]=arguments[t];if(l.delegateTarget=this,!u.preDispatch||!1!==u.preDispatch.call(this,l)){for(a=A.event.handlers.call(this,l,c),t=0;(i=a[t++])&&!l.isPropagationStopped();)for(l.currentTarget=i.elem,n=0;(r=i.handlers[n++])&&!l.isImmediatePropagationStopped();)l.rnamespace&&!1!==r.namespace&&!l.rnamespace.test(r.namespace)||(l.handleObj=r,l.data=r.data,void 0!==(o=((A.event.special[r.origType]||{}).handle||r.handler).apply(i.elem,s))&&!1===(l.result=o)&&(l.preventDefault(),l.stopPropagation()));return u.postDispatch&&u.postDispatch.call(this,l),l.result}},handlers:function(e,t){var n,o,i,r,a,s=[],l=t.delegateCount,c=e.target;if(l&&c.nodeType&&!("click"===e.type&&1<=e.button))for(;c!==this;c=c.parentNode||this)if(1===c.nodeType&&("click"!==e.type||!0!==c.disabled)){for(r=[],a={},n=0;n<l;n++)void 0===a[i=(o=t[n]).selector+" "]&&(a[i]=o.needsContext?-1<A(i,this).index(c):A.find(i,this,null,[c]).length),a[i]&&r.push(o);r.length&&s.push({elem:c,handlers:r})}return c=this,l<t.length&&s.push({elem:c,handlers:t.slice(l)}),s},addProp:function(t,e){Object.defineProperty(A.Event.prototype,t,{enumerable:!0,configurable:!0,get:v(e)?function(){if(this.originalEvent)return e(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[t]},set:function(e){Object.defineProperty(this,t,{enumerable:!0,configurable:!0,writable:!0,value:e})}})},fix:function(e){return e[A.expando]?e:new A.Event(e)},special:{load:{noBubble:!0},click:{setup:function(e){var t=this||e;return pe.test(t.type)&&t.click&&C(t,"input")&&Ce(t,"click",Pe),!1},trigger:function(e){var t=this||e;return pe.test(t.type)&&t.click&&C(t,"input")&&Ce(t,"click"),!0},_default:function(e){var t=e.target;return pe.test(t.type)&&t.click&&C(t,"input")&&K.get(t,"click")||C(t,"a")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}}},A.removeEvent=function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n)},A.Event=function(e,t){if(!(this instanceof A.Event))return new A.Event(e,t);e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&!1===e.returnValue?Pe:we,this.target=e.target&&3===e.target.nodeType?e.target.parentNode:e.target,this.currentTarget=e.currentTarget,this.relatedTarget=e.relatedTarget):this.type=e,t&&A.extend(this,t),this.timeStamp=e&&e.timeStamp||Date.now(),this[A.expando]=!0},A.Event.prototype={constructor:A.Event,isDefaultPrevented:we,isPropagationStopped:we,isImmediatePropagationStopped:we,isSimulated:!1,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=Pe,e&&!this.isSimulated&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=Pe,e&&!this.isSimulated&&e.stopPropagation()},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=Pe,e&&!this.isSimulated&&e.stopImmediatePropagation(),this.stopPropagation()}},A.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,char:!0,code:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(e){var t=e.button;return null==e.which&&Se.test(e.type)?null!=e.charCode?e.charCode:e.keyCode:!e.which&&void 0!==t&&ye.test(e.type)?1&t?1:2&t?3:4&t?2:0:e.which}},A.event.addProp),A.each({focus:"focusin",blur:"focusout"},function(e,t){A.event.special[e]={setup:function(){return Ce(this,e,Ae),!1},trigger:function(){return Ce(this,e),!0},delegateType:t}}),A.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(e,i){A.event.special[e]={delegateType:i,bindType:i,handle:function(e){var t,n=e.relatedTarget,o=e.handleObj;return n&&(n===this||A.contains(this,n))||(e.type=o.origType,t=o.handler.apply(this,arguments),e.type=i),t}}}),A.fn.extend({on:function(e,t,n,o){return Me(this,e,t,n,o)},one:function(e,t,n,o){return Me(this,e,t,n,o,1)},off:function(e,t,n){var o,i;if(e&&e.preventDefault&&e.handleObj)return o=e.handleObj,A(e.delegateTarget).off(o.namespace?o.origType+"."+o.namespace:o.origType,o.selector,o.handler),this;if("object"!==_typeof(e))return!1!==t&&"function"!=typeof t||(n=t,t=void 0),!1===n&&(n=we),this.each(function(){A.event.remove(this,e,n,t)});for(i in e)this.off(i,t,e[i]);return this}});var Ee=/<script|<style|<link/i,Ge=/checked\s*(?:[^=]|=\s*.checked.)/i,He=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;function Be(e,t){return C(e,"table")&&C(11!==t.nodeType?t:t.firstChild,"tr")&&A(e).children("tbody")[0]||e}function De(e){return e.type=(null!==e.getAttribute("type"))+"/"+e.type,e}function Ie(e){return"true/"===(e.type||"").slice(0,5)?e.type=e.type.slice(5):e.removeAttribute("type"),e}function Le(e,t){var n,o,i,r,a,s;if(1===t.nodeType){if(K.hasData(e)&&(s=K.get(e).events))for(i in K.remove(t,"handle events"),s)for(n=0,o=s[i].length;n<o;n++)A.event.add(t,i,s[i][n]);Y.hasData(e)&&(r=Y.access(e),a=A.extend({},r),Y.set(t,a))}}function ke(n,o,i,r){o=b(o);var e,t,a,s,l,c,u=0,d=n.length,p=d-1,f=o[0],h=v(f);if(h||1<d&&"string"==typeof f&&!T.checkClone&&Ge.test(f))return n.each(function(e){var t=n.eq(e);h&&(o[0]=f.call(this,e,t.html())),ke(t,o,i,r)});if(d&&(t=(e=ve(o,n[0].ownerDocument,!1,n,r)).firstChild,1===e.childNodes.length&&(e=t),t||r)){for(s=(a=A.map(be(e,"script"),De)).length;u<d;u++)l=e,u!==p&&(l=A.clone(l,!0,!0),s&&A.merge(a,be(l,"script"))),i.call(n[u],l,u);if(s)for(c=a[a.length-1].ownerDocument,A.map(a,Ie),u=0;u<s;u++)l=a[u],he.test(l.type||"")&&!K.access(l,"globalEval")&&A.contains(c,l)&&(l.src&&"module"!==(l.type||"").toLowerCase()?A._evalUrl&&!l.noModule&&A._evalUrl(l.src,{nonce:l.nonce||l.getAttribute("nonce")},c):S(l.textContent.replace(He,""),l,c))}return n}function Ne(e,t,n){for(var o,i=t?A.filter(t,e):e,r=0;null!=(o=i[r]);r++)n||1!==o.nodeType||A.cleanData(be(o)),o.parentNode&&(n&&ie(o)&&me(be(o,"script")),o.parentNode.removeChild(o));return e}A.extend({htmlPrefilter:function(e){return e},clone:function(e,t,n){var o,i,r,a,s,l,c,u=e.cloneNode(!0),d=ie(e);if(!(T.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||A.isXMLDoc(e)))for(a=be(u),o=0,i=(r=be(e)).length;o<i;o++)s=r[o],l=a[o],c=void 0,"input"===(c=l.nodeName.toLowerCase())&&pe.test(s.type)?l.checked=s.checked:"input"!==c&&"textarea"!==c||(l.defaultValue=s.defaultValue);if(t)if(n)for(r=r||be(e),a=a||be(u),o=0,i=r.length;o<i;o++)Le(r[o],a[o]);else Le(e,u);return 0<(a=be(u,"script")).length&&me(a,!d&&be(e,"script")),u},cleanData:function(e){for(var t,n,o,i=A.event.special,r=0;void 0!==(n=e[r]);r++)if(z(n)){if(t=n[K.expando]){if(t.events)for(o in t.events)i[o]?A.event.remove(n,o):A.removeEvent(n,o,t.handle);n[K.expando]=void 0}n[Y.expando]&&(n[Y.expando]=void 0)}}}),A.fn.extend({detach:function(e){return Ne(this,e,!0)},remove:function(e){return Ne(this,e)},text:function(e){return X(this,function(e){return void 0===e?A.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=e)})},null,e,arguments.length)},append:function(){return ke(this,arguments,function(e){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||Be(this,e).appendChild(e)})},prepend:function(){return ke(this,arguments,function(e){var t;1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(t=Be(this,e)).insertBefore(e,t.firstChild)})},before:function(){return ke(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return ke(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},empty:function(){for(var e,t=0;null!=(e=this[t]);t++)1===e.nodeType&&(A.cleanData(be(e,!1)),e.textContent="");return this},clone:function(e,t){return e=null!=e&&e,t=null==t?e:t,this.map(function(){return A.clone(this,e,t)})},html:function(e){return X(this,function(e){var t=this[0]||{},n=0,o=this.length;if(void 0===e&&1===t.nodeType)return t.innerHTML;if("string"==typeof e&&!Ee.test(e)&&!ge[(fe.exec(e)||["",""])[1].toLowerCase()]){e=A.htmlPrefilter(e);try{for(;n<o;n++)1===(t=this[n]||{}).nodeType&&(A.cleanData(be(t,!1)),t.innerHTML=e);t=0}catch(e){}}t&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var n=[];return ke(this,arguments,function(e){var t=this.parentNode;A.inArray(this,n)<0&&(A.cleanData(be(this)),t&&t.replaceChild(e,this))},n)}}),A.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,a){A.fn[e]=function(e){for(var t,n=[],o=A(e),i=o.length-1,r=0;r<=i;r++)t=r===i?this:this.clone(!0),A(o[r])[a](t),l.apply(n,t.get());return this.pushStack(n)}});function Oe(e,t,n){var o,i,r={};for(i in t)r[i]=e.style[i],e.style[i]=t[i];for(i in o=n.call(e),t)e.style[i]=r[i];return o}var $e,Re,Fe,Ve,Xe,We,_e,je,qe=new RegExp("^("+ee+")(?!px)[a-z%]+$","i"),ze=function(e){var t=e.ownerDocument.defaultView;return t&&t.opener||(t=P),t.getComputedStyle(e)},Ue=new RegExp(ne.join("|"),"i");function Ke(){var e;je&&(_e.style.cssText="position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",je.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",oe.appendChild(_e).appendChild(je),e=P.getComputedStyle(je),$e="1%"!==e.top,We=12===Ye(e.marginLeft),je.style.right="60%",Ve=36===Ye(e.right),Re=36===Ye(e.width),je.style.position="absolute",Fe=12===Ye(je.offsetWidth/3),oe.removeChild(_e),je=null)}function Ye(e){return Math.round(parseFloat(e))}function Qe(e,t,n){var o,i,r,a,s=e.style;return(n=n||ze(e))&&(""!==(a=n.getPropertyValue(t)||n[t])||ie(e)||(a=A.style(e,t)),!T.pixelBoxStyles()&&qe.test(a)&&Ue.test(t)&&(o=s.width,i=s.minWidth,r=s.maxWidth,s.minWidth=s.maxWidth=s.width=a,a=n.width,s.width=o,s.minWidth=i,s.maxWidth=r)),void 0!==a?a+"":a}function Ze(e,t){return{get:function(){if(!e())return(this.get=t).apply(this,arguments);delete this.get}}}_e=w.createElement("div"),(je=w.createElement("div")).style&&(je.style.backgroundClip="content-box",je.cloneNode(!0).style.backgroundClip="",T.clearCloneStyle="content-box"===je.style.backgroundClip,A.extend(T,{boxSizingReliable:function(){return Ke(),Re},pixelBoxStyles:function(){return Ke(),Ve},pixelPosition:function(){return Ke(),$e},reliableMarginLeft:function(){return Ke(),We},scrollboxSize:function(){return Ke(),Fe},reliableTrDimensions:function(){var e,t,n,o;return null==Xe&&(e=w.createElement("table"),t=w.createElement("tr"),n=w.createElement("div"),e.style.cssText="position:absolute;left:-11111px",t.style.height="1px",n.style.height="9px",oe.appendChild(e).appendChild(t).appendChild(n),o=P.getComputedStyle(t),Xe=3<parseInt(o.height),oe.removeChild(e)),Xe}}));var Je=["Webkit","Moz","ms"],et=w.createElement("div").style,tt={};function nt(e){var t=A.cssProps[e]||tt[e];return t||(e in et?e:tt[e]=function(e){for(var t=e[0].toUpperCase()+e.slice(1),n=Je.length;n--;)if((e=Je[n]+t)in et)return e}(e)||e)}var ot=/^(none|table(?!-c[ea]).+)/,it=/^--/,rt={position:"absolute",visibility:"hidden",display:"block"},at={letterSpacing:"0",fontWeight:"400"};function st(e,t,n){var o=te.exec(t);return o?Math.max(0,o[2]-(n||0))+(o[3]||"px"):t}function lt(e,t,n,o,i,r){var a="width"===t?1:0,s=0,l=0;if(n===(o?"border":"content"))return 0;for(;a<4;a+=2)"margin"===n&&(l+=A.css(e,n+ne[a],!0,i)),o?("content"===n&&(l-=A.css(e,"padding"+ne[a],!0,i)),"margin"!==n&&(l-=A.css(e,"border"+ne[a]+"Width",!0,i))):(l+=A.css(e,"padding"+ne[a],!0,i),"padding"!==n?l+=A.css(e,"border"+ne[a]+"Width",!0,i):s+=A.css(e,"border"+ne[a]+"Width",!0,i));return!o&&0<=r&&(l+=Math.max(0,Math.ceil(e["offset"+t[0].toUpperCase()+t.slice(1)]-r-l-s-.5))||0),l}function ct(e,t,n){var o=ze(e),i=(!T.boxSizingReliable()||n)&&"border-box"===A.css(e,"boxSizing",!1,o),r=i,a=Qe(e,t,o),s="offset"+t[0].toUpperCase()+t.slice(1);if(qe.test(a)){if(!n)return a;a="auto"}return(!T.boxSizingReliable()&&i||!T.reliableTrDimensions()&&C(e,"tr")||"auto"===a||!parseFloat(a)&&"inline"===A.css(e,"display",!1,o))&&e.getClientRects().length&&(i="border-box"===A.css(e,"boxSizing",!1,o),(r=s in e)&&(a=e[s])),(a=parseFloat(a)||0)+lt(e,t,n||(i?"border":"content"),r,o,a)+"px"}function ut(e,t,n,o,i){return new ut.prototype.init(e,t,n,o,i)}A.extend({cssHooks:{opacity:{get:function(e,t){if(t){var n=Qe(e,"opacity");return""===n?"1":n}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,gridArea:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnStart:!0,gridRow:!0,gridRowEnd:!0,gridRowStart:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(e,t,n,o){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var i,r,a,s=q(t),l=it.test(t),c=e.style;if(l||(t=nt(s)),a=A.cssHooks[t]||A.cssHooks[s],void 0===n)return a&&"get"in a&&void 0!==(i=a.get(e,!1,o))?i:c[t];"string"===(r=_typeof(n))&&(i=te.exec(n))&&i[1]&&(n=se(e,t,i),r="number"),null!=n&&n==n&&("number"!==r||l||(n+=i&&i[3]||(A.cssNumber[s]?"":"px")),T.clearCloneStyle||""!==n||0!==t.indexOf("background")||(c[t]="inherit"),a&&"set"in a&&void 0===(n=a.set(e,n,o))||(l?c.setProperty(t,n):c[t]=n))}},css:function(e,t,n,o){var i,r,a,s=q(t);return it.test(t)||(t=nt(s)),(a=A.cssHooks[t]||A.cssHooks[s])&&"get"in a&&(i=a.get(e,!0,n)),void 0===i&&(i=Qe(e,t,o)),"normal"===i&&t in at&&(i=at[t]),""===n||n?(r=parseFloat(i),!0===n||isFinite(r)?r||0:i):i}}),A.each(["height","width"],function(e,l){A.cssHooks[l]={get:function(e,t,n){if(t)return!ot.test(A.css(e,"display"))||e.getClientRects().length&&e.getBoundingClientRect().width?ct(e,l,n):Oe(e,rt,function(){return ct(e,l,n)})},set:function(e,t,n){var o,i=ze(e),r=!T.scrollboxSize()&&"absolute"===i.position,a=(r||n)&&"border-box"===A.css(e,"boxSizing",!1,i),s=n?lt(e,l,n,a,i):0;return a&&r&&(s-=Math.ceil(e["offset"+l[0].toUpperCase()+l.slice(1)]-parseFloat(i[l])-lt(e,l,"border",!1,i)-.5)),s&&(o=te.exec(t))&&"px"!==(o[3]||"px")&&(e.style[l]=t,t=A.css(e,l)),st(0,t,s)}}}),A.cssHooks.marginLeft=Ze(T.reliableMarginLeft,function(e,t){if(t)return(parseFloat(Qe(e,"marginLeft"))||e.getBoundingClientRect().left-Oe(e,{marginLeft:0},function(){return e.getBoundingClientRect().left}))+"px"}),A.each({margin:"",padding:"",border:"Width"},function(i,r){A.cssHooks[i+r]={expand:function(e){for(var t=0,n={},o="string"==typeof e?e.split(" "):[e];t<4;t++)n[i+ne[t]+r]=o[t]||o[t-2]||o[0];return n}},"margin"!==i&&(A.cssHooks[i+r].set=st)}),A.fn.extend({css:function(e,t){return X(this,function(e,t,n){var o,i,r={},a=0;if(Array.isArray(t)){for(o=ze(e),i=t.length;a<i;a++)r[t[a]]=A.css(e,t[a],!1,o);return r}return void 0!==n?A.style(e,t,n):A.css(e,t)},e,t,1<arguments.length)}}),(A.Tween=ut).prototype={constructor:ut,init:function(e,t,n,o,i,r){this.elem=e,this.prop=n,this.easing=i||A.easing._default,this.options=t,this.start=this.now=this.cur(),this.end=o,this.unit=r||(A.cssNumber[n]?"":"px")},cur:function(){var e=ut.propHooks[this.prop];return e&&e.get?e.get(this):ut.propHooks._default.get(this)},run:function(e){var t,n=ut.propHooks[this.prop];return this.options.duration?this.pos=t=A.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):ut.propHooks._default.set(this),this}},ut.prototype.init.prototype=ut.prototype,ut.propHooks={_default:{get:function(e){var t;return 1!==e.elem.nodeType||null!=e.elem[e.prop]&&null==e.elem.style[e.prop]?e.elem[e.prop]:(t=A.css(e.elem,e.prop,""))&&"auto"!==t?t:0},set:function(e){A.fx.step[e.prop]?A.fx.step[e.prop](e):1!==e.elem.nodeType||!A.cssHooks[e.prop]&&null==e.elem.style[nt(e.prop)]?e.elem[e.prop]=e.now:A.style(e.elem,e.prop,e.now+e.unit)}}},ut.propHooks.scrollTop=ut.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},A.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2},_default:"swing"},A.fx=ut.prototype.init,A.fx.step={};var dt,pt,ft,ht,gt=/^(?:toggle|show|hide)$/,bt=/queueHooks$/;function mt(){pt&&(!1===w.hidden&&P.requestAnimationFrame?P.requestAnimationFrame(mt):P.setTimeout(mt,A.fx.interval),A.fx.tick())}function Tt(){return P.setTimeout(function(){dt=void 0}),dt=Date.now()}function vt(e,t){var n,o=0,i={height:e};for(t=t?1:0;o<4;o+=2-t)i["margin"+(n=ne[o])]=i["padding"+n]=e;return t&&(i.opacity=i.width=e),i}function St(e,t,n){for(var o,i=(yt.tweeners[t]||[]).concat(yt.tweeners["*"]),r=0,a=i.length;r<a;r++)if(o=i[r].call(n,t,e))return o}function yt(r,e,t){var n,a,o=0,i=yt.prefilters.length,s=A.Deferred().always(function(){delete l.elem}),l=function(){if(a)return!1;for(var e=dt||Tt(),t=Math.max(0,c.startTime+c.duration-e),n=1-(t/c.duration||0),o=0,i=c.tweens.length;o<i;o++)c.tweens[o].run(n);return s.notifyWith(r,[c,n,t]),n<1&&i?t:(i||s.notifyWith(r,[c,1,0]),s.resolveWith(r,[c]),!1)},c=s.promise({elem:r,props:A.extend({},e),opts:A.extend(!0,{specialEasing:{},easing:A.easing._default},t),originalProperties:e,originalOptions:t,startTime:dt||Tt(),duration:t.duration,tweens:[],createTween:function(e,t){var n=A.Tween(r,c.opts,e,t,c.opts.specialEasing[e]||c.opts.easing);return c.tweens.push(n),n},stop:function(e){var t=0,n=e?c.tweens.length:0;if(a)return this;for(a=!0;t<n;t++)c.tweens[t].run(1);return e?(s.notifyWith(r,[c,1,0]),s.resolveWith(r,[c,e])):s.rejectWith(r,[c,e]),this}}),u=c.props;for(!function(e,t){var n,o,i,r,a;for(n in e)if(i=t[o=q(n)],r=e[n],Array.isArray(r)&&(i=r[1],r=e[n]=r[0]),n!==o&&(e[o]=r,delete e[n]),(a=A.cssHooks[o])&&"expand"in a)for(n in r=a.expand(r),delete e[o],r)n in e||(e[n]=r[n],t[n]=i);else t[o]=i}(u,c.opts.specialEasing);o<i;o++)if(n=yt.prefilters[o].call(c,r,u,c.opts))return v(n.stop)&&(A._queueHooks(c.elem,c.opts.queue).stop=n.stop.bind(n)),n;return A.map(u,St,c),v(c.opts.start)&&c.opts.start.call(r,c),c.progress(c.opts.progress).done(c.opts.done,c.opts.complete).fail(c.opts.fail).always(c.opts.always),A.fx.timer(A.extend(l,{elem:r,anim:c,queue:c.opts.queue})),c}A.Animation=A.extend(yt,{tweeners:{"*":[function(e,t){var n=this.createTween(e,t);return se(n.elem,e,te.exec(t),n),n}]},tweener:function(e,t){for(var n,o=0,i=(e=v(e)?(t=e,["*"]):e.match(k)).length;o<i;o++)n=e[o],yt.tweeners[n]=yt.tweeners[n]||[],yt.tweeners[n].unshift(t)},prefilters:[function(e,t,n){var o,i,r,a,s,l,c,u,d="width"in t||"height"in t,p=this,f={},h=e.style,g=e.nodeType&&ae(e),b=K.get(e,"fxshow");for(o in n.queue||(null==(a=A._queueHooks(e,"fx")).unqueued&&(a.unqueued=0,s=a.empty.fire,a.empty.fire=function(){a.unqueued||s()}),a.unqueued++,p.always(function(){p.always(function(){a.unqueued--,A.queue(e,"fx").length||a.empty.fire()})})),t)if(i=t[o],gt.test(i)){if(delete t[o],r=r||"toggle"===i,i===(g?"hide":"show")){if("show"!==i||!b||void 0===b[o])continue;g=!0}f[o]=b&&b[o]||A.style(e,o)}if((l=!A.isEmptyObject(t))||!A.isEmptyObject(f))for(o in d&&1===e.nodeType&&(n.overflow=[h.overflow,h.overflowX,h.overflowY],null==(c=b&&b.display)&&(c=K.get(e,"display")),"none"===(u=A.css(e,"display"))&&(c?u=c:(ce([e],!0),c=e.style.display||c,u=A.css(e,"display"),ce([e]))),("inline"===u||"inline-block"===u&&null!=c)&&"none"===A.css(e,"float")&&(l||(p.done(function(){h.display=c}),null==c&&(u=h.display,c="none"===u?"":u)),h.display="inline-block")),n.overflow&&(h.overflow="hidden",p.always(function(){h.overflow=n.overflow[0],h.overflowX=n.overflow[1],h.overflowY=n.overflow[2]})),l=!1,f)l||(b?"hidden"in b&&(g=b.hidden):b=K.access(e,"fxshow",{display:c}),r&&(b.hidden=!g),g&&ce([e],!0),p.done(function(){for(o in g||ce([e]),K.remove(e,"fxshow"),f)A.style(e,o,f[o])})),l=St(g?b[o]:0,o,p),o in b||(b[o]=l.start,g&&(l.end=l.start,l.start=0))}],prefilter:function(e,t){t?yt.prefilters.unshift(e):yt.prefilters.push(e)}}),A.speed=function(e,t,n){var o=e&&"object"===_typeof(e)?A.extend({},e):{complete:n||!n&&t||v(e)&&e,duration:e,easing:n&&t||t&&!v(t)&&t};return A.fx.off?o.duration=0:"number"!=typeof o.duration&&(o.duration in A.fx.speeds?o.duration=A.fx.speeds[o.duration]:o.duration=A.fx.speeds._default),null!=o.queue&&!0!==o.queue||(o.queue="fx"),o.old=o.complete,o.complete=function(){v(o.old)&&o.old.call(this),o.queue&&A.dequeue(this,o.queue)},o},A.fn.extend({fadeTo:function(e,t,n,o){return this.filter(ae).css("opacity",0).show().end().animate({opacity:t},e,n,o)},animate:function(t,e,n,o){function i(){var e=yt(this,A.extend({},t),a);(r||K.get(this,"finish"))&&e.stop(!0)}var r=A.isEmptyObject(t),a=A.speed(e,n,o);return i.finish=i,r||!1===a.queue?this.each(i):this.queue(a.queue,i)},stop:function(i,e,r){function a(e){var t=e.stop;delete e.stop,t(r)}return"string"!=typeof i&&(r=e,e=i,i=void 0),e&&this.queue(i||"fx",[]),this.each(function(){var e=!0,t=null!=i&&i+"queueHooks",n=A.timers,o=K.get(this);if(t)o[t]&&o[t].stop&&a(o[t]);else for(t in o)o[t]&&o[t].stop&&bt.test(t)&&a(o[t]);for(t=n.length;t--;)n[t].elem!==this||null!=i&&n[t].queue!==i||(n[t].anim.stop(r),e=!1,n.splice(t,1));!e&&r||A.dequeue(this,i)})},finish:function(a){return!1!==a&&(a=a||"fx"),this.each(function(){var e,t=K.get(this),n=t[a+"queue"],o=t[a+"queueHooks"],i=A.timers,r=n?n.length:0;for(t.finish=!0,A.queue(this,a,[]),o&&o.stop&&o.stop.call(this,!0),e=i.length;e--;)i[e].elem===this&&i[e].queue===a&&(i[e].anim.stop(!0),i.splice(e,1));for(e=0;e<r;e++)n[e]&&n[e].finish&&n[e].finish.call(this);delete t.finish})}}),A.each(["toggle","show","hide"],function(e,o){var i=A.fn[o];A.fn[o]=function(e,t,n){return null==e||"boolean"==typeof e?i.apply(this,arguments):this.animate(vt(o,!0),e,t,n)}}),A.each({slideDown:vt("show"),slideUp:vt("hide"),slideToggle:vt("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(e,o){A.fn[e]=function(e,t,n){return this.animate(o,e,t,n)}}),A.timers=[],A.fx.tick=function(){var e,t=0,n=A.timers;for(dt=Date.now();t<n.length;t++)(e=n[t])()||n[t]!==e||n.splice(t--,1);n.length||A.fx.stop(),dt=void 0},A.fx.timer=function(e){A.timers.push(e),A.fx.start()},A.fx.interval=13,A.fx.start=function(){pt||(pt=!0,mt())},A.fx.stop=function(){pt=null},A.fx.speeds={slow:600,fast:200,_default:400},A.fn.delay=function(o,e){return o=A.fx&&A.fx.speeds[o]||o,e=e||"fx",this.queue(e,function(e,t){var n=P.setTimeout(e,o);t.stop=function(){P.clearTimeout(n)}})},ft=w.createElement("input"),ht=w.createElement("select").appendChild(w.createElement("option")),ft.type="checkbox",T.checkOn=""!==ft.value,T.optSelected=ht.selected,(ft=w.createElement("input")).value="t",ft.type="radio",T.radioValue="t"===ft.value;var xt,Pt=A.expr.attrHandle;A.fn.extend({attr:function(e,t){return X(this,A.attr,e,t,1<arguments.length)},removeAttr:function(e){return this.each(function(){A.removeAttr(this,e)})}}),A.extend({attr:function(e,t,n){var o,i,r=e.nodeType;if(3!==r&&8!==r&&2!==r)return void 0===e.getAttribute?A.prop(e,t,n):(1===r&&A.isXMLDoc(e)||(i=A.attrHooks[t.toLowerCase()]||(A.expr.match.bool.test(t)?xt:void 0)),void 0!==n?null===n?void A.removeAttr(e,t):i&&"set"in i&&void 0!==(o=i.set(e,n,t))?o:(e.setAttribute(t,n+""),n):!(i&&"get"in i&&null!==(o=i.get(e,t)))&&null==(o=A.find.attr(e,t))?void 0:o)},attrHooks:{type:{set:function(e,t){if(!T.radioValue&&"radio"===t&&C(e,"input")){var n=e.value;return e.setAttribute("type",t),n&&(e.value=n),t}}}},removeAttr:function(e,t){var n,o=0,i=t&&t.match(k);if(i&&1===e.nodeType)for(;n=i[o++];)e.removeAttribute(n)}}),xt={set:function(e,t,n){return!1===t?A.removeAttr(e,n):e.setAttribute(n,n),n}},A.each(A.expr.match.bool.source.match(/\w+/g),function(e,t){var a=Pt[t]||A.find.attr;Pt[t]=function(e,t,n){var o,i,r=t.toLowerCase();return n||(i=Pt[r],Pt[r]=o,o=null!=a(e,t,n)?r:null,Pt[r]=i),o}});var wt=/^(?:input|select|textarea|button)$/i,At=/^(?:a|area)$/i;function Mt(e){return(e.match(k)||[]).join(" ")}function Ct(e){return e.getAttribute&&e.getAttribute("class")||""}function Et(e){return Array.isArray(e)?e:"string"==typeof e&&e.match(k)||[]}A.fn.extend({prop:function(e,t){return X(this,A.prop,e,t,1<arguments.length)},removeProp:function(e){return this.each(function(){delete this[A.propFix[e]||e]})}}),A.extend({prop:function(e,t,n){var o,i,r=e.nodeType;if(3!==r&&8!==r&&2!==r)return 1===r&&A.isXMLDoc(e)||(t=A.propFix[t]||t,i=A.propHooks[t]),void 0!==n?i&&"set"in i&&void 0!==(o=i.set(e,n,t))?o:e[t]=n:i&&"get"in i&&null!==(o=i.get(e,t))?o:e[t]},propHooks:{tabIndex:{get:function(e){var t=A.find.attr(e,"tabindex");return t?parseInt(t,10):wt.test(e.nodeName)||At.test(e.nodeName)&&e.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),T.optSelected||(A.propHooks.selected={get:function(e){var t=e.parentNode;return t&&t.parentNode&&t.parentNode.selectedIndex,null},set:function(e){var t=e.parentNode;t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex)}}),A.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){A.propFix[this.toLowerCase()]=this}),A.fn.extend({addClass:function(t){var e,n,o,i,r,a,s,l=0;if(v(t))return this.each(function(e){A(this).addClass(t.call(this,e,Ct(this)))});if((e=Et(t)).length)for(;n=this[l++];)if(i=Ct(n),o=1===n.nodeType&&" "+Mt(i)+" "){for(a=0;r=e[a++];)o.indexOf(" "+r+" ")<0&&(o+=r+" ");i!==(s=Mt(o))&&n.setAttribute("class",s)}return this},removeClass:function(t){var e,n,o,i,r,a,s,l=0;if(v(t))return this.each(function(e){A(this).removeClass(t.call(this,e,Ct(this)))});if(!arguments.length)return this.attr("class","");if((e=Et(t)).length)for(;n=this[l++];)if(i=Ct(n),o=1===n.nodeType&&" "+Mt(i)+" "){for(a=0;r=e[a++];)for(;-1<o.indexOf(" "+r+" ");)o=o.replace(" "+r+" "," ");i!==(s=Mt(o))&&n.setAttribute("class",s)}return this},toggleClass:function(i,t){var r=_typeof(i),a="string"===r||Array.isArray(i);return"boolean"==typeof t&&a?t?this.addClass(i):this.removeClass(i):v(i)?this.each(function(e){A(this).toggleClass(i.call(this,e,Ct(this),t),t)}):this.each(function(){var e,t,n,o;if(a)for(t=0,n=A(this),o=Et(i);e=o[t++];)n.hasClass(e)?n.removeClass(e):n.addClass(e);else void 0!==i&&"boolean"!==r||((e=Ct(this))&&K.set(this,"__className__",e),this.setAttribute&&this.setAttribute("class",!e&&!1!==i&&K.get(this,"__className__")||""))})},hasClass:function(e){for(var t,n=0,o=" "+e+" ";t=this[n++];)if(1===t.nodeType&&-1<(" "+Mt(Ct(t))+" ").indexOf(o))return!0;return!1}});var Gt=/\r/g;A.fn.extend({val:function(n){var o,e,i,t=this[0];return arguments.length?(i=v(n),this.each(function(e){var t;1===this.nodeType&&(null==(t=i?n.call(this,e,A(this).val()):n)?t="":"number"==typeof t?t+="":Array.isArray(t)&&(t=A.map(t,function(e){return null==e?"":e+""})),(o=A.valHooks[this.type]||A.valHooks[this.nodeName.toLowerCase()])&&"set"in o&&void 0!==o.set(this,t,"value")||(this.value=t))})):t?(o=A.valHooks[t.type]||A.valHooks[t.nodeName.toLowerCase()])&&"get"in o&&void 0!==(e=o.get(t,"value"))?e:"string"==typeof(e=t.value)?e.replace(Gt,""):null==e?"":e:void 0}}),A.extend({valHooks:{option:{get:function(e){var t=A.find.attr(e,"value");return null!=t?t:Mt(A.text(e))}},select:{get:function(e){for(var t,n,o=e.options,i=e.selectedIndex,r="select-one"===e.type,a=r?null:[],s=r?i+1:o.length,l=i<0?s:r?i:0;l<s;l++)if(((n=o[l]).selected||l===i)&&!n.disabled&&(!n.parentNode.disabled||!C(n.parentNode,"optgroup"))){if(t=A(n).val(),r)return t;a.push(t)}return a},set:function(e,t){for(var n,o,i=e.options,r=A.makeArray(t),a=i.length;a--;)((o=i[a]).selected=-1<A.inArray(A.valHooks.option.get(o),r))&&(n=!0);return n||(e.selectedIndex=-1),r}}}}),A.each(["radio","checkbox"],function(){A.valHooks[this]={set:function(e,t){if(Array.isArray(t))return e.checked=-1<A.inArray(A(e).val(),t)}},T.checkOn||(A.valHooks[this].get=function(e){return null===e.getAttribute("value")?"on":e.value})}),T.focusin="onfocusin"in P;function Ht(e){e.stopPropagation()}var Bt=/^(?:focusinfocus|focusoutblur)$/;A.extend(A.event,{trigger:function(e,t,n,o){var i,r,a,s,l,c,u,d=[n||w],p=m.call(e,"type")?e.type:e,f=m.call(e,"namespace")?e.namespace.split("."):[],h=u=r=n=n||w;if(3!==n.nodeType&&8!==n.nodeType&&!Bt.test(p+A.event.triggered)&&(-1<p.indexOf(".")&&(p=(f=p.split(".")).shift(),f.sort()),s=p.indexOf(":")<0&&"on"+p,(e=e[A.expando]?e:new A.Event(p,"object"===_typeof(e)&&e)).isTrigger=o?2:3,e.namespace=f.join("."),e.rnamespace=e.namespace?new RegExp("(^|\\.)"+f.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,e.result=void 0,e.target||(e.target=n),t=null==t?[e]:A.makeArray(t,[e]),c=A.event.special[p]||{},o||!c.trigger||!1!==c.trigger.apply(n,t))){if(!o&&!c.noBubble&&!g(n)){for(a=c.delegateType||p,Bt.test(a+p)||(h=h.parentNode);h;h=h.parentNode)d.push(h),r=h;r===(n.ownerDocument||w)&&d.push(r.defaultView||r.parentWindow||P)}for(i=0;(h=d[i++])&&!e.isPropagationStopped();)u=h,e.type=1<i?a:c.bindType||p,(l=(K.get(h,"events")||Object.create(null))[e.type]&&K.get(h,"handle"))&&l.apply(h,t),(l=s&&h[s])&&l.apply&&z(h)&&(e.result=l.apply(h,t),!1===e.result&&e.preventDefault());return e.type=p,o||e.isDefaultPrevented()||c._default&&!1!==c._default.apply(d.pop(),t)||!z(n)||s&&v(n[p])&&!g(n)&&((r=n[s])&&(n[s]=null),A.event.triggered=p,e.isPropagationStopped()&&u.addEventListener(p,Ht),n[p](),e.isPropagationStopped()&&u.removeEventListener(p,Ht),A.event.triggered=void 0,r&&(n[s]=r)),e.result}},simulate:function(e,t,n){var o=A.extend(new A.Event,n,{type:e,isSimulated:!0});A.event.trigger(o,null,t)}}),A.fn.extend({trigger:function(e,t){return this.each(function(){A.event.trigger(e,t,this)})},triggerHandler:function(e,t){var n=this[0];if(n)return A.event.trigger(e,t,n,!0)}}),T.focusin||A.each({focus:"focusin",blur:"focusout"},function(n,o){function i(e){A.event.simulate(o,e.target,A.event.fix(e))}A.event.special[o]={setup:function(){var e=this.ownerDocument||this.document||this,t=K.access(e,o);t||e.addEventListener(n,i,!0),K.access(e,o,(t||0)+1)},teardown:function(){var e=this.ownerDocument||this.document||this,t=K.access(e,o)-1;t?K.access(e,o,t):(e.removeEventListener(n,i,!0),K.remove(e,o))}}});var Dt=P.location,It={guid:Date.now()},Lt=/\?/;A.parseXML=function(e){var t;if(!e||"string"!=typeof e)return null;try{t=(new P.DOMParser).parseFromString(e,"text/xml")}catch(e){t=void 0}return t&&!t.getElementsByTagName("parsererror").length||A.error("Invalid XML: "+e),t};var kt=/\[\]$/,Nt=/\r?\n/g,Ot=/^(?:submit|button|image|reset|file)$/i,$t=/^(?:input|select|textarea|keygen)/i;A.param=function(e,t){function n(e,t){var n=v(t)?t():t;i[i.length]=encodeURIComponent(e)+"="+encodeURIComponent(null==n?"":n)}var o,i=[];if(null==e)return"";if(Array.isArray(e)||e.jquery&&!A.isPlainObject(e))A.each(e,function(){n(this.name,this.value)});else for(o in e)!function n(o,e,i,r){var t;if(Array.isArray(e))A.each(e,function(e,t){i||kt.test(o)?r(o,t):n(o+"["+("object"===_typeof(t)&&null!=t?e:"")+"]",t,i,r)});else if(i||"object"!==y(e))r(o,e);else for(t in e)n(o+"["+t+"]",e[t],i,r)}(o,e[o],t,n);return i.join("&")},A.fn.extend({serialize:function(){return A.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=A.prop(this,"elements");return e?A.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!A(this).is(":disabled")&&$t.test(this.nodeName)&&!Ot.test(e)&&(this.checked||!pe.test(e))}).map(function(e,t){var n=A(this).val();return null==n?null:Array.isArray(n)?A.map(n,function(e){return{name:t.name,value:e.replace(Nt,"\r\n")}}):{name:t.name,value:n.replace(Nt,"\r\n")}}).get()}});var Rt=/%20/g,Ft=/#.*$/,Vt=/([?&])_=[^&]*/,Xt=/^(.*?):[ \t]*([^\r\n]*)$/gm,Wt=/^(?:GET|HEAD)$/,_t=/^\/\//,jt={},qt={},zt="*/".concat("*"),Ut=w.createElement("a");function Kt(r){return function(e,t){"string"!=typeof e&&(t=e,e="*");var n,o=0,i=e.toLowerCase().match(k)||[];if(v(t))for(;n=i[o++];)"+"===n[0]?(n=n.slice(1)||"*",(r[n]=r[n]||[]).unshift(t)):(r[n]=r[n]||[]).push(t)}}function Yt(t,i,r,a){var s={},l=t===qt;function c(e){var o;return s[e]=!0,A.each(t[e]||[],function(e,t){var n=t(i,r,a);return"string"!=typeof n||l||s[n]?l?!(o=n):void 0:(i.dataTypes.unshift(n),c(n),!1)}),o}return c(i.dataTypes[0])||!s["*"]&&c("*")}function Qt(e,t){var n,o,i=A.ajaxSettings.flatOptions||{};for(n in t)void 0!==t[n]&&((i[n]?e:o=o||{})[n]=t[n]);return o&&A.extend(!0,e,o),e}Ut.href=Dt.href,A.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:Dt.href,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(Dt.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":zt,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":A.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?Qt(Qt(e,A.ajaxSettings),t):Qt(A.ajaxSettings,e)},ajaxPrefilter:Kt(jt),ajaxTransport:Kt(qt),ajax:function(e,t){"object"===_typeof(e)&&(t=e,e=void 0),t=t||{};var u,d,p,n,f,o,h,g,i,r,b=A.ajaxSetup({},t),m=b.context||b,T=b.context&&(m.nodeType||m.jquery)?A(m):A.event,v=A.Deferred(),S=A.Callbacks("once memory"),y=b.statusCode||{},a={},s={},l="canceled",x={readyState:0,getResponseHeader:function(e){var t;if(h){if(!n)for(n={};t=Xt.exec(p);)n[t[1].toLowerCase()+" "]=(n[t[1].toLowerCase()+" "]||[]).concat(t[2]);t=n[e.toLowerCase()+" "]}return null==t?null:t.join(", ")},getAllResponseHeaders:function(){return h?p:null},setRequestHeader:function(e,t){return null==h&&(e=s[e.toLowerCase()]=s[e.toLowerCase()]||e,a[e]=t),this},overrideMimeType:function(e){return null==h&&(b.mimeType=e),this},statusCode:function(e){var t;if(e)if(h)x.always(e[x.status]);else for(t in e)y[t]=[y[t],e[t]];return this},abort:function(e){var t=e||l;return u&&u.abort(t),c(0,t),this}};if(v.promise(x),b.url=((e||b.url||Dt.href)+"").replace(_t,Dt.protocol+"//"),b.type=t.method||t.type||b.method||b.type,b.dataTypes=(b.dataType||"*").toLowerCase().match(k)||[""],null==b.crossDomain){o=w.createElement("a");try{o.href=b.url,o.href=o.href,b.crossDomain=Ut.protocol+"//"+Ut.host!=o.protocol+"//"+o.host}catch(e){b.crossDomain=!0}}if(b.data&&b.processData&&"string"!=typeof b.data&&(b.data=A.param(b.data,b.traditional)),Yt(jt,b,t,x),h)return x;for(i in(g=A.event&&b.global)&&0==A.active++&&A.event.trigger("ajaxStart"),b.type=b.type.toUpperCase(),b.hasContent=!Wt.test(b.type),d=b.url.replace(Ft,""),b.hasContent?b.data&&b.processData&&0===(b.contentType||"").indexOf("application/x-www-form-urlencoded")&&(b.data=b.data.replace(Rt,"+")):(r=b.url.slice(d.length),b.data&&(b.processData||"string"==typeof b.data)&&(d+=(Lt.test(d)?"&":"?")+b.data,delete b.data),!1===b.cache&&(d=d.replace(Vt,"$1"),r=(Lt.test(d)?"&":"?")+"_="+It.guid+++r),b.url=d+r),b.ifModified&&(A.lastModified[d]&&x.setRequestHeader("If-Modified-Since",A.lastModified[d]),A.etag[d]&&x.setRequestHeader("If-None-Match",A.etag[d])),(b.data&&b.hasContent&&!1!==b.contentType||t.contentType)&&x.setRequestHeader("Content-Type",b.contentType),x.setRequestHeader("Accept",b.dataTypes[0]&&b.accepts[b.dataTypes[0]]?b.accepts[b.dataTypes[0]]+("*"!==b.dataTypes[0]?", "+zt+"; q=0.01":""):b.accepts["*"]),b.headers)x.setRequestHeader(i,b.headers[i]);if(b.beforeSend&&(!1===b.beforeSend.call(m,x,b)||h))return x.abort();if(l="abort",S.add(b.complete),x.done(b.success),x.fail(b.error),u=Yt(qt,b,t,x)){if(x.readyState=1,g&&T.trigger("ajaxSend",[x,b]),h)return x;b.async&&0<b.timeout&&(f=P.setTimeout(function(){x.abort("timeout")},b.timeout));try{h=!1,u.send(a,c)}catch(e){if(h)throw e;c(-1,e)}}else c(-1,"No Transport");function c(e,t,n,o){var i,r,a,s,l,c=t;h||(h=!0,f&&P.clearTimeout(f),u=void 0,p=o||"",x.readyState=0<e?4:0,i=200<=e&&e<300||304===e,n&&(s=function(e,t,n){for(var o,i,r,a,s=e.contents,l=e.dataTypes;"*"===l[0];)l.shift(),void 0===o&&(o=e.mimeType||t.getResponseHeader("Content-Type"));if(o)for(i in s)if(s[i]&&s[i].test(o)){l.unshift(i);break}if(l[0]in n)r=l[0];else{for(i in n){if(!l[0]||e.converters[i+" "+l[0]]){r=i;break}a=a||i}r=r||a}if(r)return r!==l[0]&&l.unshift(r),n[r]}(b,x,n)),!i&&-1<A.inArray("script",b.dataTypes)&&(b.converters["text script"]=function(){}),s=function(e,t,n,o){var i,r,a,s,l,c={},u=e.dataTypes.slice();if(u[1])for(a in e.converters)c[a.toLowerCase()]=e.converters[a];for(r=u.shift();r;)if(e.responseFields[r]&&(n[e.responseFields[r]]=t),!l&&o&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),l=r,r=u.shift())if("*"===r)r=l;else if("*"!==l&&l!==r){if(!(a=c[l+" "+r]||c["* "+r]))for(i in c)if((s=i.split(" "))[1]===r&&(a=c[l+" "+s[0]]||c["* "+s[0]])){!0===a?a=c[i]:!0!==c[i]&&(r=s[0],u.unshift(s[1]));break}if(!0!==a)if(a&&e.throws)t=a(t);else try{t=a(t)}catch(e){return{state:"parsererror",error:a?e:"No conversion from "+l+" to "+r}}}return{state:"success",data:t}}(b,s,x,i),i?(b.ifModified&&((l=x.getResponseHeader("Last-Modified"))&&(A.lastModified[d]=l),(l=x.getResponseHeader("etag"))&&(A.etag[d]=l)),204===e||"HEAD"===b.type?c="nocontent":304===e?c="notmodified":(c=s.state,r=s.data,i=!(a=s.error))):(a=c,!e&&c||(c="error",e<0&&(e=0))),x.status=e,x.statusText=(t||c)+"",i?v.resolveWith(m,[r,c,x]):v.rejectWith(m,[x,c,a]),x.statusCode(y),y=void 0,g&&T.trigger(i?"ajaxSuccess":"ajaxError",[x,b,i?r:a]),S.fireWith(m,[x,c]),g&&(T.trigger("ajaxComplete",[x,b]),--A.active||A.event.trigger("ajaxStop")))}return x},getJSON:function(e,t,n){return A.get(e,t,n,"json")},getScript:function(e,t){return A.get(e,void 0,t,"script")}}),A.each(["get","post"],function(e,i){A[i]=function(e,t,n,o){return v(t)&&(o=o||n,n=t,t=void 0),A.ajax(A.extend({url:e,type:i,dataType:o,data:t,success:n},A.isPlainObject(e)&&e))}}),A.ajaxPrefilter(function(e){var t;for(t in e.headers)"content-type"===t.toLowerCase()&&(e.contentType=e.headers[t]||"")}),A._evalUrl=function(e,t,n){return A.ajax({url:e,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,converters:{"text script":function(){}},dataFilter:function(e){A.globalEval(e,t,n)}})},A.fn.extend({wrapAll:function(e){var t;return this[0]&&(v(e)&&(e=e.call(this[0])),t=A(e,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){for(var e=this;e.firstElementChild;)e=e.firstElementChild;return e}).append(this)),this},wrapInner:function(n){return v(n)?this.each(function(e){A(this).wrapInner(n.call(this,e))}):this.each(function(){var e=A(this),t=e.contents();t.length?t.wrapAll(n):e.append(n)})},wrap:function(t){var n=v(t);return this.each(function(e){A(this).wrapAll(n?t.call(this,e):t)})},unwrap:function(e){return this.parent(e).not("body").each(function(){A(this).replaceWith(this.childNodes)}),this}}),A.expr.pseudos.hidden=function(e){return!A.expr.pseudos.visible(e)},A.expr.pseudos.visible=function(e){return!!(e.offsetWidth||e.offsetHeight||e.getClientRects().length)},A.ajaxSettings.xhr=function(){try{return new P.XMLHttpRequest}catch(e){}};var Zt={0:200,1223:204},Jt=A.ajaxSettings.xhr();T.cors=!!Jt&&"withCredentials"in Jt,T.ajax=Jt=!!Jt,A.ajaxTransport(function(i){var r,a;if(T.cors||Jt&&!i.crossDomain)return{send:function(e,t){var n,o=i.xhr();if(o.open(i.type,i.url,i.async,i.username,i.password),i.xhrFields)for(n in i.xhrFields)o[n]=i.xhrFields[n];for(n in i.mimeType&&o.overrideMimeType&&o.overrideMimeType(i.mimeType),i.crossDomain||e["X-Requested-With"]||(e["X-Requested-With"]="XMLHttpRequest"),e)o.setRequestHeader(n,e[n]);r=function(e){return function(){r&&(r=a=o.onload=o.onerror=o.onabort=o.ontimeout=o.onreadystatechange=null,"abort"===e?o.abort():"error"===e?"number"!=typeof o.status?t(0,"error"):t(o.status,o.statusText):t(Zt[o.status]||o.status,o.statusText,"text"!==(o.responseType||"text")||"string"!=typeof o.responseText?{binary:o.response}:{text:o.responseText},o.getAllResponseHeaders()))}},o.onload=r(),a=o.onerror=o.ontimeout=r("error"),void 0!==o.onabort?o.onabort=a:o.onreadystatechange=function(){4===o.readyState&&P.setTimeout(function(){r&&a()})},r=r("abort");try{o.send(i.hasContent&&i.data||null)}catch(e){if(r)throw e}},abort:function(){r&&r()}}}),A.ajaxPrefilter(function(e){e.crossDomain&&(e.contents.script=!1)}),A.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(e){return A.globalEval(e),e}}}),A.ajaxPrefilter("script",function(e){void 0===e.cache&&(e.cache=!1),e.crossDomain&&(e.type="GET")}),A.ajaxTransport("script",function(n){var o,i;if(n.crossDomain||n.scriptAttrs)return{send:function(e,t){o=A("<script>").attr(n.scriptAttrs||{}).prop({charset:n.scriptCharset,src:n.url}).on("load error",i=function(e){o.remove(),i=null,e&&t("error"===e.type?404:200,e.type)}),w.head.appendChild(o[0])},abort:function(){i&&i()}}});var en,tn=[],nn=/(=)\?(?=&|$)|\?\?/;A.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=tn.pop()||A.expando+"_"+It.guid++;return this[e]=!0,e}}),A.ajaxPrefilter("json jsonp",function(e,t,n){var o,i,r,a=!1!==e.jsonp&&(nn.test(e.url)?"url":"string"==typeof e.data&&0===(e.contentType||"").indexOf("application/x-www-form-urlencoded")&&nn.test(e.data)&&"data");if(a||"jsonp"===e.dataTypes[0])return o=e.jsonpCallback=v(e.jsonpCallback)?e.jsonpCallback():e.jsonpCallback,a?e[a]=e[a].replace(nn,"$1"+o):!1!==e.jsonp&&(e.url+=(Lt.test(e.url)?"&":"?")+e.jsonp+"="+o),e.converters["script json"]=function(){return r||A.error(o+" was not called"),r[0]},e.dataTypes[0]="json",i=P[o],P[o]=function(){r=arguments},n.always(function(){void 0===i?A(P).removeProp(o):P[o]=i,e[o]&&(e.jsonpCallback=t.jsonpCallback,tn.push(o)),r&&v(i)&&i(r[0]),r=i=void 0}),"script"}),T.createHTMLDocument=((en=w.implementation.createHTMLDocument("").body).innerHTML="<form></form><form></form>",2===en.childNodes.length),A.parseHTML=function(e,t,n){return"string"!=typeof e?[]:("boolean"==typeof t&&(n=t,t=!1),t||(T.createHTMLDocument?((o=(t=w.implementation.createHTMLDocument("")).createElement("base")).href=w.location.href,t.head.appendChild(o)):t=w),r=!n&&[],(i=E.exec(e))?[t.createElement(i[1])]:(i=ve([e],t,r),r&&r.length&&A(r).remove(),A.merge([],i.childNodes)));var o,i,r},A.fn.load=function(e,t,n){var o,i,r,a=this,s=e.indexOf(" ");return-1<s&&(o=Mt(e.slice(s)),e=e.slice(0,s)),v(t)?(n=t,t=void 0):t&&"object"===_typeof(t)&&(i="POST"),0<a.length&&A.ajax({url:e,type:i||"GET",dataType:"html",data:t}).done(function(e){r=arguments,a.html(o?A("<div>").append(A.parseHTML(e)).find(o):e)}).always(n&&function(e,t){a.each(function(){n.apply(this,r||[e.responseText,t,e])})}),this},A.expr.pseudos.animated=function(t){return A.grep(A.timers,function(e){return t===e.elem}).length},A.offset={setOffset:function(e,t,n){var o,i,r,a,s,l,c=A.css(e,"position"),u=A(e),d={};"static"===c&&(e.style.position="relative"),s=u.offset(),r=A.css(e,"top"),l=A.css(e,"left"),i=("absolute"===c||"fixed"===c)&&-1<(r+l).indexOf("auto")?(a=(o=u.position()).top,o.left):(a=parseFloat(r)||0,parseFloat(l)||0),v(t)&&(t=t.call(e,n,A.extend({},s))),null!=t.top&&(d.top=t.top-s.top+a),null!=t.left&&(d.left=t.left-s.left+i),"using"in t?t.using.call(e,d):("number"==typeof d.top&&(d.top+="px"),"number"==typeof d.left&&(d.left+="px"),u.css(d))}},A.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each(function(e){A.offset.setOffset(this,t,e)});var e,n,o=this[0];return o?o.getClientRects().length?(e=o.getBoundingClientRect(),n=o.ownerDocument.defaultView,{top:e.top+n.pageYOffset,left:e.left+n.pageXOffset}):{top:0,left:0}:void 0},position:function(){if(this[0]){var e,t,n,o=this[0],i={top:0,left:0};if("fixed"===A.css(o,"position"))t=o.getBoundingClientRect();else{for(t=this.offset(),n=o.ownerDocument,e=o.offsetParent||n.documentElement;e&&(e===n.body||e===n.documentElement)&&"static"===A.css(e,"position");)e=e.parentNode;e&&e!==o&&1===e.nodeType&&((i=A(e).offset()).top+=A.css(e,"borderTopWidth",!0),i.left+=A.css(e,"borderLeftWidth",!0))}return{top:t.top-i.top-A.css(o,"marginTop",!0),left:t.left-i.left-A.css(o,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var e=this.offsetParent;e&&"static"===A.css(e,"position");)e=e.offsetParent;return e||oe})}}),A.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(t,i){var r="pageYOffset"===i;A.fn[t]=function(e){return X(this,function(e,t,n){var o;return g(e)?o=e:9===e.nodeType&&(o=e.defaultView),void 0===n?o?o[i]:e[t]:void(o?o.scrollTo(r?o.pageXOffset:n,r?n:o.pageYOffset):e[t]=n)},t,e,arguments.length)}}),A.each(["top","left"],function(e,n){A.cssHooks[n]=Ze(T.pixelPosition,function(e,t){if(t)return t=Qe(e,n),qe.test(t)?A(e).position()[n]+"px":t})}),A.each({Height:"height",Width:"width"},function(a,s){A.each({padding:"inner"+a,content:s,"":"outer"+a},function(o,r){A.fn[r]=function(e,t){var n=arguments.length&&(o||"boolean"!=typeof e),i=o||(!0===e||!0===t?"margin":"border");return X(this,function(e,t,n){var o;return g(e)?0===r.indexOf("outer")?e["inner"+a]:e.document.documentElement["client"+a]:9===e.nodeType?(o=e.documentElement,Math.max(e.body["scroll"+a],o["scroll"+a],e.body["offset"+a],o["offset"+a],o["client"+a])):void 0===n?A.css(e,t,i):A.style(e,t,n,i)},s,n?e:void 0,n)}})}),A.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(e,t){A.fn[t]=function(e){return this.on(t,e)}}),A.fn.extend({bind:function(e,t,n){return this.on(e,null,t,n)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,n,o){return this.on(t,e,n,o)},undelegate:function(e,t,n){return 1===arguments.length?this.off(e,"**"):this.off(t,e||"**",n)},hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)}}),A.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),function(e,n){A.fn[n]=function(e,t){return 0<arguments.length?this.on(n,null,e,t):this.trigger(n)}});var on=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;A.proxy=function(e,t){var n,o,i;if("string"==typeof t&&(n=e[t],t=e,e=n),v(e))return o=s.call(arguments,2),(i=function(){return e.apply(t||this,o.concat(s.call(arguments)))}).guid=e.guid=e.guid||A.guid++,i},A.holdReady=function(e){e?A.readyWait++:A.ready(!0)},A.isArray=Array.isArray,A.parseJSON=JSON.parse,A.nodeName=C,A.isFunction=v,A.isWindow=g,A.camelCase=q,A.type=y,A.now=Date.now,A.isNumeric=function(e){var t=A.type(e);return("number"===t||"string"===t)&&!isNaN(e-parseFloat(e))},A.trim=function(e){return null==e?"":(e+"").replace(on,"")},"function"==typeof define&&define.amd&&define("jquery",[],function(){return A});var rn=P.jQuery,an=P.$;return A.noConflict=function(e){return P.$===A&&(P.$=an),e&&P.jQuery===A&&(P.jQuery=rn),A},void 0===e&&(P.jQuery=P.$=A),A}),function(j){var q={mode:"horizontal",slideSelector:"",infiniteLoop:!0,hideControlOnEnd:!1,speed:500,easing:null,slideMargin:0,startSlide:0,randomStart:!1,captions:!1,ticker:!1,tickerHover:!1,adaptiveHeight:!1,adaptiveHeightSpeed:500,video:!1,useCSS:!0,preloadImages:"visible",responsive:!0,slideZIndex:50,wrapperClass:"bx-wrapper",touchEnabled:!0,swipeThreshold:50,oneToOneTouch:!0,preventDefaultSwipeX:!0,preventDefaultSwipeY:!1,ariaLive:!0,ariaHidden:!0,keyboardEnabled:!1,pager:!0,pagerType:"full",pagerShortSeparator:" / ",pagerSelector:null,buildPager:null,pagerCustom:null,controls:!0,nextText:"Next",prevText:"Prev",nextSelector:null,prevSelector:null,autoControls:!1,startText:"Start",stopText:"Stop",autoControlsCombine:!1,autoControlsSelector:null,auto:!1,pause:4e3,autoStart:!0,autoDirection:"next",stopAutoOnClick:!1,autoHover:!1,autoDelay:0,autoSlideForOnePage:!1,minSlides:1,maxSlides:1,moveSlides:0,slideWidth:0,shrinkItems:!1,onSliderLoad:function(){return!0},onSlideBefore:function(){return!0},onSlideAfter:function(){return!0},onSlideNext:function(){return!0},onSlidePrev:function(){return!0},onSliderResize:function(){return!0},onAutoChange:function(){return!0}};j.fn.bxSlider=function(t){if(0===this.length)return this;if(1<this.length)return this.each(function(){j(this).bxSlider(t)}),this;var d={},p=this,r=j(window).width(),a=j(window).height();if(!j(p).data("bxSlider")){var n=function(){j(p).data("bxSlider")||(d.settings=j.extend({},q,t),d.settings.slideWidth=parseInt(d.settings.slideWidth),d.children=p.children(d.settings.slideSelector),d.children.length<d.settings.minSlides&&(d.settings.minSlides=d.children.length),d.children.length<d.settings.maxSlides&&(d.settings.maxSlides=d.children.length),d.settings.randomStart&&(d.settings.startSlide=Math.floor(Math.random()*d.children.length)),d.active={index:d.settings.startSlide},d.carousel=1<d.settings.minSlides||1<d.settings.maxSlides,d.carousel&&(d.settings.preloadImages="all"),d.minThreshold=d.settings.minSlides*d.settings.slideWidth+(d.settings.minSlides-1)*d.settings.slideMargin,d.maxThreshold=d.settings.maxSlides*d.settings.slideWidth+(d.settings.maxSlides-1)*d.settings.slideMargin,d.working=!1,d.controls={},d.interval=null,d.animProp="vertical"===d.settings.mode?"top":"left",d.usingCSS=d.settings.useCSS&&"fade"!==d.settings.mode&&function(){for(var e=document.createElement("div"),t=["WebkitPerspective","MozPerspective","OPerspective","msPerspective"],n=0;n<t.length;n++)if(void 0!==e.style[t[n]])return d.cssPrefix=t[n].replace("Perspective","").toLowerCase(),d.animProp="-"+d.cssPrefix+"-transform",!0;return!1}(),"vertical"===d.settings.mode&&(d.settings.maxSlides=d.settings.minSlides),p.data("origStyle",p.attr("style")),p.children(d.settings.slideSelector).each(function(){j(this).data("origStyle",j(this).attr("style"))}),e())},e=function(){var e=d.children.eq(d.settings.startSlide);p.wrap('<div class="'+d.settings.wrapperClass+'"><div class="bx-viewport"></div></div>'),d.viewport=p.parent(),d.settings.ariaLive&&!d.settings.ticker&&d.viewport.attr("aria-live","polite"),d.loader=j('<div class="bx-loading" />'),d.viewport.prepend(d.loader),p.css({width:"horizontal"===d.settings.mode?1e3*d.children.length+215+"%":"auto",position:"relative"}),d.usingCSS&&d.settings.easing?p.css("-"+d.cssPrefix+"-transition-timing-function",d.settings.easing):d.settings.easing||(d.settings.easing="swing"),d.viewport.css({width:"100%",overflow:"hidden",position:"relative"}),d.viewport.parent().css({maxWidth:l()}),d.children.css({float:"horizontal"===d.settings.mode?"left":"none",listStyle:"none",position:"relative"}),d.children.css("width",c()),"horizontal"===d.settings.mode&&0<d.settings.slideMargin&&d.children.css("marginRight",d.settings.slideMargin),"vertical"===d.settings.mode&&0<d.settings.slideMargin&&d.children.css("marginBottom",d.settings.slideMargin),"fade"===d.settings.mode&&(d.children.css({position:"absolute",zIndex:0,display:"none"}),d.children.eq(d.settings.startSlide).css({zIndex:d.settings.slideZIndex,display:"block"})),d.controls.el=j('<div class="bx-controls" />'),d.settings.captions&&x(),d.active.last=d.settings.startSlide===h()-1,d.settings.video&&p.fitVids(),"none"===d.settings.preloadImages?e=null:"all"!==d.settings.preloadImages&&!d.settings.ticker||(e=d.children),d.settings.ticker?d.settings.pager=!1:(d.settings.controls&&S(),d.settings.auto&&d.settings.autoControls&&y(),d.settings.pager&&v(),(d.settings.controls||d.settings.autoControls||d.settings.pager)&&d.viewport.after(d.controls.el)),null===e?s():o(e,s)},o=function(e,t){var n=e.find('img:not([src=""]), iframe').length,o=0;0!==n?e.find('img:not([src=""]), iframe').each(function(){j(this).one("load error",function(){++o===n&&t()}).each(function(){!this.complete&&""!=this.src||j(this).trigger("load")})}):t()},s=function(){var e,t,n;d.settings.infiniteLoop&&"fade"!==d.settings.mode&&!d.settings.ticker&&(e="vertical"===d.settings.mode?d.settings.minSlides:d.settings.maxSlides,t=d.children.slice(0,e).clone(!0).addClass("bx-clone"),n=d.children.slice(-e).clone(!0).addClass("bx-clone"),d.settings.ariaHidden&&(t.attr("aria-hidden",!0),n.attr("aria-hidden",!0)),p.append(t).prepend(n)),d.loader.remove(),b(),"vertical"===d.settings.mode&&(d.settings.adaptiveHeight=!0),d.viewport.height(f()),p.redrawSlider(),d.settings.onSliderLoad.call(p,d.active.index),d.initialized=!0,d.settings.responsive&&j(window).on("resize",W),d.settings.auto&&d.settings.autoStart&&(1<h()||d.settings.autoSlideForOnePage)&&L(),d.settings.ticker&&k(),d.settings.pager&&E(d.settings.startSlide),d.settings.controls&&B(),d.settings.touchEnabled&&!d.settings.ticker&&$(),d.settings.keyboardEnabled&&!d.settings.ticker&&j(document).keydown(O)},f=function(){var t=0,e=j();if("vertical"===d.settings.mode||d.settings.adaptiveHeight)if(d.carousel){var n=1===d.settings.moveSlides?d.active.index:d.active.index*g(),e=d.children.eq(n);for(i=1;i<=d.settings.maxSlides-1;i++)e=n+i>=d.children.length?e.add(d.children.eq(i-1)):e.add(d.children.eq(n+i))}else e=d.children.eq(d.active.index);else e=d.children;return"vertical"===d.settings.mode?(e.each(function(e){t+=j(this).outerHeight()}),0<d.settings.slideMargin&&(t+=d.settings.slideMargin*(d.settings.minSlides-1))):t=Math.max.apply(Math,e.map(function(){return j(this).outerHeight(!1)}).get()),"border-box"===d.viewport.css("box-sizing")?t+=parseFloat(d.viewport.css("padding-top"))+parseFloat(d.viewport.css("padding-bottom"))+parseFloat(d.viewport.css("border-top-width"))+parseFloat(d.viewport.css("border-bottom-width")):"padding-box"===d.viewport.css("box-sizing")&&(t+=parseFloat(d.viewport.css("padding-top"))+parseFloat(d.viewport.css("padding-bottom"))),t},l=function(){var e="100%";return 0<d.settings.slideWidth&&(e="horizontal"===d.settings.mode?d.settings.maxSlides*d.settings.slideWidth+(d.settings.maxSlides-1)*d.settings.slideMargin:d.settings.slideWidth),e},c=function(){var e=d.settings.slideWidth,t=d.viewport.width();if(0===d.settings.slideWidth||d.settings.slideWidth>t&&!d.carousel||"vertical"===d.settings.mode)e=t;else if(1<d.settings.maxSlides&&"horizontal"===d.settings.mode){if(t>d.maxThreshold)return e;t<d.minThreshold?e=(t-d.settings.slideMargin*(d.settings.minSlides-1))/d.settings.minSlides:d.settings.shrinkItems&&(e=Math.floor((t+d.settings.slideMargin)/Math.ceil((t+d.settings.slideMargin)/(e+d.settings.slideMargin))-d.settings.slideMargin))}return e},u=function(){var e,t=1;return"horizontal"===d.settings.mode&&0<d.settings.slideWidth?t=d.viewport.width()<d.minThreshold?d.settings.minSlides:d.viewport.width()>d.maxThreshold?d.settings.maxSlides:(e=d.children.first().width()+d.settings.slideMargin,Math.floor((d.viewport.width()+d.settings.slideMargin)/e)||1):"vertical"===d.settings.mode&&(t=d.settings.minSlides),t},h=function(){var e=0,t=0,n=0;if(0<d.settings.moveSlides){if(!d.settings.infiniteLoop){for(;t<d.children.length;)++e,t=n+u(),n+=d.settings.moveSlides<=u()?d.settings.moveSlides:u();return n}e=Math.ceil(d.children.length/g())}else e=Math.ceil(d.children.length/u());return e},g=function(){return 0<d.settings.moveSlides&&d.settings.moveSlides<=u()?d.settings.moveSlides:u()},b=function(){var e,t,n;d.children.length>d.settings.maxSlides&&d.active.last&&!d.settings.infiniteLoop?"horizontal"===d.settings.mode?(e=(t=d.children.last()).position(),m(-(e.left-(d.viewport.width()-t.outerWidth())),"reset",0)):"vertical"===d.settings.mode&&(n=d.children.length-d.settings.minSlides,e=d.children.eq(n).position(),m(-e.top,"reset",0)):(e=d.children.eq(d.active.index*g()).position(),d.active.index===h()-1&&(d.active.last=!0),void 0!==e&&("horizontal"===d.settings.mode?m(-e.left,"reset",0):"vertical"===d.settings.mode&&m(-e.top,"reset",0)))},m=function t(e,n,o,i){var r,a;d.usingCSS?(a="vertical"===d.settings.mode?"translate3d(0, "+e+"px, 0)":"translate3d("+e+"px, 0, 0)",p.css("-"+d.cssPrefix+"-transition-duration",o/1e3+"s"),"slide"===n?(p.css(d.animProp,a),0!==o?p.on("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd",function(e){j(e.target).is(p)&&(p.off("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd"),G())}):G()):"reset"===n?p.css(d.animProp,a):"ticker"===n&&(p.css("-"+d.cssPrefix+"-transition-timing-function","linear"),p.css(d.animProp,a),0!==o?p.on("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd",function(e){j(e.target).is(p)&&(p.off("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd"),t(i.resetValue,"reset",0),N())}):(t(i.resetValue,"reset",0),N()))):((r={})[d.animProp]=e,"slide"===n?p.animate(r,o,d.settings.easing,function(){G()}):"reset"===n?p.css(d.animProp,e):"ticker"===n&&p.animate(r,o,"linear",function(){t(i.resetValue,"reset",0),N()}))},T=function(){for(var e="",t="",n=h(),o=0;o<n;o++)t="",d.settings.buildPager&&j.isFunction(d.settings.buildPager)||d.settings.pagerCustom?(t=d.settings.buildPager(o),d.pagerEl.addClass("bx-custom-pager")):(t=o+1,d.pagerEl.addClass("bx-default-pager")),e+='<div class="bx-pager-item"><a href="" data-slide-index="'+o+'" class="bx-pager-link">'+t+"</a></div>";d.pagerEl.html(e)},v=function(){d.settings.pagerCustom?d.pagerEl=j(d.settings.pagerCustom):(d.pagerEl=j('<div class="bx-pager" />'),d.settings.pagerSelector?j(d.settings.pagerSelector).html(d.pagerEl):d.controls.el.addClass("bx-has-pager").append(d.pagerEl),T()),d.pagerEl.on("click touchend","a",C)},S=function(){d.controls.next=j('<a class="bx-next" href="">'+d.settings.nextText+"</a>"),d.controls.prev=j('<a class="bx-prev" href="">'+d.settings.prevText+"</a>"),d.controls.next.on("click touchend",P),d.controls.prev.on("click touchend",w),d.settings.nextSelector&&j(d.settings.nextSelector).append(d.controls.next),d.settings.prevSelector&&j(d.settings.prevSelector).append(d.controls.prev),d.settings.nextSelector||d.settings.prevSelector||(d.controls.directionEl=j('<div class="bx-controls-direction" />'),d.controls.directionEl.append(d.controls.prev).append(d.controls.next),d.controls.el.addClass("bx-has-controls-direction").append(d.controls.directionEl))},y=function(){d.controls.start=j('<div class="bx-controls-auto-item"><a class="bx-start" href="">'+d.settings.startText+"</a></div>"),d.controls.stop=j('<div class="bx-controls-auto-item"><a class="bx-stop" href="">'+d.settings.stopText+"</a></div>"),d.controls.autoEl=j('<div class="bx-controls-auto" />'),d.controls.autoEl.on("click",".bx-start",A),d.controls.autoEl.on("click",".bx-stop",M),d.settings.autoControlsCombine?d.controls.autoEl.append(d.controls.start):d.controls.autoEl.append(d.controls.start).append(d.controls.stop),d.settings.autoControlsSelector?j(d.settings.autoControlsSelector).html(d.controls.autoEl):d.controls.el.addClass("bx-has-controls-auto").append(d.controls.autoEl),H(d.settings.autoStart?"stop":"start")},x=function(){d.children.each(function(e){var t=j(this).find("img:first").attr("title");void 0!==t&&(""+t).length&&j(this).append('<div class="bx-caption"><span>'+t+"</span></div>")})},P=function(e){e.preventDefault(),d.controls.el.hasClass("disabled")||(d.settings.auto&&d.settings.stopAutoOnClick&&p.stopAuto(),p.goToNextSlide())},w=function(e){e.preventDefault(),d.controls.el.hasClass("disabled")||(d.settings.auto&&d.settings.stopAutoOnClick&&p.stopAuto(),p.goToPrevSlide())},A=function(e){p.startAuto(),e.preventDefault()},M=function(e){p.stopAuto(),e.preventDefault()},C=function(e){var t,n;e.preventDefault(),d.controls.el.hasClass("disabled")||(d.settings.auto&&d.settings.stopAutoOnClick&&p.stopAuto(),void 0!==(t=j(e.currentTarget)).attr("data-slide-index")&&(n=parseInt(t.attr("data-slide-index")))!==d.active.index&&p.goToSlide(n))},E=function(n){var e=d.children.length;if("short"===d.settings.pagerType)return 1<d.settings.maxSlides&&(e=Math.ceil(d.children.length/d.settings.maxSlides)),void d.pagerEl.html(n+1+d.settings.pagerShortSeparator+e);d.pagerEl.find("a").removeClass("active"),d.pagerEl.each(function(e,t){j(t).find("a").eq(n).addClass("active")})},G=function(){var e;d.settings.infiniteLoop&&(e="",0===d.active.index?e=d.children.eq(0).position():d.active.index===h()-1&&d.carousel?e=d.children.eq((h()-1)*g()).position():d.active.index===d.children.length-1&&(e=d.children.eq(d.children.length-1).position()),e&&("horizontal"===d.settings.mode?m(-e.left,"reset",0):"vertical"===d.settings.mode&&m(-e.top,"reset",0))),d.working=!1,d.settings.onSlideAfter.call(p,d.children.eq(d.active.index),d.oldIndex,d.active.index)},H=function(e){d.settings.autoControlsCombine?d.controls.autoEl.html(d.controls[e]):(d.controls.autoEl.find("a").removeClass("active"),d.controls.autoEl.find("a:not(.bx-"+e+")").addClass("active"))},B=function(){1===h()?(d.controls.prev.addClass("disabled"),d.controls.next.addClass("disabled")):!d.settings.infiniteLoop&&d.settings.hideControlOnEnd&&(0===d.active.index?(d.controls.prev.addClass("disabled"),d.controls.next.removeClass("disabled")):d.active.index===h()-1?(d.controls.next.addClass("disabled"),d.controls.prev.removeClass("disabled")):(d.controls.prev.removeClass("disabled"),d.controls.next.removeClass("disabled")))},D=function(){p.startAuto()},I=function(){p.stopAuto()},L=function(){0<d.settings.autoDelay?setTimeout(p.startAuto,d.settings.autoDelay):(p.startAuto(),j(window).focus(D).blur(I)),d.settings.autoHover&&p.hover(function(){d.interval&&(p.stopAuto(!0),d.autoPaused=!0)},function(){d.autoPaused&&(p.startAuto(!0),d.autoPaused=null)})},k=function(){var e,t,n,o,i,r,a,s,l=0;"next"===d.settings.autoDirection?p.append(d.children.clone().addClass("bx-clone")):(p.prepend(d.children.clone().addClass("bx-clone")),e=d.children.first().position(),l="horizontal"===d.settings.mode?-e.left:-e.top),m(l,"reset",0),d.settings.pager=!1,d.settings.controls=!1,d.settings.autoControls=!1,d.settings.tickerHover&&(d.usingCSS?(o="horizontal"===d.settings.mode?4:5,d.viewport.hover(function(){t=p.css("-"+d.cssPrefix+"-transform"),n=parseFloat(t.split(",")[o]),m(n,"reset",0)},function(){s=0,d.children.each(function(e){s+="horizontal"===d.settings.mode?j(this).outerWidth(!0):j(this).outerHeight(!0)}),i=d.settings.speed/s,r="horizontal"===d.settings.mode?"left":"top",a=i*(s-Math.abs(parseInt(n))),N(a)})):d.viewport.hover(function(){p.stop()},function(){s=0,d.children.each(function(e){s+="horizontal"===d.settings.mode?j(this).outerWidth(!0):j(this).outerHeight(!0)}),i=d.settings.speed/s,r="horizontal"===d.settings.mode?"left":"top",a=i*(s-Math.abs(parseInt(p.css(r)))),N(a)})),N()},N=function(e){var t,n,o=e||d.settings.speed,i={left:0,top:0},r={left:0,top:0};"next"===d.settings.autoDirection?i=p.find(".bx-clone").first().position():r=d.children.first().position(),t="horizontal"===d.settings.mode?-i.left:-i.top,n="horizontal"===d.settings.mode?-r.left:-r.top,m(t,"ticker",o,{resetValue:n})},O=function(e){var t,n,o,i,r=document.activeElement.tagName.toLowerCase();if(null==new RegExp(r,["i"]).exec("input|textarea")&&(t=p,n=j(window),o={top:n.scrollTop(),left:n.scrollLeft()},i=t.offset(),o.right=o.left+n.width(),o.bottom=o.top+n.height(),i.right=i.left+t.outerWidth(),i.bottom=i.top+t.outerHeight(),!(o.right<i.left||o.left>i.right||o.bottom<i.top||o.top>i.bottom))){if(39===e.keyCode)return P(e),!1;if(37===e.keyCode)return w(e),!1}},$=function(){d.touch={start:{x:0,y:0},end:{x:0,y:0}},d.viewport.on("touchstart MSPointerDown pointerdown",R),d.viewport.on("click",".bxslider a",function(e){d.viewport.hasClass("click-disabled")&&(e.preventDefault(),d.viewport.removeClass("click-disabled"))})},R=function(e){if("touchstart"===e.type||0===e.button)if(e.preventDefault(),d.controls.el.addClass("disabled"),d.working)d.controls.el.removeClass("disabled");else{d.touch.originalPos=p.position();var t=e.originalEvent,n=void 0!==t.changedTouches?t.changedTouches:[t];if("function"==typeof PointerEvent&&void 0===t.pointerId)return;d.touch.start.x=n[0].pageX,d.touch.start.y=n[0].pageY,d.viewport.get(0).setPointerCapture&&(d.pointerId=t.pointerId,d.viewport.get(0).setPointerCapture(d.pointerId)),d.originalClickTarget=t.originalTarget||t.target,d.originalClickButton=t.button,d.originalClickButtons=t.buttons,d.originalEventType=t.type,d.hasMove=!1,d.viewport.on("touchmove MSPointerMove pointermove",V),d.viewport.on("touchend MSPointerUp pointerup",X),d.viewport.on("MSPointerCancel pointercancel",F)}},F=function e(t){t.preventDefault(),m(d.touch.originalPos.left,"reset",0),d.controls.el.removeClass("disabled"),d.viewport.off("MSPointerCancel pointercancel",e),d.viewport.off("touchmove MSPointerMove pointermove",V),d.viewport.off("touchend MSPointerUp pointerup",X),d.viewport.get(0).releasePointerCapture&&d.viewport.get(0).releasePointerCapture(d.pointerId)},V=function(e){var t=e.originalEvent,n=void 0!==t.changedTouches?t.changedTouches:[t],o=Math.abs(n[0].pageX-d.touch.start.x),i=Math.abs(n[0].pageY-d.touch.start.y),r=0,a=0;d.hasMove=!0,(i<3*o&&d.settings.preventDefaultSwipeX||o<3*i&&d.settings.preventDefaultSwipeY)&&e.preventDefault(),"touchmove"!==e.type&&e.preventDefault(),"fade"!==d.settings.mode&&d.settings.oneToOneTouch&&(r="horizontal"===d.settings.mode?(a=n[0].pageX-d.touch.start.x,d.touch.originalPos.left+a):(a=n[0].pageY-d.touch.start.y,d.touch.originalPos.top+a),m(r,"reset",0))},X=function e(t){t.preventDefault(),d.viewport.off("touchmove MSPointerMove pointermove",V),d.controls.el.removeClass("disabled");var n=t.originalEvent,o=void 0!==n.changedTouches?n.changedTouches:[n],i=0,r=0;d.touch.end.x=o[0].pageX,d.touch.end.y=o[0].pageY,"fade"===d.settings.mode?(r=Math.abs(d.touch.start.x-d.touch.end.x))>=d.settings.swipeThreshold&&(d.touch.start.x>d.touch.end.x?p.goToNextSlide():p.goToPrevSlide(),p.stopAuto()):(i="horizontal"===d.settings.mode?(r=d.touch.end.x-d.touch.start.x,d.touch.originalPos.left):(r=d.touch.end.y-d.touch.start.y,d.touch.originalPos.top),(d.settings.infiniteLoop||!(0===d.active.index&&0<r||d.active.last&&r<0))&&Math.abs(r)>=d.settings.swipeThreshold?(r<0?p.goToNextSlide():p.goToPrevSlide(),p.stopAuto()):m(i,"reset",200)),d.viewport.off("touchend MSPointerUp pointerup",e),d.viewport.get(0).releasePointerCapture&&d.viewport.get(0).releasePointerCapture(d.pointerId),!1!==d.hasMove||0!==d.originalClickButton&&"touchstart"!==d.originalEventType||j(d.originalClickTarget).trigger({type:"click",button:d.originalClickButton,buttons:d.originalClickButtons})},W=function e(t){var n,o;d.initialized&&(d.working?window.setTimeout(e,10):(n=j(window).width(),o=j(window).height(),r===n&&a===o||(r=n,a=o,p.redrawSlider(),d.settings.onSliderResize.call(p,d.active.index))))},_=function(e){var t=u();d.settings.ariaHidden&&!d.settings.ticker&&(d.children.attr("aria-hidden","true"),d.children.slice(e,e+t).attr("aria-hidden","false"))};return p.goToSlide=function(e,t){var n,o,i,r,a,s=!0,l=0,c={left:0,top:0},u=null;if(d.oldIndex=d.active.index,d.active.index=(a=e)<0?d.settings.infiniteLoop?h()-1:d.active.index:a>=h()?d.settings.infiniteLoop?0:d.active.index:a,!d.working&&d.active.index!==d.oldIndex){if(d.working=!0,void 0!==(s=d.settings.onSlideBefore.call(p,d.children.eq(d.active.index),d.oldIndex,d.active.index))&&!s)return d.active.index=d.oldIndex,void(d.working=!1);"next"===t?d.settings.onSlideNext.call(p,d.children.eq(d.active.index),d.oldIndex,d.active.index)||(s=!1):"prev"===t&&(d.settings.onSlidePrev.call(p,d.children.eq(d.active.index),d.oldIndex,d.active.index)||(s=!1)),d.active.last=d.active.index>=h()-1,(d.settings.pager||d.settings.pagerCustom)&&E(d.active.index),d.settings.controls&&B(),"fade"===d.settings.mode?(d.settings.adaptiveHeight&&d.viewport.height()!==f()&&d.viewport.animate({height:f()},d.settings.adaptiveHeightSpeed),d.children.filter(":visible").fadeOut(d.settings.speed).css({zIndex:0}),d.children.eq(d.active.index).css("zIndex",d.settings.slideZIndex+1).fadeIn(d.settings.speed,function(){j(this).css("zIndex",d.settings.slideZIndex),G()})):(d.settings.adaptiveHeight&&d.viewport.height()!==f()&&d.viewport.animate({height:f()},d.settings.adaptiveHeightSpeed),!d.settings.infiniteLoop&&d.carousel&&d.active.last?"horizontal"===d.settings.mode?(c=(u=d.children.eq(d.children.length-1)).position(),l=d.viewport.width()-u.outerWidth()):(n=d.children.length-d.settings.minSlides,c=d.children.eq(n).position()):d.carousel&&d.active.last&&"prev"===t?(o=1===d.settings.moveSlides?d.settings.maxSlides-g():(h()-1)*g()-(d.children.length-d.settings.maxSlides),c=(u=p.children(".bx-clone").eq(o)).position()):"next"===t&&0===d.active.index?(c=p.find("> .bx-clone").eq(d.settings.maxSlides).position(),d.active.last=!1):0<=e&&(r=e*parseInt(g()),c=d.children.eq(r).position()),void 0!==c&&(i="horizontal"===d.settings.mode?-(c.left-l):-c.top,m(i,"slide",d.settings.speed)),d.working=!1),d.settings.ariaHidden&&_(d.active.index*g())}},p.goToNextSlide=function(){var e;!d.settings.infiniteLoop&&d.active.last||!0===d.working||(e=parseInt(d.active.index)+1,p.goToSlide(e,"next"))},p.goToPrevSlide=function(){var e;!d.settings.infiniteLoop&&0===d.active.index||!0===d.working||(e=parseInt(d.active.index)-1,p.goToSlide(e,"prev"))},p.startAuto=function(e){d.interval||(d.interval=setInterval(function(){"next"===d.settings.autoDirection?p.goToNextSlide():p.goToPrevSlide()},d.settings.pause),d.settings.onAutoChange.call(p,!0),d.settings.autoControls&&!0!==e&&H("stop"))},p.stopAuto=function(e){d.autoPaused&&(d.autoPaused=!1),d.interval&&(clearInterval(d.interval),d.interval=null,d.settings.onAutoChange.call(p,!1),d.settings.autoControls&&!0!==e&&H("start"))},p.getCurrentSlide=function(){return d.active.index},p.getCurrentSlideElement=function(){return d.children.eq(d.active.index)},p.getSlideElement=function(e){return d.children.eq(e)},p.getSlideCount=function(){return d.children.length},p.isWorking=function(){return d.working},p.redrawSlider=function(){d.children.add(p.find(".bx-clone")).outerWidth(c()),d.viewport.css("height",f()),d.settings.ticker||b(),d.active.last&&(d.active.index=h()-1),d.active.index>=h()&&(d.active.last=!0),d.settings.pager&&!d.settings.pagerCustom&&(T(),E(d.active.index)),d.settings.ariaHidden&&_(d.active.index*g())},p.destroySlider=function(){d.initialized&&(d.initialized=!1,j(".bx-clone",this).remove(),d.children.each(function(){void 0!==j(this).data("origStyle")?j(this).attr("style",j(this).data("origStyle")):j(this).removeAttr("style")}),void 0!==j(this).data("origStyle")?this.attr("style",j(this).data("origStyle")):j(this).removeAttr("style"),j(this).unwrap().unwrap(),d.controls.el&&d.controls.el.remove(),d.controls.next&&d.controls.next.remove(),d.controls.prev&&d.controls.prev.remove(),d.pagerEl&&d.settings.controls&&!d.settings.pagerCustom&&d.pagerEl.remove(),j(".bx-caption",this).remove(),d.controls.autoEl&&d.controls.autoEl.remove(),clearInterval(d.interval),d.settings.responsive&&j(window).off("resize",W),d.settings.keyboardEnabled&&j(document).off("keydown",O),j(this).removeData("bxSlider"),j(window).off("blur",I).off("focus",D))},p.reloadSlider=function(e){void 0!==e&&(t=e),p.destroySlider(),n(),j(p).data("bxSlider",this)},n(),j(p).data("bxSlider",this),this}}}(jQuery),function(l,d,g){function n(e,t){var n,o,i,r=[],a=0;e&&e.isDefaultPrevented()||(e.preventDefault(),t=t||{},e&&e.data&&(t=u(e.data.options,t)),n=t.$target||g(e.currentTarget).trigger("blur"),(i=g.fancybox.getInstance())&&i.$trigger&&i.$trigger.is(n)||(r=t.selector?g(t.selector):(o=n.attr("data-fancybox")||"")?(r=e.data?e.data.items:[]).length?r.filter('[data-fancybox="'+o+'"]'):g('[data-fancybox="'+o+'"]'):[n],(a=g(r).index(n))<0&&(a=0),(i=g.fancybox.open(r,t,a)).$trigger=n))}if(l.console=l.console||{info:function(){}},g){if(g.fn.fancybox)return console.info("fancyBox already initialized");var e={closeExisting:!1,loop:!1,gutter:50,keyboard:!0,preventCaptionOverlap:!0,arrows:!0,infobar:!0,smallBtn:"auto",toolbar:"auto",buttons:["zoom","slideShow","thumbs","close"],idleTime:3,protect:!1,modal:!1,image:{preload:!1},ajax:{settings:{data:{fancybox:!0}}},iframe:{tpl:'<iframe id="fancybox-frame{rnd}" name="fancybox-frame{rnd}" class="fancybox-iframe" allowfullscreen="allowfullscreen" allow="autoplay; fullscreen" src=""></iframe>',preload:!0,css:{},attr:{scrolling:"auto"}},video:{tpl:'<video class="fancybox-video" controls controlsList="nodownload" poster="{{poster}}"><source src="{{src}}" type="{{format}}" />Sorry, your browser doesn\'t support embedded videos, <a href="{{src}}">download</a> and watch with your favorite video player!</video>',format:"",autoStart:!0},defaultType:"image",animationEffect:"zoom",animationDuration:366,zoomOpacity:"auto",transitionEffect:"fade",transitionDuration:366,slideClass:"",baseClass:"",baseTpl:'<div class="fancybox-container" role="dialog" tabindex="-1"><div class="fancybox-bg"></div><div class="fancybox-inner"><div class="fancybox-infobar"><span data-fancybox-index></span>&nbsp;/&nbsp;<span data-fancybox-count></span></div><div class="fancybox-toolbar">{{buttons}}</div><div class="fancybox-navigation">{{arrows}}</div><div class="fancybox-stage"></div><div class="fancybox-caption"><div class="fancybox-caption__body"></div></div></div></div>',spinnerTpl:'<div class="fancybox-loading"></div>',errorTpl:'<div class="fancybox-error"><p>{{ERROR}}</p></div>',btnTpl:{download:'<a download data-fancybox-download class="fancybox-button fancybox-button--download" title="{{DOWNLOAD}}" href="javascript:;"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M18.62 17.09V19H5.38v-1.91zm-2.97-6.96L17 11.45l-5 4.87-5-4.87 1.36-1.32 2.68 2.64V5h1.92v7.77z"/></svg></a>',zoom:'<button data-fancybox-zoom class="fancybox-button fancybox-button--zoom" title="{{ZOOM}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M18.7 17.3l-3-3a5.9 5.9 0 0 0-.6-7.6 5.9 5.9 0 0 0-8.4 0 5.9 5.9 0 0 0 0 8.4 5.9 5.9 0 0 0 7.7.7l3 3a1 1 0 0 0 1.3 0c.4-.5.4-1 0-1.5zM8.1 13.8a4 4 0 0 1 0-5.7 4 4 0 0 1 5.7 0 4 4 0 0 1 0 5.7 4 4 0 0 1-5.7 0z"/></svg></button>',close:'<button data-fancybox-close class="fancybox-button fancybox-button--close" title="{{CLOSE}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 10.6L6.6 5.2 5.2 6.6l5.4 5.4-5.4 5.4 1.4 1.4 5.4-5.4 5.4 5.4 1.4-1.4-5.4-5.4 5.4-5.4-1.4-1.4-5.4 5.4z"/></svg></button>',arrowLeft:'<button data-fancybox-prev class="fancybox-button fancybox-button--arrow_left" title="{{PREV}}"><div><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M11.28 15.7l-1.34 1.37L5 12l4.94-5.07 1.34 1.38-2.68 2.72H19v1.94H8.6z"/></svg></div></button>',arrowRight:'<button data-fancybox-next class="fancybox-button fancybox-button--arrow_right" title="{{NEXT}}"><div><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M15.4 12.97l-2.68 2.72 1.34 1.38L19 12l-4.94-5.07-1.34 1.38 2.68 2.72H5v1.94z"/></svg></div></button>',smallBtn:'<button type="button" data-fancybox-close class="fancybox-button fancybox-close-small" title="{{CLOSE}}"><svg xmlns="http://www.w3.org/2000/svg" version="1" viewBox="0 0 24 24"><path d="M13 12l5-5-1-1-5 5-5-5-1 1 5 5-5 5 1 1 5-5 5 5 1-1z"/></svg></button>'},parentEl:"body",hideScrollbar:!0,autoFocus:!0,backFocus:!0,trapFocus:!0,fullScreen:{autoStart:!1},touch:{vertical:!0,momentum:!0},hash:null,media:{},slideShow:{autoStart:!1,speed:3e3},thumbs:{autoStart:!1,hideOnClose:!0,parentEl:".fancybox-container",axis:"y"},wheel:"auto",onInit:g.noop,beforeLoad:g.noop,afterLoad:g.noop,beforeShow:g.noop,afterShow:g.noop,beforeClose:g.noop,afterClose:g.noop,onActivate:g.noop,onDeactivate:g.noop,clickContent:function(e){return"image"===e.type&&"zoom"},clickSlide:"close",clickOutside:"close",dblclickContent:!1,dblclickSlide:!1,dblclickOutside:!1,mobile:{preventCaptionOverlap:!1,idleTime:!1,clickContent:function(e){return"image"===e.type&&"toggleControls"},clickSlide:function(e){return"image"===e.type?"toggleControls":"close"},dblclickContent:function(e){return"image"===e.type&&"zoom"},dblclickSlide:function(e){return"image"===e.type&&"zoom"}},lang:"en",i18n:{en:{CLOSE:"Close",NEXT:"Next",PREV:"Previous",ERROR:"The requested content cannot be loaded. <br/> Please try again later.",PLAY_START:"Start slideshow",PLAY_STOP:"Pause slideshow",FULL_SCREEN:"Full screen",THUMBS:"Thumbnails",DOWNLOAD:"Download",SHARE:"Share",ZOOM:"Zoom"},de:{CLOSE:"Schlie&szlig;en",NEXT:"Weiter",PREV:"Zur&uuml;ck",ERROR:"Die angeforderten Daten konnten nicht geladen werden. <br/> Bitte versuchen Sie es sp&auml;ter nochmal.",PLAY_START:"Diaschau starten",PLAY_STOP:"Diaschau beenden",FULL_SCREEN:"Vollbild",THUMBS:"Vorschaubilder",DOWNLOAD:"Herunterladen",SHARE:"Teilen",ZOOM:"Vergr&ouml;&szlig;ern"}}},i=g(l),a=g(d),r=0,p=l.requestAnimationFrame||l.webkitRequestAnimationFrame||l.mozRequestAnimationFrame||l.oRequestAnimationFrame||function(e){return l.setTimeout(e,1e3/60)},t=l.cancelAnimationFrame||l.webkitCancelAnimationFrame||l.mozCancelAnimationFrame||l.oCancelAnimationFrame||function(e){l.clearTimeout(e)},c=function(){var e,t=d.createElement("fakeelement"),n={transition:"transitionend",OTransition:"oTransitionEnd",MozTransition:"transitionend",WebkitTransition:"webkitTransitionEnd"};for(e in n)if(void 0!==t.style[e])return n[e];return"transitionend"}(),f=function(e){return e&&e.length&&e[0].offsetHeight},u=function(e,t){var n=g.extend(!0,{},e,t);return g.each(t,function(e,t){g.isArray(t)&&(n[e]=t)}),n},o=function(e,t,n){var o=this;o.opts=u({index:n},g.fancybox.defaults),g.isPlainObject(t)&&(o.opts=u(o.opts,t)),g.fancybox.isMobile&&(o.opts=u(o.opts,o.opts.mobile)),o.id=o.opts.id||++r,o.currIndex=parseInt(o.opts.index,10)||0,o.prevIndex=null,o.prevPos=null,o.currPos=0,o.firstRun=!0,o.group=[],o.slides={},o.addContent(e),o.group.length&&o.init()};g.extend(o.prototype,{init:function(){var t,n,o=this,i=o.group[o.currIndex].opts;i.closeExisting&&g.fancybox.close(!0),g("body").addClass("fancybox-active"),!g.fancybox.getInstance()&&!1!==i.hideScrollbar&&!g.fancybox.isMobile&&d.body.scrollHeight>l.innerHeight&&(g("head").append('<style id="fancybox-style-noscroll" type="text/css">.compensate-for-scrollbar{margin-right:'+(l.innerWidth-d.documentElement.clientWidth)+"px;}</style>"),g("body").addClass("compensate-for-scrollbar")),n="",g.each(i.buttons,function(e,t){n+=i.btnTpl[t]||""}),t=g(o.translate(o,i.baseTpl.replace("{{buttons}}",n).replace("{{arrows}}",i.btnTpl.arrowLeft+i.btnTpl.arrowRight))).attr("id","fancybox-container-"+o.id).addClass(i.baseClass).data("FancyBox",o).appendTo(i.parentEl),o.$refs={container:t},["bg","inner","infobar","toolbar","stage","caption","navigation"].forEach(function(e){o.$refs[e]=t.find(".fancybox-"+e)}),o.trigger("onInit"),o.activate(),o.jumpTo(o.currIndex)},translate:function(e,t){var n=e.opts.i18n[e.opts.lang]||e.opts.i18n.en;return t.replace(/\{\{(\w+)\}\}/g,function(e,t){return void 0===n[t]?e:n[t]})},addContent:function(e){var t,c=this,n=g.makeArray(e);g.each(n,function(e,t){var n,o,i,r,a,s={},l={};g.isPlainObject(t)?l=(s=t).opts||t:"object"===g.type(t)&&g(t).length?(l=(n=g(t)).data()||{},(l=g.extend(!0,{},l,l.options)).$orig=n,s.src=c.opts.src||l.src||n.attr("href"),s.type||s.src||(s.type="inline",s.src=t)):s={type:"html",src:t+""},s.opts=g.extend(!0,{},c.opts,l),g.isArray(l.buttons)&&(s.opts.buttons=l.buttons),g.fancybox.isMobile&&s.opts.mobile&&(s.opts=u(s.opts,s.opts.mobile)),o=s.type||s.opts.type,r=s.src||"",!o&&r&&((i=r.match(/\.(mp4|mov|ogv|webm)((\?|#).*)?$/i))?(o="video",s.opts.video.format||(s.opts.video.format="video/"+("ogv"===i[1]?"ogg":i[1]))):r.match(/(^data:image\/[a-z0-9+\/=]*,)|(\.(jp(e|g|eg)|gif|png|bmp|webp|svg|ico)((\?|#).*)?$)/i)?o="image":r.match(/\.(pdf)((\?|#).*)?$/i)?(o="iframe",s=g.extend(!0,s,{contentType:"pdf",opts:{iframe:{preload:!1}}})):"#"===r.charAt(0)&&(o="inline")),o?s.type=o:c.trigger("objectNeedsType",s),s.contentType||(s.contentType=-1<g.inArray(s.type,["html","inline","ajax"])?"html":s.type),s.index=c.group.length,"auto"==s.opts.smallBtn&&(s.opts.smallBtn=-1<g.inArray(s.type,["html","inline","ajax"])),"auto"===s.opts.toolbar&&(s.opts.toolbar=!s.opts.smallBtn),s.$thumb=s.opts.$thumb||null,s.opts.$trigger&&s.index===c.opts.index&&(s.$thumb=s.opts.$trigger.find("img:first"),s.$thumb.length&&(s.opts.$orig=s.opts.$trigger)),s.$thumb&&s.$thumb.length||!s.opts.$orig||(s.$thumb=s.opts.$orig.find("img:first")),s.$thumb&&!s.$thumb.length&&(s.$thumb=null),s.thumb=s.opts.thumb||(s.$thumb?s.$thumb[0].src:null),"function"===g.type(s.opts.caption)&&(s.opts.caption=s.opts.caption.apply(t,[c,s])),"function"===g.type(c.opts.caption)&&(s.opts.caption=c.opts.caption.apply(t,[c,s])),s.opts.caption instanceof g||(s.opts.caption=void 0===s.opts.caption?"":s.opts.caption+""),"ajax"!==s.type||1<(a=r.split(/\s+/,2)).length&&(s.src=a.shift(),s.opts.filter=a.shift()),s.opts.modal&&(s.opts=g.extend(!0,s.opts,{trapFocus:!0,infobar:0,toolbar:0,smallBtn:0,keyboard:0,slideShow:0,fullScreen:0,thumbs:0,touch:0,clickContent:!1,clickSlide:!1,clickOutside:!1,dblclickContent:!1,dblclickSlide:!1,dblclickOutside:!1})),c.group.push(s)}),Object.keys(c.slides).length&&(c.updateControls(),(t=c.Thumbs)&&t.isActive&&(t.create(),t.focus()))},addEvents:function(){var o=this;o.removeEvents(),o.$refs.container.on("click.fb-close","[data-fancybox-close]",function(e){e.stopPropagation(),e.preventDefault(),o.close(e)}).on("touchstart.fb-prev click.fb-prev","[data-fancybox-prev]",function(e){e.stopPropagation(),e.preventDefault(),o.previous()}).on("touchstart.fb-next click.fb-next","[data-fancybox-next]",function(e){e.stopPropagation(),e.preventDefault(),o.next()}).on("click.fb","[data-fancybox-zoom]",function(e){o[o.isScaledDown()?"scaleToActual":"scaleToFit"]()}),i.on("orientationchange.fb resize.fb",function(e){e&&e.originalEvent&&"resize"===e.originalEvent.type?(o.requestId&&t(o.requestId),o.requestId=p(function(){o.update(e)})):(o.current&&"iframe"===o.current.type&&o.$refs.stage.hide(),setTimeout(function(){o.$refs.stage.show(),o.update(e)},g.fancybox.isMobile?600:250))}),a.on("keydown.fb",function(e){var t=(g.fancybox?g.fancybox.getInstance():null).current,n=e.keyCode||e.which;if(9!=n)return!t.opts.keyboard||e.ctrlKey||e.altKey||e.shiftKey||g(e.target).is("input,textarea,video,audio,select")?void 0:8===n||27===n?(e.preventDefault(),void o.close(e)):37===n||38===n?(e.preventDefault(),void o.previous()):39===n||40===n?(e.preventDefault(),void o.next()):void o.trigger("afterKeydown",e,n);t.opts.trapFocus&&o.focus(e)}),o.group[o.currIndex].opts.idleTime&&(o.idleSecondsCounter=0,a.on("mousemove.fb-idle mouseleave.fb-idle mousedown.fb-idle touchstart.fb-idle touchmove.fb-idle scroll.fb-idle keydown.fb-idle",function(e){o.idleSecondsCounter=0,o.isIdle&&o.showControls(),o.isIdle=!1}),o.idleInterval=l.setInterval(function(){++o.idleSecondsCounter>=o.group[o.currIndex].opts.idleTime&&!o.isDragging&&(o.isIdle=!0,o.idleSecondsCounter=0,o.hideControls())},1e3))},removeEvents:function(){i.off("orientationchange.fb resize.fb"),a.off("keydown.fb .fb-idle"),this.$refs.container.off(".fb-close .fb-prev .fb-next"),this.idleInterval&&(l.clearInterval(this.idleInterval),this.idleInterval=null)},previous:function(e){return this.jumpTo(this.currPos-1,e)},next:function(e){return this.jumpTo(this.currPos+1,e)},jumpTo:function(e,o){var t,n,i,r,a,s,l,c,u,d=this,p=d.group.length;if(!(d.isDragging||d.isClosing||d.isAnimating&&d.firstRun)){if(e=parseInt(e,10),!(i=d.current?d.current.opts.loop:d.opts.loop)&&(e<0||p<=e))return!1;if(t=d.firstRun=!Object.keys(d.slides).length,a=d.current,d.prevIndex=d.currIndex,d.prevPos=d.currPos,r=d.createSlide(e),1<p&&((i||r.index<p-1)&&d.createSlide(e+1),(i||0<r.index)&&d.createSlide(e-1)),d.current=r,d.currIndex=r.index,d.currPos=r.pos,d.trigger("beforeShow",t),d.updateControls(),r.forcedDuration=void 0,g.isNumeric(o)?r.forcedDuration=o:o=r.opts[t?"animationDuration":"transitionDuration"],o=parseInt(o,10),n=d.isMoved(r),r.$slide.addClass("fancybox-slide--current"),t)return r.opts.animationEffect&&o&&d.$refs.container.css("transition-duration",o+"ms"),d.$refs.container.addClass("fancybox-is-open").trigger("focus"),d.loadSlide(r),void d.preload("image");s=g.fancybox.getTranslate(a.$slide),l=g.fancybox.getTranslate(d.$refs.stage),g.each(d.slides,function(e,t){g.fancybox.stop(t.$slide,!0)}),a.pos!==r.pos&&(a.isComplete=!1),a.$slide.removeClass("fancybox-slide--complete fancybox-slide--current"),n?(u=s.left-(a.pos*s.width+a.pos*a.opts.gutter),g.each(d.slides,function(e,t){t.$slide.removeClass("fancybox-animated").removeClass(function(e,t){return(t.match(/(^|\s)fancybox-fx-\S+/g)||[]).join(" ")});var n=t.pos*s.width+t.pos*t.opts.gutter;g.fancybox.setTranslate(t.$slide,{top:0,left:n-l.left+u}),t.pos!==r.pos&&t.$slide.addClass("fancybox-slide--"+(t.pos>r.pos?"next":"previous")),f(t.$slide),g.fancybox.animate(t.$slide,{top:0,left:(t.pos-r.pos)*s.width+(t.pos-r.pos)*t.opts.gutter},o,function(){t.$slide.css({transform:"",opacity:""}).removeClass("fancybox-slide--next fancybox-slide--previous"),t.pos===d.currPos&&d.complete()})})):o&&r.opts.transitionEffect&&(c="fancybox-animated fancybox-fx-"+r.opts.transitionEffect,a.$slide.addClass("fancybox-slide--"+(a.pos>r.pos?"next":"previous")),g.fancybox.animate(a.$slide,c,o,function(){a.$slide.removeClass(c).removeClass("fancybox-slide--next fancybox-slide--previous")},!1)),r.isLoaded?d.revealContent(r):d.loadSlide(r),d.preload("image")}},createSlide:function(e){var t,n=this,o=e%n.group.length;return o=o<0?n.group.length+o:o,!n.slides[e]&&n.group[o]&&(t=g('<div class="fancybox-slide"></div>').appendTo(n.$refs.stage),n.slides[e]=g.extend(!0,{},n.group[o],{pos:e,$slide:t,isLoaded:!1}),n.updateSlide(n.slides[e])),n.slides[e]},scaleToActual:function(e,t,n){var o,i,r,a,s,l=this,c=l.current,u=c.$content,d=g.fancybox.getTranslate(c.$slide).width,p=g.fancybox.getTranslate(c.$slide).height,f=c.width,h=c.height;l.isAnimating||l.isMoved()||!u||"image"!=c.type||!c.isLoaded||c.hasError||(l.isAnimating=!0,g.fancybox.stop(u),e=void 0===e?.5*d:e,t=void 0===t?.5*p:t,(o=g.fancybox.getTranslate(u)).top-=g.fancybox.getTranslate(c.$slide).top,o.left-=g.fancybox.getTranslate(c.$slide).left,a=f/o.width,s=h/o.height,i=.5*d-.5*f,r=.5*p-.5*h,d<f&&(0<(i=o.left*a-(e*a-e))&&(i=0),i<d-f&&(i=d-f)),p<h&&(0<(r=o.top*s-(t*s-t))&&(r=0),r<p-h&&(r=p-h)),l.updateCursor(f,h),g.fancybox.animate(u,{top:r,left:i,scaleX:a,scaleY:s},n||366,function(){l.isAnimating=!1}),l.SlideShow&&l.SlideShow.isActive&&l.SlideShow.stop())},scaleToFit:function(e){var t,n=this,o=n.current,i=o.$content;n.isAnimating||n.isMoved()||!i||"image"!=o.type||!o.isLoaded||o.hasError||(n.isAnimating=!0,g.fancybox.stop(i),t=n.getFitPos(o),n.updateCursor(t.width,t.height),g.fancybox.animate(i,{top:t.top,left:t.left,scaleX:t.width/i.width(),scaleY:t.height/i.height()},e||366,function(){n.isAnimating=!1}))},getFitPos:function(e){var t,n,o,i,r=e.$content,a=e.$slide,s=e.width||e.opts.width,l=e.height||e.opts.height,c={};return!!(e.isLoaded&&r&&r.length)&&(t=g.fancybox.getTranslate(this.$refs.stage).width,n=g.fancybox.getTranslate(this.$refs.stage).height,t-=parseFloat(a.css("paddingLeft"))+parseFloat(a.css("paddingRight"))+parseFloat(r.css("marginLeft"))+parseFloat(r.css("marginRight")),n-=parseFloat(a.css("paddingTop"))+parseFloat(a.css("paddingBottom"))+parseFloat(r.css("marginTop"))+parseFloat(r.css("marginBottom")),s&&l||(s=t,l=n),t-.5<(s*=o=Math.min(1,t/s,n/l))&&(s=t),n-.5<(l*=o)&&(l=n),"image"===e.type?(c.top=Math.floor(.5*(n-l))+parseFloat(a.css("paddingTop")),c.left=Math.floor(.5*(t-s))+parseFloat(a.css("paddingLeft"))):"video"===e.contentType&&(s/(i=e.opts.width&&e.opts.height?s/l:e.opts.ratio||16/9)<l?l=s/i:l*i<s&&(s=l*i)),c.width=s,c.height=l,c)},update:function(n){var o=this;g.each(o.slides,function(e,t){o.updateSlide(t,n)})},updateSlide:function(e,t){var n=this,o=e&&e.$content,i=e.width||e.opts.width,r=e.height||e.opts.height,a=e.$slide;n.adjustCaption(e),o&&(i||r||"video"===e.contentType)&&!e.hasError&&(g.fancybox.stop(o),g.fancybox.setTranslate(o,n.getFitPos(e)),e.pos===n.currPos&&(n.isAnimating=!1,n.updateCursor())),n.adjustLayout(e),a.length&&(a.trigger("refresh"),e.pos===n.currPos&&n.$refs.toolbar.add(n.$refs.navigation.find(".fancybox-button--arrow_right")).toggleClass("compensate-for-scrollbar",a.get(0).scrollHeight>a.get(0).clientHeight)),n.trigger("onUpdate",e,t)},centerSlide:function(e){var t=this,n=t.current,o=n.$slide;!t.isClosing&&n&&(o.siblings().css({transform:"",opacity:""}),o.parent().children().removeClass("fancybox-slide--previous fancybox-slide--next"),g.fancybox.animate(o,{top:0,left:0,opacity:1},void 0===e?0:e,function(){o.css({transform:"",opacity:""}),n.isComplete||t.complete()},!1))},isMoved:function(e){var t,n,o=e||this.current;return!!o&&(n=g.fancybox.getTranslate(this.$refs.stage),t=g.fancybox.getTranslate(o.$slide),!o.$slide.hasClass("fancybox-animated")&&(.5<Math.abs(t.top-n.top)||.5<Math.abs(t.left-n.left)))},updateCursor:function(e,t){var n,o,i=this,r=i.current,a=i.$refs.container;r&&!i.isClosing&&i.Guestures&&(a.removeClass("fancybox-is-zoomable fancybox-can-zoomIn fancybox-can-zoomOut fancybox-can-swipe fancybox-can-pan"),o=!!(n=i.canPan(e,t))||i.isZoomable(),a.toggleClass("fancybox-is-zoomable",o),g("[data-fancybox-zoom]").prop("disabled",!o),n?a.addClass("fancybox-can-pan"):o&&("zoom"===r.opts.clickContent||g.isFunction(r.opts.clickContent)&&"zoom"==r.opts.clickContent(r))?a.addClass("fancybox-can-zoomIn"):r.opts.touch&&(r.opts.touch.vertical||1<i.group.length)&&"video"!==r.contentType&&a.addClass("fancybox-can-swipe"))},isZoomable:function(){var e,t=this.current;if(t&&!this.isClosing&&"image"===t.type&&!t.hasError){if(!t.isLoaded)return!0;if((e=this.getFitPos(t))&&(t.width>e.width||t.height>e.height))return!0}return!1},isScaledDown:function(e,t){var n=!1,o=this.current,i=o.$content;return void 0!==e&&void 0!==t?n=e<o.width&&t<o.height:i&&(n=(n=g.fancybox.getTranslate(i)).width<o.width&&n.height<o.height),n},canPan:function(e,t){var n=this.current,o=null,i=!1;return"image"===n.type&&(n.isComplete||e&&t)&&!n.hasError&&(i=this.getFitPos(n),void 0!==e&&void 0!==t?o={width:e,height:t}:n.isComplete&&(o=g.fancybox.getTranslate(n.$content)),o&&i&&(i=1.5<Math.abs(o.width-i.width)||1.5<Math.abs(o.height-i.height))),i},loadSlide:function(n){var e,t,o,i=this;if(!n.isLoading&&!n.isLoaded){if(!(n.isLoading=!0)===i.trigger("beforeLoad",n))return n.isLoading=!1;switch(e=n.type,(t=n.$slide).off("refresh").trigger("onReset").addClass(n.opts.slideClass),e){case"image":i.setImage(n);break;case"iframe":i.setIframe(n);break;case"html":i.setContent(n,n.src||n.content);break;case"video":i.setContent(n,n.opts.video.tpl.replace(/\{\{src\}\}/gi,n.src).replace("{{format}}",n.opts.videoFormat||n.opts.video.format||"").replace("{{poster}}",n.thumb||""));break;case"inline":g(n.src).length?i.setContent(n,g(n.src)):i.setError(n);break;case"ajax":i.showLoading(n),o=g.ajax(g.extend({},n.opts.ajax.settings,{url:n.src,success:function(e,t){"success"===t&&i.setContent(n,e)},error:function(e,t){e&&"abort"!==t&&i.setError(n)}})),t.one("onReset",function(){o.abort()});break;default:i.setError(n)}return!0}},setImage:function(t){var e,n=this;setTimeout(function(){var e=t.$image;n.isClosing||!t.isLoading||e&&e.length&&e[0].complete||t.hasError||n.showLoading(t)},50),n.checkSrcset(t),t.$content=g('<div class="fancybox-content"></div>').addClass("fancybox-is-hidden").appendTo(t.$slide.addClass("fancybox-slide--image")),!1!==t.opts.preload&&t.opts.width&&t.opts.height&&t.thumb&&(t.width=t.opts.width,t.height=t.opts.height,(e=d.createElement("img")).onerror=function(){g(this).remove(),t.$ghost=null},e.onload=function(){n.afterLoad(t)},t.$ghost=g(e).addClass("fancybox-image").appendTo(t.$content).attr("src",t.thumb)),n.setBigImage(t)},checkSrcset:function(e){var t,n,o,i,r=e.opts.srcset||e.opts.image.srcset;if(r){o=l.devicePixelRatio||1,i=l.innerWidth*o,(n=r.split(",").map(function(e){var o={};return e.trim().split(/\s+/).forEach(function(e,t){var n=parseInt(e.substring(0,e.length-1),10);if(0===t)return o.url=e;n&&(o.value=n,o.postfix=e[e.length-1])}),o})).sort(function(e,t){return e.value-t.value});for(var a=0;a<n.length;a++){var s=n[a];if("w"===s.postfix&&s.value>=i||"x"===s.postfix&&s.value>=o){t=s;break}}!t&&n.length&&(t=n[n.length-1]),t&&(e.src=t.url,e.width&&e.height&&"w"==t.postfix&&(e.height=e.width/e.height*t.value,e.width=t.value),e.opts.srcset=r)}},setBigImage:function(t){var n=this,e=d.createElement("img"),o=g(e);t.$image=o.one("error",function(){n.setError(t)}).one("load",function(){var e;t.$ghost||(n.resolveImageSlideSize(t,this.naturalWidth,this.naturalHeight),n.afterLoad(t)),n.isClosing||(t.opts.srcset&&((e=t.opts.sizes)&&"auto"!==e||(e=(1<t.width/t.height&&1<i.width()/i.height()?"100":Math.round(t.width/t.height*100))+"vw"),o.attr("sizes",e).attr("srcset",t.opts.srcset)),t.$ghost&&setTimeout(function(){t.$ghost&&!n.isClosing&&t.$ghost.hide()},Math.min(300,Math.max(1e3,t.height/1600))),n.hideLoading(t))}).addClass("fancybox-image").attr("src",t.src).appendTo(t.$content),(e.complete||"complete"==e.readyState)&&o.naturalWidth&&o.naturalHeight?o.trigger("load"):e.error&&o.trigger("error")},resolveImageSlideSize:function(e,t,n){var o=parseInt(e.opts.width,10),i=parseInt(e.opts.height,10);e.width=t,e.height=n,0<o&&(e.width=o,e.height=Math.floor(o*n/t)),0<i&&(e.width=Math.floor(i*t/n),e.height=i)},setIframe:function(i){var r,t=this,a=i.opts.iframe,s=i.$slide;i.$content=g('<div class="fancybox-content'+(a.preload?" fancybox-is-hidden":"")+'"></div>').css(a.css).appendTo(s),s.addClass("fancybox-slide--"+i.contentType),i.$iframe=r=g(a.tpl.replace(/\{rnd\}/g,(new Date).getTime())).attr(a.attr).appendTo(i.$content),a.preload?(t.showLoading(i),r.on("load.fb error.fb",function(e){this.isReady=1,i.$slide.trigger("refresh"),t.afterLoad(i)}),s.on("refresh.fb",function(){var e,t=i.$content,n=a.css.width,o=a.css.height;if(1===r[0].isReady){try{e=r.contents().find("body")}catch(e){}e&&e.length&&e.children().length&&(s.css("overflow","visible"),t.css({width:"100%","max-width":"100%",height:"9999px"}),void 0===n&&(n=Math.ceil(Math.max(e[0].clientWidth,e.outerWidth(!0)))),t.css("width",n||"").css("max-width",""),void 0===o&&(o=Math.ceil(Math.max(e[0].clientHeight,e.outerHeight(!0)))),t.css("height",o||""),s.css("overflow","auto")),t.removeClass("fancybox-is-hidden")}})):t.afterLoad(i),r.attr("src",i.src),s.one("onReset",function(){try{g(this).find("iframe").hide().unbind().attr("src","//about:blank")}catch(e){}g(this).off("refresh.fb").empty(),i.isLoaded=!1,i.isRevealed=!1})},setContent:function(e,t){var n;this.isClosing||(this.hideLoading(e),e.$content&&g.fancybox.stop(e.$content),e.$slide.empty(),(n=t)&&n.hasOwnProperty&&n instanceof g&&t.parent().length?((t.hasClass("fancybox-content")||t.parent().hasClass("fancybox-content"))&&t.parents(".fancybox-slide").trigger("onReset"),e.$placeholder=g("<div>").hide().insertAfter(t),t.css("display","inline-block")):e.hasError||("string"===g.type(t)&&(t=g("<div>").append(g.trim(t)).contents()),e.opts.filter&&(t=g("<div>").html(t).find(e.opts.filter))),e.$slide.one("onReset",function(){g(this).find("video,audio").trigger("pause"),e.$placeholder&&(e.$placeholder.after(t.removeClass("fancybox-content").hide()).remove(),e.$placeholder=null),e.$smallBtn&&(e.$smallBtn.remove(),e.$smallBtn=null),e.hasError||(g(this).empty(),e.isLoaded=!1,e.isRevealed=!1)}),g(t).appendTo(e.$slide),g(t).is("video,audio")&&(g(t).addClass("fancybox-video"),g(t).wrap("<div></div>"),e.contentType="video",e.opts.width=e.opts.width||g(t).attr("width"),e.opts.height=e.opts.height||g(t).attr("height")),e.$content=e.$slide.children().filter("div,form,main,video,audio,article,.fancybox-content").first(),e.$content.siblings().hide(),e.$content.length||(e.$content=e.$slide.wrapInner("<div></div>").children().first()),e.$content.addClass("fancybox-content"),e.$slide.addClass("fancybox-slide--"+e.contentType),this.afterLoad(e))},setError:function(e){e.hasError=!0,e.$slide.trigger("onReset").removeClass("fancybox-slide--"+e.contentType).addClass("fancybox-slide--error"),e.contentType="html",this.setContent(e,this.translate(e,e.opts.errorTpl)),e.pos===this.currPos&&(this.isAnimating=!1)},showLoading:function(e){(e=e||this.current)&&!e.$spinner&&(e.$spinner=g(this.translate(this,this.opts.spinnerTpl)).appendTo(e.$slide).hide().fadeIn("fast"))},hideLoading:function(e){(e=e||this.current)&&e.$spinner&&(e.$spinner.stop().remove(),delete e.$spinner)},afterLoad:function(e){var t=this;t.isClosing||(e.isLoading=!1,e.isLoaded=!0,t.trigger("afterLoad",e),t.hideLoading(e),!e.opts.smallBtn||e.$smallBtn&&e.$smallBtn.length||(e.$smallBtn=g(t.translate(e,e.opts.btnTpl.smallBtn)).appendTo(e.$content)),e.opts.protect&&e.$content&&!e.hasError&&(e.$content.on("contextmenu.fb",function(e){return 2==e.button&&e.preventDefault(),!0}),"image"===e.type&&g('<div class="fancybox-spaceball"></div>').appendTo(e.$content)),t.adjustCaption(e),t.adjustLayout(e),e.pos===t.currPos&&t.updateCursor(),t.revealContent(e))},adjustCaption:function(e){var t,n=this,o=e||n.current,i=o.opts.caption,r=o.opts.preventCaptionOverlap,a=n.$refs.caption,s=!1;a.toggleClass("fancybox-caption--separate",r),r&&i&&i.length&&(o.pos!==n.currPos?((t=a.clone().appendTo(a.parent())).children().eq(0).empty().html(i),s=t.outerHeight(!0),t.empty().remove()):n.$caption&&(s=n.$caption.outerHeight(!0)),o.$slide.css("padding-bottom",s||""))},adjustLayout:function(e){var t,n,o,i,r=e||this.current;r.isLoaded&&!0!==r.opts.disableLayoutFix&&(r.$content.css("margin-bottom",""),r.$content.outerHeight()>r.$slide.height()+.5&&(o=r.$slide[0].style["padding-bottom"],i=r.$slide.css("padding-bottom"),0<parseFloat(i)&&(t=r.$slide[0].scrollHeight,r.$slide.css("padding-bottom",0),Math.abs(t-r.$slide[0].scrollHeight)<1&&(n=i),r.$slide.css("padding-bottom",o))),r.$content.css("margin-bottom",n))},revealContent:function(e){var t,n,o,i,r=this,a=e.$slide,s=!1,l=!1,c=r.isMoved(e),u=e.isRevealed;return e.isRevealed=!0,t=e.opts[r.firstRun?"animationEffect":"transitionEffect"],o=e.opts[r.firstRun?"animationDuration":"transitionDuration"],o=parseInt(void 0===e.forcedDuration?o:e.forcedDuration,10),!c&&e.pos===r.currPos&&o||(t=!1),"zoom"===t&&(e.pos===r.currPos&&o&&"image"===e.type&&!e.hasError&&(l=r.getThumbPos(e))?s=r.getFitPos(e):t="fade"),"zoom"===t?(r.isAnimating=!0,s.scaleX=s.width/l.width,s.scaleY=s.height/l.height,"auto"==(i=e.opts.zoomOpacity)&&(i=.1<Math.abs(e.width/e.height-l.width/l.height)),i&&(l.opacity=.1,s.opacity=1),g.fancybox.setTranslate(e.$content.removeClass("fancybox-is-hidden"),l),f(e.$content),void g.fancybox.animate(e.$content,s,o,function(){r.isAnimating=!1,r.complete()})):(r.updateSlide(e),t?(g.fancybox.stop(a),n="fancybox-slide--"+(e.pos>=r.prevPos?"next":"previous")+" fancybox-animated fancybox-fx-"+t,a.addClass(n).removeClass("fancybox-slide--current"),e.$content.removeClass("fancybox-is-hidden"),f(a),"image"!==e.type&&e.$content.hide().show(0),void g.fancybox.animate(a,"fancybox-slide--current",o,function(){a.removeClass(n).css({transform:"",opacity:""}),e.pos===r.currPos&&r.complete()},!0)):(e.$content.removeClass("fancybox-is-hidden"),u||!c||"image"!==e.type||e.hasError||e.$content.hide().fadeIn("fast"),void(e.pos===r.currPos&&r.complete())))},getThumbPos:function(e){var t,n,o,i,r,a,s,l,c,u=e.$thumb;return!(!u||(!(s=u[0])||s.ownerDocument!==d||(g(".fancybox-container").css("pointer-events","none"),l={x:s.getBoundingClientRect().left+s.offsetWidth/2,y:s.getBoundingClientRect().top+s.offsetHeight/2},c=d.elementFromPoint(l.x,l.y)===s,g(".fancybox-container").css("pointer-events",""),!c)))&&(t=g.fancybox.getTranslate(u),n=parseFloat(u.css("border-top-width")||0),o=parseFloat(u.css("border-right-width")||0),i=parseFloat(u.css("border-bottom-width")||0),r=parseFloat(u.css("border-left-width")||0),a={top:t.top+n,left:t.left+r,width:t.width-o-r,height:t.height-n-i,scaleX:1,scaleY:1},0<t.width&&0<t.height&&a)},complete:function(){var e,n=this,t=n.current,o={};!n.isMoved()&&t.isLoaded&&(t.isComplete||(t.isComplete=!0,t.$slide.siblings().trigger("onReset"),n.preload("inline"),f(t.$slide),t.$slide.addClass("fancybox-slide--complete"),g.each(n.slides,function(e,t){t.pos>=n.currPos-1&&t.pos<=n.currPos+1?o[t.pos]=t:t&&(g.fancybox.stop(t.$slide),t.$slide.off().remove())}),n.slides=o),n.isAnimating=!1,n.updateCursor(),n.trigger("afterShow"),t.opts.video.autoStart&&t.$slide.find("video,audio").filter(":visible:first").trigger("play").one("ended",function(){Document.exitFullscreen?Document.exitFullscreen():this.webkitExitFullscreen&&this.webkitExitFullscreen(),n.next()}),t.opts.autoFocus&&"html"===t.contentType&&((e=t.$content.find("input[autofocus]:enabled:visible:first")).length?e.trigger("focus"):n.focus(null,!0)),t.$slide.scrollTop(0).scrollLeft(0))},preload:function(e){var t,n,o=this;o.group.length<2||(n=o.slides[o.currPos+1],(t=o.slides[o.currPos-1])&&t.type===e&&o.loadSlide(t),n&&n.type===e&&o.loadSlide(n))},focus:function(e,t){var n,o,i=this,r=["a[href]","area[href]",'input:not([disabled]):not([type="hidden"]):not([aria-hidden])',"select:not([disabled]):not([aria-hidden])","textarea:not([disabled]):not([aria-hidden])","button:not([disabled]):not([aria-hidden])","iframe","object","embed","video","audio","[contenteditable]",'[tabindex]:not([tabindex^="-"])'].join(",");i.isClosing||((n=(n=!e&&i.current&&i.current.isComplete?i.current.$slide.find("*:visible"+(t?":not(.fancybox-close-small)":"")):i.$refs.container.find("*:visible")).filter(r).filter(function(){return"hidden"!==g(this).css("visibility")&&!g(this).hasClass("disabled")})).length?(o=n.index(d.activeElement),e&&e.shiftKey?(o<0||0==o)&&(e.preventDefault(),n.eq(n.length-1).trigger("focus")):(o<0||o==n.length-1)&&(e&&e.preventDefault(),n.eq(0).trigger("focus"))):i.$refs.container.trigger("focus"))},activate:function(){var t=this;g(".fancybox-container").each(function(){var e=g(this).data("FancyBox");e&&e.id!==t.id&&!e.isClosing&&(e.trigger("onDeactivate"),e.removeEvents(),e.isVisible=!1)}),t.isVisible=!0,(t.current||t.isIdle)&&(t.update(),t.updateControls()),t.trigger("onActivate"),t.addEvents()},close:function(e,t){function n(){u.cleanUp(e)}var o,i,r,a,s,l,c,u=this,d=u.current;return!u.isClosing&&(!(u.isClosing=!0)===u.trigger("beforeClose",e)?(u.isClosing=!1,p(function(){u.update()}),!1):(u.removeEvents(),r=d.$content,o=d.opts.animationEffect,i=g.isNumeric(t)?t:o?d.opts.animationDuration:0,d.$slide.removeClass("fancybox-slide--complete fancybox-slide--next fancybox-slide--previous fancybox-animated"),!0!==e?g.fancybox.stop(d.$slide):o=!1,d.$slide.siblings().trigger("onReset").remove(),i&&u.$refs.container.removeClass("fancybox-is-open").addClass("fancybox-is-closing").css("transition-duration",i+"ms"),u.hideLoading(d),u.hideControls(!0),u.updateCursor(),"zoom"!==o||r&&i&&"image"===d.type&&!u.isMoved()&&!d.hasError&&(c=u.getThumbPos(d))||(o="fade"),"zoom"===o?(g.fancybox.stop(r),l={top:(a=g.fancybox.getTranslate(r)).top,left:a.left,scaleX:a.width/c.width,scaleY:a.height/c.height,width:c.width,height:c.height},"auto"==(s=d.opts.zoomOpacity)&&(s=.1<Math.abs(d.width/d.height-c.width/c.height)),s&&(c.opacity=0),g.fancybox.setTranslate(r,l),f(r),g.fancybox.animate(r,c,i,n)):o&&i?g.fancybox.animate(d.$slide.addClass("fancybox-slide--previous").removeClass("fancybox-slide--current"),"fancybox-animated fancybox-fx-"+o,i,n):!0===e?setTimeout(n,i):n(),!0))},cleanUp:function(e){var t,n,o,i=this,r=i.current.opts.$orig;i.current.$slide.trigger("onReset"),i.$refs.container.empty().remove(),i.trigger("afterClose",e),i.current.opts.backFocus&&(r&&r.length&&r.is(":visible")||(r=i.$trigger),r&&r.length&&(n=l.scrollX,o=l.scrollY,r.trigger("focus"),g("html, body").scrollTop(o).scrollLeft(n))),i.current=null,(t=g.fancybox.getInstance())?t.activate():(g("body").removeClass("fancybox-active compensate-for-scrollbar"),g("#fancybox-style-noscroll").remove())},trigger:function(e,t){var n,o=Array.prototype.slice.call(arguments,1),i=this,r=t&&t.opts?t:i.current;if(r?o.unshift(r):r=i,o.unshift(i),g.isFunction(r.opts[e])&&(n=r.opts[e].apply(r,o)),!1===n)return n;"afterClose"!==e&&i.$refs?i.$refs.container.trigger(e+".fb",o):a.trigger(e+".fb",o)},updateControls:function(){var e=this,t=e.current,n=t.index,o=e.$refs.container,i=e.$refs.caption,r=t.opts.caption;t.$slide.trigger("refresh"),r&&r.length?(e.$caption=i).children().eq(0).html(r):e.$caption=null,e.hasHiddenControls||e.isIdle||e.showControls(),o.find("[data-fancybox-count]").html(e.group.length),o.find("[data-fancybox-index]").html(n+1),o.find("[data-fancybox-prev]").prop("disabled",!t.opts.loop&&n<=0),o.find("[data-fancybox-next]").prop("disabled",!t.opts.loop&&n>=e.group.length-1),"image"===t.type?o.find("[data-fancybox-zoom]").show().end().find("[data-fancybox-download]").attr("href",t.opts.image.src||t.src).show():t.opts.toolbar&&o.find("[data-fancybox-download],[data-fancybox-zoom]").hide(),g(d.activeElement).is(":hidden,[disabled]")&&e.$refs.container.trigger("focus")},hideControls:function(e){var t=["infobar","toolbar","nav"];!e&&this.current.opts.preventCaptionOverlap||t.push("caption"),this.$refs.container.removeClass(t.map(function(e){return"fancybox-show-"+e}).join(" ")),this.hasHiddenControls=!0},showControls:function(){var e=this,t=e.current?e.current.opts:e.opts,n=e.$refs.container;e.hasHiddenControls=!1,e.idleSecondsCounter=0,n.toggleClass("fancybox-show-toolbar",!(!t.toolbar||!t.buttons)).toggleClass("fancybox-show-infobar",!!(t.infobar&&1<e.group.length)).toggleClass("fancybox-show-caption",!!e.$caption).toggleClass("fancybox-show-nav",!!(t.arrows&&1<e.group.length)).toggleClass("fancybox-is-modal",!!t.modal)},toggleControls:function(){this.hasHiddenControls?this.showControls():this.hideControls()}}),g.fancybox={version:"3.5.7",defaults:e,getInstance:function(e){var t=g('.fancybox-container:not(".fancybox-is-closing"):last').data("FancyBox"),n=Array.prototype.slice.call(arguments,1);return t instanceof o&&("string"===g.type(e)?t[e].apply(t,n):"function"===g.type(e)&&e.apply(t,n),t)},open:function(e,t,n){return new o(e,t,n)},close:function(e){var t=this.getInstance();t&&(t.close(),!0===e&&this.close(e))},destroy:function(){this.close(!0),a.add("body").off("click.fb-start","**")},isMobile:/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),use3d:(h=d.createElement("div"),l.getComputedStyle&&l.getComputedStyle(h)&&l.getComputedStyle(h).getPropertyValue("transform")&&!(d.documentMode&&d.documentMode<11)),getTranslate:function(e){var t;return!(!e||!e.length)&&{top:(t=e[0].getBoundingClientRect()).top||0,left:t.left||0,width:t.width,height:t.height,opacity:parseFloat(e.css("opacity"))}},setTranslate:function(e,t){var n="",o={};if(e&&t)return void 0===t.left&&void 0===t.top||(n=(void 0===t.left?e.position().left:t.left)+"px, "+(void 0===t.top?e.position().top:t.top)+"px",n=this.use3d?"translate3d("+n+", 0px)":"translate("+n+")"),void 0!==t.scaleX&&void 0!==t.scaleY?n+=" scale("+t.scaleX+", "+t.scaleY+")":void 0!==t.scaleX&&(n+=" scaleX("+t.scaleX+")"),n.length&&(o.transform=n),void 0!==t.opacity&&(o.opacity=t.opacity),void 0!==t.width&&(o.width=t.width),void 0!==t.height&&(o.height=t.height),e.css(o)},animate:function(t,n,o,i,r){var a,s=this;g.isFunction(o)&&(i=o,o=null),s.stop(t),a=s.getTranslate(t),t.on(c,function(e){e&&e.originalEvent&&(!t.is(e.originalEvent.target)||"z-index"==e.originalEvent.propertyName)||(s.stop(t),g.isNumeric(o)&&t.css("transition-duration",""),g.isPlainObject(n)?void 0!==n.scaleX&&void 0!==n.scaleY&&s.setTranslate(t,{top:n.top,left:n.left,width:a.width*n.scaleX,height:a.height*n.scaleY,scaleX:1,scaleY:1}):!0!==r&&t.removeClass(n),g.isFunction(i)&&i(e))}),g.isNumeric(o)&&t.css("transition-duration",o+"ms"),g.isPlainObject(n)?(void 0!==n.scaleX&&void 0!==n.scaleY&&(delete n.width,delete n.height,t.parent().hasClass("fancybox-slide--image")&&t.parent().addClass("fancybox-is-scaling")),g.fancybox.setTranslate(t,n)):t.addClass(n),t.data("timer",setTimeout(function(){t.trigger(c)},o+33))},stop:function(e,t){e&&e.length&&(clearTimeout(e.data("timer")),t&&e.trigger(c),e.off(c).css("transition-duration",""),e.parent().removeClass("fancybox-is-scaling"))}},g.fn.fancybox=function(e){var t;return(t=(e=e||{}).selector||!1)?g("body").off("click.fb-start",t).on("click.fb-start",t,{options:e},n):this.off("click.fb-start").on("click.fb-start",{items:this,options:e},n),this},a.on("click.fb-start","[data-fancybox]",n),a.on("click.fb-start","[data-fancybox-trigger]",function(e){g('[data-fancybox="'+g(this).attr("data-fancybox-trigger")+'"]').eq(g(this).attr("data-fancybox-index")||0).trigger("click.fb-start",{$trigger:g(this)})}),s=null,a.on("mousedown mouseup focus blur",".fancybox-button",function(e){switch(e.type){case"mousedown":s=g(this);break;case"mouseup":s=null;break;case"focusin":g(".fancybox-button").removeClass("fancybox-focus"),g(this).is(s)||g(this).is("[disabled]")||g(this).addClass("fancybox-focus");break;case"focusout":g(".fancybox-button").removeClass("fancybox-focus")}})}var s,h}(window,document,jQuery),function(f){function h(n,e,t){if(n)return t=t||"","object"===f.type(t)&&(t=f.param(t,!0)),f.each(e,function(e,t){n=n.replace("$"+e,t||"")}),t.length&&(n+=(0<n.indexOf("?")?"&":"?")+t),n}var o={youtube:{matcher:/(youtube\.com|youtu\.be|youtube\-nocookie\.com)\/(watch\?(.*&)?v=|v\/|u\/|embed\/?)?(videoseries\?list=(.*)|[\w-]{11}|\?listType=(.*)&list=(.*))(.*)/i,params:{autoplay:1,autohide:1,fs:1,rel:0,hd:1,wmode:"transparent",enablejsapi:1,html5:1},paramPlace:8,type:"iframe",url:"https://www.youtube-nocookie.com/embed/$4",thumb:"https://img.youtube.com/vi/$4/hqdefault.jpg"},vimeo:{matcher:/^.+vimeo.com\/(.*\/)?([\d]+)(.*)?/,params:{autoplay:1,hd:1,show_title:1,show_byline:1,show_portrait:0,fullscreen:1},paramPlace:3,type:"iframe",url:"//player.vimeo.com/video/$2"},instagram:{matcher:/(instagr\.am|instagram\.com)\/p\/([a-zA-Z0-9_\-]+)\/?/i,type:"image",url:"//$1/p/$2/media/?size=l"},gmap_place:{matcher:/(maps\.)?google\.([a-z]{2,3}(\.[a-z]{2})?)\/(((maps\/(place\/(.*)\/)?\@(.*),(\d+.?\d+?)z))|(\?ll=))(.*)?/i,type:"iframe",url:function(e){return"//maps.google."+e[2]+"/?ll="+(e[9]?e[9]+"&z="+Math.floor(e[10])+(e[12]?e[12].replace(/^\//,"&"):""):e[12]+"").replace(/\?/,"&")+"&output="+(e[12]&&0<e[12].indexOf("layer=c")?"svembed":"embed")}},gmap_search:{matcher:/(maps\.)?google\.([a-z]{2,3}(\.[a-z]{2})?)\/(maps\/search\/)(.*)/i,type:"iframe",url:function(e){return"//maps.google."+e[2]+"/maps?q="+e[5].replace("query=","q=").replace("api=1","")+"&output=embed"}}};f(document).on("objectNeedsType.fb",function(e,t,i){var r,a,s,l,c,u,d=i.src||"",p=!1,n=f.extend(!0,{},o,i.opts.media);f.each(n,function(e,t){if(a=d.match(t.matcher)){if(p=t.type,u=e,c={},t.paramPlace&&a[t.paramPlace]){"?"==(l=a[t.paramPlace])[0]&&(l=l.substring(1)),l=l.split("&");for(var n=0;n<l.length;++n){var o=l[n].split("=",2);2==o.length&&(c[o[0]]=decodeURIComponent(o[1].replace(/\+/g," ")))}}return s=f.extend(!0,{},t.params,i.opts[e],c),d="function"===f.type(t.url)?t.url.call(this,a,s,i):h(t.url,a,s),r="function"===f.type(t.thumb)?t.thumb.call(this,a,s,i):h(t.thumb,a),"youtube"===e?d=d.replace(/&t=((\d+)m)?(\d+)s/,function(e,t,n,o){return"&start="+((n?60*parseInt(n,10):0)+parseInt(o,10))}):"vimeo"===e&&(d=d.replace("&%23","#")),!1}}),p?(i.opts.thumb||i.opts.$thumb&&i.opts.$thumb.length||(i.opts.thumb=r),"iframe"===p&&(i.opts=f.extend(!0,i.opts,{iframe:{preload:!1,attr:{scrolling:"no"}}})),f.extend(i,{type:p,src:d,origSrc:i.src,contentSource:u,contentType:"image"===p?"image":"gmap_place"==u||"gmap_search"==u?"map":"video"})):d&&(i.type=i.opts.defaultType)});var i={youtube:{src:"https://www.youtube.com/iframe_api",class:"YT",loading:!1,loaded:!1},vimeo:{src:"https://player.vimeo.com/api/player.js",class:"Vimeo",loading:!1,loaded:!1},load:function(e){var t,n=this;this[e].loaded?setTimeout(function(){n.done(e)}):this[e].loading||(this[e].loading=!0,(t=document.createElement("script")).type="text/javascript",t.src=this[e].src,"youtube"===e?window.onYouTubeIframeAPIReady=function(){n[e].loaded=!0,n.done(e)}:t.onload=function(){n[e].loaded=!0,n.done(e)},document.body.appendChild(t))},done:function(e){var t,n;"youtube"===e&&delete window.onYouTubeIframeAPIReady,(t=f.fancybox.getInstance())&&(n=t.current.$content.find("iframe"),"youtube"===e&&void 0!==YT&&YT?new YT.Player(n.attr("id"),{events:{onStateChange:function(e){0==e.data&&t.next()}}}):"vimeo"===e&&void 0!==Vimeo&&Vimeo&&new Vimeo.Player(n).on("ended",function(){t.next()}))}};f(document).on({"afterShow.fb":function(e,t,n){1<t.group.length&&("youtube"===n.contentSource||"vimeo"===n.contentSource)&&i.load(n.contentSource)}})}(jQuery),function(g,l,b){function u(e){var t=[];for(var n in e=(e=e.originalEvent||e||g.e).touches&&e.touches.length?e.touches:e.changedTouches&&e.changedTouches.length?e.changedTouches:[e])e[n].pageX?t.push({x:e[n].pageX,y:e[n].pageY}):e[n].clientX&&t.push({x:e[n].clientX,y:e[n].clientY});return t}function m(e,t,n){return t&&e?"x"===n?e.x-t.x:"y"===n?e.y-t.y:Math.sqrt(Math.pow(e.x-t.x,2)+Math.pow(e.y-t.y,2)):0}function c(e){if(e.is('a,area,button,[role="button"],input,label,select,summary,textarea,video,audio,iframe')||b.isFunction(e.get(0).onclick)||e.data("selectable"))return 1;for(var t=0,n=e[0].attributes,o=n.length;t<o;t++)if("data-fancybox-"===n[t].nodeName.substr(0,14))return 1}function d(e){for(var t,n,o,i,r,a=!1;(t=e.get(0),r=i=o=n=void 0,n=g.getComputedStyle(t)["overflow-y"],o=g.getComputedStyle(t)["overflow-x"],i=("scroll"===n||"auto"===n)&&t.scrollHeight>t.clientHeight,r=("scroll"===o||"auto"===o)&&t.scrollWidth>t.clientWidth,!(a=i||r))&&((e=e.parent()).length&&!e.hasClass("fancybox-stage")&&!e.is("body")););return a}function n(e){var t=this;t.instance=e,t.$bg=e.$refs.bg,t.$stage=e.$refs.stage,t.$container=e.$refs.container,t.destroy(),t.$container.on("touchstart.fb.touch mousedown.fb.touch",b.proxy(t,"ontouchstart"))}var T=g.requestAnimationFrame||g.webkitRequestAnimationFrame||g.mozRequestAnimationFrame||g.oRequestAnimationFrame||function(e){return g.setTimeout(e,1e3/60)},v=g.cancelAnimationFrame||g.webkitCancelAnimationFrame||g.mozCancelAnimationFrame||g.oCancelAnimationFrame||function(e){g.clearTimeout(e)};n.prototype.destroy=function(){var e=this;e.$container.off(".fb.touch"),b(l).off(".fb.touch"),e.requestId&&(v(e.requestId),e.requestId=null),e.tapped&&(clearTimeout(e.tapped),e.tapped=null)},n.prototype.ontouchstart=function(e){var t=this,n=b(e.target),o=t.instance,i=o.current,r=i.$slide,a=i.$content,s="touchstart"==e.type;if(s&&t.$container.off("mousedown.fb.touch"),(!e.originalEvent||2!=e.originalEvent.button)&&r.length&&n.length&&!c(n)&&!c(n.parent())&&(n.is("img")||!(e.originalEvent.clientX>n[0].clientWidth+n.offset().left))){if(!i||o.isAnimating||i.$slide.hasClass("fancybox-animated"))return e.stopPropagation(),void e.preventDefault();t.realPoints=t.startPoints=u(e),t.startPoints.length&&(i.touch&&e.stopPropagation(),t.startEvent=e,t.canTap=!0,t.$target=n,t.$content=a,t.opts=i.opts.touch,t.isPanning=!1,t.isSwiping=!1,t.isZooming=!1,t.isScrolling=!1,t.canPan=o.canPan(),t.startTime=(new Date).getTime(),t.distanceX=t.distanceY=t.distance=0,t.canvasWidth=Math.round(r[0].clientWidth),t.canvasHeight=Math.round(r[0].clientHeight),t.contentLastPos=null,t.contentStartPos=b.fancybox.getTranslate(t.$content)||{top:0,left:0},t.sliderStartPos=b.fancybox.getTranslate(r),t.stagePos=b.fancybox.getTranslate(o.$refs.stage),t.sliderStartPos.top-=t.stagePos.top,t.sliderStartPos.left-=t.stagePos.left,t.contentStartPos.top-=t.stagePos.top,t.contentStartPos.left-=t.stagePos.left,b(l).off(".fb.touch").on(s?"touchend.fb.touch touchcancel.fb.touch":"mouseup.fb.touch mouseleave.fb.touch",b.proxy(t,"ontouchend")).on(s?"touchmove.fb.touch":"mousemove.fb.touch",b.proxy(t,"ontouchmove")),b.fancybox.isMobile&&l.addEventListener("scroll",t.onscroll,!0),((t.opts||t.canPan)&&(n.is(t.$stage)||t.$stage.find(n).length)||(n.is(".fancybox-image")&&e.preventDefault(),b.fancybox.isMobile&&n.parents(".fancybox-caption").length))&&(t.isScrollable=d(n)||d(n.parent()),b.fancybox.isMobile&&t.isScrollable||e.preventDefault(),1!==t.startPoints.length&&!i.hasError||(t.canPan?(b.fancybox.stop(t.$content),t.isPanning=!0):t.isSwiping=!0,t.$container.addClass("fancybox-is-grabbing")),2===t.startPoints.length&&"image"===i.type&&(i.isLoaded||i.$ghost)&&(t.canTap=!1,t.isSwiping=!1,t.isPanning=!1,t.isZooming=!0,b.fancybox.stop(t.$content),t.centerPointStartX=.5*(t.startPoints[0].x+t.startPoints[1].x)-b(g).scrollLeft(),t.centerPointStartY=.5*(t.startPoints[0].y+t.startPoints[1].y)-b(g).scrollTop(),t.percentageOfImageAtPinchPointX=(t.centerPointStartX-t.contentStartPos.left)/t.contentStartPos.width,t.percentageOfImageAtPinchPointY=(t.centerPointStartY-t.contentStartPos.top)/t.contentStartPos.height,t.startDistanceBetweenFingers=m(t.startPoints[0],t.startPoints[1]))))}},n.prototype.onscroll=function(e){this.isScrolling=!0,l.removeEventListener("scroll",this.onscroll,!0)},n.prototype.ontouchmove=function(e){var t=this;return void 0!==e.originalEvent.buttons&&0===e.originalEvent.buttons?void t.ontouchend(e):t.isScrolling?void(t.canTap=!1):(t.newPoints=u(e),void((t.opts||t.canPan)&&t.newPoints.length&&t.newPoints.length&&(t.isSwiping&&!0===t.isSwiping||e.preventDefault(),t.distanceX=m(t.newPoints[0],t.startPoints[0],"x"),t.distanceY=m(t.newPoints[0],t.startPoints[0],"y"),t.distance=m(t.newPoints[0],t.startPoints[0]),0<t.distance&&(t.isSwiping?t.onSwipe(e):t.isPanning?t.onPan():t.isZooming&&t.onZoom()))))},n.prototype.onSwipe=function(e){var t,i=this,r=i.instance,n=i.isSwiping,o=i.sliderStartPos.left||0;if(!0!==n)"x"==n&&(0<i.distanceX&&(i.instance.group.length<2||0===i.instance.current.index&&!i.instance.current.opts.loop)?o+=Math.pow(i.distanceX,.8):i.distanceX<0&&(i.instance.group.length<2||i.instance.current.index===i.instance.group.length-1&&!i.instance.current.opts.loop)?o-=Math.pow(-i.distanceX,.8):o+=i.distanceX),i.sliderLastPos={top:"x"==n?0:i.sliderStartPos.top+i.distanceY,left:o},i.requestId&&(v(i.requestId),i.requestId=null),i.requestId=T(function(){i.sliderLastPos&&(b.each(i.instance.slides,function(e,t){var n=t.pos-i.instance.currPos;b.fancybox.setTranslate(t.$slide,{top:i.sliderLastPos.top,left:i.sliderLastPos.left+n*i.canvasWidth+n*t.opts.gutter})}),i.$container.addClass("fancybox-is-sliding"))});else if(10<Math.abs(i.distance)){if(i.canTap=!1,r.group.length<2&&i.opts.vertical?i.isSwiping="y":r.isDragging||!1===i.opts.vertical||"auto"===i.opts.vertical&&800<b(g).width()?i.isSwiping="x":(t=Math.abs(180*Math.atan2(i.distanceY,i.distanceX)/Math.PI),i.isSwiping=45<t&&t<135?"y":"x"),"y"===i.isSwiping&&b.fancybox.isMobile&&i.isScrollable)return void(i.isScrolling=!0);r.isDragging=i.isSwiping,i.startPoints=i.newPoints,b.each(r.slides,function(e,t){var n,o;b.fancybox.stop(t.$slide),n=b.fancybox.getTranslate(t.$slide),o=b.fancybox.getTranslate(r.$refs.stage),t.$slide.css({transform:"",opacity:"","transition-duration":""}).removeClass("fancybox-animated").removeClass(function(e,t){return(t.match(/(^|\s)fancybox-fx-\S+/g)||[]).join(" ")}),t.pos===r.current.pos&&(i.sliderStartPos.top=n.top-o.top,i.sliderStartPos.left=n.left-o.left),b.fancybox.setTranslate(t.$slide,{top:n.top-o.top,left:n.left-o.left})}),r.SlideShow&&r.SlideShow.isActive&&r.SlideShow.stop()}},n.prototype.onPan=function(){var e=this;m(e.newPoints[0],e.realPoints[0])<(b.fancybox.isMobile?10:5)?e.startPoints=e.newPoints:(e.canTap=!1,e.contentLastPos=e.limitMovement(),e.requestId&&v(e.requestId),e.requestId=T(function(){b.fancybox.setTranslate(e.$content,e.contentLastPos)}))},n.prototype.limitMovement=function(){var e=this,t=e.canvasWidth,n=e.canvasHeight,o=e.distanceX,i=e.distanceY,r=e.contentStartPos,a=r.left,s=r.top,l=r.width,c=r.height,u=t<l?a+o:a,d=s+i,p=Math.max(0,.5*t-.5*l),f=Math.max(0,.5*n-.5*c),h=Math.min(t-l,.5*t-.5*l),g=Math.min(n-c,.5*n-.5*c);return 0<o&&p<u&&(u=p-1+Math.pow(-p+a+o,.8)||0),o<0&&u<h&&(u=h+1-Math.pow(h-a-o,.8)||0),0<i&&f<d&&(d=f-1+Math.pow(-f+s+i,.8)||0),i<0&&d<g&&(d=g+1-Math.pow(g-s-i,.8)||0),{top:d,left:u}},n.prototype.limitPosition=function(e,t,n,o){var i=this.canvasWidth,r=this.canvasHeight;return e=i<n?(e=0<e?0:e)<i-n?i-n:e:Math.max(0,i/2-n/2),{top:t=r<o?(t=0<t?0:t)<r-o?r-o:t:Math.max(0,r/2-o/2),left:e}},n.prototype.onZoom=function(){var e=this,t=e.contentStartPos,n=t.width,o=t.height,i=t.left,r=t.top,a=m(e.newPoints[0],e.newPoints[1])/e.startDistanceBetweenFingers,s=Math.floor(n*a),l=Math.floor(o*a),c=(n-s)*e.percentageOfImageAtPinchPointX,u=(o-l)*e.percentageOfImageAtPinchPointY,d=(e.newPoints[0].x+e.newPoints[1].x)/2-b(g).scrollLeft(),p=(e.newPoints[0].y+e.newPoints[1].y)/2-b(g).scrollTop(),f=d-e.centerPointStartX,h={top:r+(u+(p-e.centerPointStartY)),left:i+(c+f),scaleX:a,scaleY:a};e.canTap=!1,e.newWidth=s,e.newHeight=l,e.contentLastPos=h,e.requestId&&v(e.requestId),e.requestId=T(function(){b.fancybox.setTranslate(e.$content,e.contentLastPos)})},n.prototype.ontouchend=function(e){var t=this,n=t.isSwiping,o=t.isPanning,i=t.isZooming,r=t.isScrolling;if(t.endPoints=u(e),t.dMs=Math.max((new Date).getTime()-t.startTime,1),t.$container.removeClass("fancybox-is-grabbing"),b(l).off(".fb.touch"),l.removeEventListener("scroll",t.onscroll,!0),t.requestId&&(v(t.requestId),t.requestId=null),t.isSwiping=!1,t.isPanning=!1,t.isZooming=!1,t.isScrolling=!1,t.instance.isDragging=!1,t.canTap)return t.onTap(e);t.speed=100,t.velocityX=t.distanceX/t.dMs*.5,t.velocityY=t.distanceY/t.dMs*.5,o?t.endPanning():i?t.endZooming():t.endSwiping(n,r)},n.prototype.endSwiping=function(e,t){var n=this,o=!1,i=n.instance.group.length,r=Math.abs(n.distanceX),a="x"==e&&1<i&&(130<n.dMs&&10<r||50<r);n.sliderLastPos=null,"y"==e&&!t&&50<Math.abs(n.distanceY)?(b.fancybox.animate(n.instance.current.$slide,{top:n.sliderStartPos.top+n.distanceY+150*n.velocityY,opacity:0},200),o=n.instance.close(!0,250)):a&&0<n.distanceX?o=n.instance.previous(300):a&&n.distanceX<0&&(o=n.instance.next(300)),!1!==o||"x"!=e&&"y"!=e||n.instance.centerSlide(200),n.$container.removeClass("fancybox-is-sliding")},n.prototype.endPanning=function(){var e,t,n,o=this;o.contentLastPos&&(t=!1===o.opts.momentum||350<o.dMs?(e=o.contentLastPos.left,o.contentLastPos.top):(e=o.contentLastPos.left+500*o.velocityX,o.contentLastPos.top+500*o.velocityY),(n=o.limitPosition(e,t,o.contentStartPos.width,o.contentStartPos.height)).width=o.contentStartPos.width,n.height=o.contentStartPos.height,b.fancybox.animate(o.$content,n,366))},n.prototype.endZooming=function(){var e,t,n,o,i=this,r=i.instance.current,a=i.newWidth,s=i.newHeight;i.contentLastPos&&(e=i.contentLastPos.left,o={top:t=i.contentLastPos.top,left:e,width:a,height:s,scaleX:1,scaleY:1},b.fancybox.setTranslate(i.$content,o),a<i.canvasWidth&&s<i.canvasHeight?i.instance.scaleToFit(150):a>r.width||s>r.height?i.instance.scaleToActual(i.centerPointStartX,i.centerPointStartY,150):(n=i.limitPosition(e,t,a,s),b.fancybox.animate(i.$content,n,150)))},n.prototype.onTap=function(n){function e(e){var t=a.opts[e];if(b.isFunction(t)&&(t=t.apply(r,[a,n])),t)switch(t){case"close":r.close(o.startEvent);break;case"toggleControls":r.toggleControls();break;case"next":r.next();break;case"nextOrClose":1<r.group.length?r.next():r.close(o.startEvent);break;case"zoom":"image"==a.type&&(a.isLoaded||a.$ghost)&&(r.canPan()?r.scaleToFit():r.isScaledDown()?r.scaleToActual(l,c):r.group.length<2&&r.close(o.startEvent))}}var t,o=this,i=b(n.target),r=o.instance,a=r.current,s=n&&u(n)||o.startPoints,l=s[0]?s[0].x-b(g).scrollLeft()-o.stagePos.left:0,c=s[0]?s[0].y-b(g).scrollTop()-o.stagePos.top:0;if((!n.originalEvent||2!=n.originalEvent.button)&&(i.is("img")||!(l>i[0].clientWidth+i.offset().left))){if(i.is(".fancybox-bg,.fancybox-inner,.fancybox-outer,.fancybox-container"))t="Outside";else if(i.is(".fancybox-slide"))t="Slide";else{if(!r.current.$content||!r.current.$content.find(i).addBack().filter(i).length)return;t="Content"}if(o.tapped){if(clearTimeout(o.tapped),o.tapped=null,50<Math.abs(l-o.tapX)||50<Math.abs(c-o.tapY))return this;e("dblclick"+t)}else o.tapX=l,o.tapY=c,a.opts["dblclick"+t]&&a.opts["dblclick"+t]!==a.opts["click"+t]?o.tapped=setTimeout(function(){o.tapped=null,r.isAnimating||e("click"+t)},500):e("click"+t);return this}},b(l).on("onActivate.fb",function(e,t){t&&!t.Guestures&&(t.Guestures=new n(t))}).on("beforeClose.fb",function(e,t){t&&t.Guestures&&t.Guestures.destroy()})}(window,document,jQuery),function(a,s){s.extend(!0,s.fancybox.defaults,{btnTpl:{slideShow:'<button data-fancybox-play class="fancybox-button fancybox-button--play" title="{{PLAY_START}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M6.5 5.4v13.2l11-6.6z"/></svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M8.33 5.75h2.2v12.5h-2.2V5.75zm5.15 0h2.2v12.5h-2.2V5.75z"/></svg></button>'},slideShow:{autoStart:!1,speed:3e3,progress:!0}});function n(e){this.instance=e,this.init()}s.extend(n.prototype,{timer:null,isActive:!1,$button:null,init:function(){var e=this,t=e.instance,n=t.group[t.currIndex].opts.slideShow;e.$button=t.$refs.toolbar.find("[data-fancybox-play]").on("click",function(){e.toggle()}),t.group.length<2||!n?e.$button.hide():n.progress&&(e.$progress=s('<div class="fancybox-progress"></div>').appendTo(t.$refs.inner))},set:function(e){var t=this,n=t.instance,o=n.current;o&&(!0===e||o.opts.loop||n.currIndex<n.group.length-1)?t.isActive&&"video"!==o.contentType&&(t.$progress&&s.fancybox.animate(t.$progress.show(),{scaleX:1},o.opts.slideShow.speed),t.timer=setTimeout(function(){n.current.opts.loop||n.current.index!=n.group.length-1?n.next():n.jumpTo(0)},o.opts.slideShow.speed)):(t.stop(),n.idleSecondsCounter=0,n.showControls())},clear:function(){clearTimeout(this.timer),this.timer=null,this.$progress&&this.$progress.removeAttr("style").hide()},start:function(){var e=this,t=e.instance.current;t&&(e.$button.attr("title",(t.opts.i18n[t.opts.lang]||t.opts.i18n.en).PLAY_STOP).removeClass("fancybox-button--play").addClass("fancybox-button--pause"),e.isActive=!0,t.isComplete&&e.set(!0),e.instance.trigger("onSlideShowChange",!0))},stop:function(){var e=this,t=e.instance.current;e.clear(),e.$button.attr("title",(t.opts.i18n[t.opts.lang]||t.opts.i18n.en).PLAY_START).removeClass("fancybox-button--pause").addClass("fancybox-button--play"),e.isActive=!1,e.instance.trigger("onSlideShowChange",!1),e.$progress&&e.$progress.removeAttr("style").hide()},toggle:function(){this.isActive?this.stop():this.start()}}),s(a).on({"onInit.fb":function(e,t){t&&!t.SlideShow&&(t.SlideShow=new n(t))},"beforeShow.fb":function(e,t,n,o){var i=t&&t.SlideShow;o?i&&n.opts.slideShow.autoStart&&i.start():i&&i.isActive&&i.clear()},"afterShow.fb":function(e,t){var n=t&&t.SlideShow;n&&n.isActive&&n.set()},"afterKeydown.fb":function(e,t,n,o,i){var r=t&&t.SlideShow;!r||!n.opts.slideShow||80!==i&&32!==i||s(a.activeElement).is("button,a,input")||(o.preventDefault(),r.toggle())},"beforeClose.fb onDeactivate.fb":function(e,t){var n=t&&t.SlideShow;n&&n.stop()}}),s(a).on("visibilitychange",function(){var e=s.fancybox.getInstance(),t=e&&e.SlideShow;t&&t.isActive&&(a.hidden?t.clear():t.set())})}(document,jQuery),function(r,n){var o,i=function(){for(var e=[["requestFullscreen","exitFullscreen","fullscreenElement","fullscreenEnabled","fullscreenchange","fullscreenerror"],["webkitRequestFullscreen","webkitExitFullscreen","webkitFullscreenElement","webkitFullscreenEnabled","webkitfullscreenchange","webkitfullscreenerror"],["webkitRequestFullScreen","webkitCancelFullScreen","webkitCurrentFullScreenElement","webkitCancelFullScreen","webkitfullscreenchange","webkitfullscreenerror"],["mozRequestFullScreen","mozCancelFullScreen","mozFullScreenElement","mozFullScreenEnabled","mozfullscreenchange","mozfullscreenerror"],["msRequestFullscreen","msExitFullscreen","msFullscreenElement","msFullscreenEnabled","MSFullscreenChange","MSFullscreenError"]],t={},n=0;n<e.length;n++){var o=e[n];if(o&&o[1]in r){for(var i=0;i<o.length;i++)t[e[0][i]]=o[i];return t}}return!1}();i&&(o={request:function(e){(e=e||r.documentElement)[i.requestFullscreen](e.ALLOW_KEYBOARD_INPUT)},exit:function(){r[i.exitFullscreen]()},toggle:function(e){e=e||r.documentElement,this.isFullscreen()?this.exit():this.request(e)},isFullscreen:function(){return Boolean(r[i.fullscreenElement])},enabled:function(){return Boolean(r[i.fullscreenEnabled])}},n.extend(!0,n.fancybox.defaults,{btnTpl:{fullScreen:'<button data-fancybox-fullscreen class="fancybox-button fancybox-button--fsenter" title="{{FULL_SCREEN}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z"/></svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M5 16h3v3h2v-5H5zm3-8H5v2h5V5H8zm6 11h2v-3h3v-2h-5zm2-11V5h-2v5h5V8z"/></svg></button>'},fullScreen:{autoStart:!1}}),n(r).on(i.fullscreenchange,function(){var e=o.isFullscreen(),t=n.fancybox.getInstance();t&&(t.current&&"image"===t.current.type&&t.isAnimating&&(t.isAnimating=!1,t.update(!0,!0,0),t.isComplete||t.complete()),t.trigger("onFullscreenChange",e),t.$refs.container.toggleClass("fancybox-is-fullscreen",e),t.$refs.toolbar.find("[data-fancybox-fullscreen]").toggleClass("fancybox-button--fsenter",!e).toggleClass("fancybox-button--fsexit",e))})),n(r).on({"onInit.fb":function(e,t){i?t&&t.group[t.currIndex].opts.fullScreen?(t.$refs.container.on("click.fb-fullscreen","[data-fancybox-fullscreen]",function(e){e.stopPropagation(),e.preventDefault(),o.toggle()}),t.opts.fullScreen&&!0===t.opts.fullScreen.autoStart&&o.request(),t.FullScreen=o):t&&t.$refs.toolbar.find("[data-fancybox-fullscreen]").hide():t.$refs.toolbar.find("[data-fancybox-fullscreen]").remove()},"afterKeydown.fb":function(e,t,n,o,i){t&&t.FullScreen&&70===i&&(o.preventDefault(),t.FullScreen.toggle())},"beforeClose.fb":function(e,t){t&&t.FullScreen&&t.$refs.container.hasClass("fancybox-is-fullscreen")&&o.exit()}})}(document,jQuery),function(e,r){var a="fancybox-thumbs";r.fancybox.defaults=r.extend(!0,{btnTpl:{thumbs:'<button data-fancybox-thumbs class="fancybox-button fancybox-button--thumbs" title="{{THUMBS}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M14.59 14.59h3.76v3.76h-3.76v-3.76zm-4.47 0h3.76v3.76h-3.76v-3.76zm-4.47 0h3.76v3.76H5.65v-3.76zm8.94-4.47h3.76v3.76h-3.76v-3.76zm-4.47 0h3.76v3.76h-3.76v-3.76zm-4.47 0h3.76v3.76H5.65v-3.76zm8.94-4.47h3.76v3.76h-3.76V5.65zm-4.47 0h3.76v3.76h-3.76V5.65zm-4.47 0h3.76v3.76H5.65V5.65z"/></svg></button>'},thumbs:{autoStart:!1,hideOnClose:!0,parentEl:".fancybox-container",axis:"y"}},r.fancybox.defaults);function o(e){this.init(e)}r.extend(o.prototype,{$button:null,$grid:null,$list:null,isVisible:!1,isActive:!1,init:function(e){var t=this,n=e.group,o=0;t.instance=e,t.opts=n[e.currIndex].opts.thumbs,(e.Thumbs=t).$button=e.$refs.toolbar.find("[data-fancybox-thumbs]");for(var i=0,r=n.length;i<r&&(n[i].thumb&&o++,!(1<o));i++);1<o&&t.opts?(t.$button.removeAttr("style").on("click",function(){t.toggle()}),t.isActive=!0):t.$button.hide()},create:function(){var n,e=this,t=e.instance,o=e.opts.parentEl,i=[];e.$grid||(e.$grid=r('<div class="'+a+" "+a+"-"+e.opts.axis+'"></div>').appendTo(t.$refs.container.find(o).addBack().filter(o)),e.$grid.on("click","a",function(){t.jumpTo(r(this).attr("data-index"))})),e.$list||(e.$list=r('<div class="'+a+'__list">').appendTo(e.$grid)),r.each(t.group,function(e,t){(n=t.thumb)||"image"!==t.type||(n=t.src),i.push('<a href="javascript:;" tabindex="0" data-index="'+e+'"'+(n&&n.length?' style="background-image:url('+n+')"':'class="fancybox-thumbs-missing"')+"></a>")}),e.$list[0].innerHTML=i.join(""),"x"===e.opts.axis&&e.$list.width(parseInt(e.$grid.css("padding-right"),10)+t.group.length*e.$list.children().eq(0).outerWidth(!0))},focus:function(e){var t,n,o=this,i=o.$list,r=o.$grid;o.instance.current&&(n=(t=i.children().removeClass("fancybox-thumbs-active").filter('[data-index="'+o.instance.current.index+'"]').addClass("fancybox-thumbs-active")).position(),"y"===o.opts.axis&&(n.top<0||n.top>i.height()-t.outerHeight())?i.stop().animate({scrollTop:i.scrollTop()+n.top},e):"x"===o.opts.axis&&(n.left<r.scrollLeft()||n.left>r.scrollLeft()+(r.width()-t.outerWidth()))&&i.parent().stop().animate({scrollLeft:n.left},e))},update:function(){var e=this;e.instance.$refs.container.toggleClass("fancybox-show-thumbs",this.isVisible),e.isVisible?(e.$grid||e.create(),e.instance.trigger("onThumbsShow"),e.focus(0)):e.$grid&&e.instance.trigger("onThumbsHide"),e.instance.update()},hide:function(){this.isVisible=!1,this.update()},show:function(){this.isVisible=!0,this.update()},toggle:function(){this.isVisible=!this.isVisible,this.update()}}),r(e).on({"onInit.fb":function(e,t){var n;!t||t.Thumbs||(n=new o(t)).isActive&&!0===n.opts.autoStart&&n.show()},"beforeShow.fb":function(e,t,n,o){var i=t&&t.Thumbs;i&&i.isVisible&&i.focus(o?0:250)},"afterKeydown.fb":function(e,t,n,o,i){var r=t&&t.Thumbs;r&&r.isActive&&71===i&&(o.preventDefault(),r.toggle())},"beforeClose.fb":function(e,t){var n=t&&t.Thumbs;n&&n.isVisible&&!1!==n.opts.hideOnClose&&n.$grid.hide()}})}(document,jQuery),function(e,r){r.extend(!0,r.fancybox.defaults,{btnTpl:{share:'<button data-fancybox-share class="fancybox-button fancybox-button--share" title="{{SHARE}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M2.55 19c1.4-8.4 9.1-9.8 11.9-9.8V5l7 7-7 6.3v-3.5c-2.8 0-10.5 2.1-11.9 4.2z"/></svg></button>'},share:{url:function(e,t){return!e.currentHash&&"inline"!==t.type&&"html"!==t.type&&(t.origSrc||t.src)||window.location},tpl:'<div class="fancybox-share"><h1>{{SHARE}}</h1><p><a class="fancybox-share__button fancybox-share__button--fb" href="https://www.facebook.com/sharer/sharer.php?u={{url}}"><svg viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg"><path d="m287 456v-299c0-21 6-35 35-35h38v-63c-7-1-29-3-55-3-54 0-91 33-91 94v306m143-254h-205v72h196" /></svg><span>Facebook</span></a><a class="fancybox-share__button fancybox-share__button--tw" href="https://twitter.com/intent/tweet?url={{url}}&text={{descr}}"><svg viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg"><path d="m456 133c-14 7-31 11-47 13 17-10 30-27 37-46-15 10-34 16-52 20-61-62-157-7-141 75-68-3-129-35-169-85-22 37-11 86 26 109-13 0-26-4-37-9 0 39 28 72 65 80-12 3-25 4-37 2 10 33 41 57 77 57-42 30-77 38-122 34 170 111 378-32 359-208 16-11 30-25 41-42z" /></svg><span>Twitter</span></a><a class="fancybox-share__button fancybox-share__button--pt" href="https://www.pinterest.com/pin/create/button/?url={{url}}&description={{descr}}&media={{media}}"><svg viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg"><path d="m265 56c-109 0-164 78-164 144 0 39 15 74 47 87 5 2 10 0 12-5l4-19c2-6 1-8-3-13-9-11-15-25-15-45 0-58 43-110 113-110 62 0 96 38 96 88 0 67-30 122-73 122-24 0-42-19-36-44 6-29 20-60 20-81 0-19-10-35-31-35-25 0-44 26-44 60 0 21 7 36 7 36l-30 125c-8 37-1 83 0 87 0 3 4 4 5 2 2-3 32-39 42-75l16-64c8 16 31 29 56 29 74 0 124-67 124-157 0-69-58-132-146-132z" fill="#fff"/></svg><span>Pinterest</span></a></p><p><input class="fancybox-share__input" type="text" value="{{url_raw}}" onclick="select()" /></p></div>'}}),r(e).on("click","[data-fancybox-share]",function(){var e,t,n,o=r.fancybox.getInstance(),i=o.current||null;i&&("function"===r.type(i.opts.share.url)&&(e=i.opts.share.url.apply(i,[o,i])),t=i.opts.share.tpl.replace(/\{\{media\}\}/g,"image"===i.type?encodeURIComponent(i.src):"").replace(/\{\{url\}\}/g,encodeURIComponent(e)).replace(/\{\{url_raw\}\}/g,(n={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#x2F;","`":"&#x60;","=":"&#x3D;"},String(e).replace(/[&<>"'`=\/]/g,function(e){return n[e]}))).replace(/\{\{descr\}\}/g,o.$caption?encodeURIComponent(o.$caption.text()):""),r.fancybox.open({src:o.translate(o,t),type:"html",opts:{touch:!1,animationEffect:!1,afterLoad:function(e,t){o.$refs.container.one("beforeClose.fb",function(){e.close(null,0)}),t.$content.find(".fancybox-share__button").click(function(){return window.open(this.href,"Share","width=550, height=450"),!1})},mobile:{autoFocus:!1}}}))})}(document,jQuery),function(r,a,i){function s(){var e=r.location.hash.substr(1),t=e.split("-"),n=1<t.length&&/^\+?\d+$/.test(t[t.length-1])&&parseInt(t.pop(-1),10)||1;return{hash:e,index:n<1?1:n,gallery:t.join("-")}}function t(e){""!==e.gallery&&i("[data-fancybox='"+i.escapeSelector(e.gallery)+"']").eq(e.index-1).focus().trigger("click.fb-start")}function l(e){var t,n;return!!e&&(""!==(n=(t=e.current?e.current.opts:e.opts).hash||(t.$orig?t.$orig.data("fancybox")||t.$orig.data("fancybox-trigger"):""))&&n)}i.escapeSelector||(i.escapeSelector=function(e){return(e+"").replace(/([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g,function(e,t){return t?"\0"===e?"ï¿½":e.slice(0,-1)+"\\"+e.charCodeAt(e.length-1).toString(16)+" ":"\\"+e})}),i(function(){!1!==i.fancybox.defaults.hash&&(i(a).on({"onInit.fb":function(e,t){var n,o;!1!==t.group[t.currIndex].opts.hash&&(n=s(),(o=l(t))&&n.gallery&&o==n.gallery&&(t.currIndex=n.index-1))},"beforeShow.fb":function(e,t,n,o){var i;n&&!1!==n.opts.hash&&(i=l(t))&&(t.currentHash=i+(1<t.group.length?"-"+(n.index+1):""),r.location.hash!=="#"+t.currentHash&&(o&&!t.origHash&&(t.origHash=r.location.hash),t.hashTimer&&clearTimeout(t.hashTimer),t.hashTimer=setTimeout(function(){"replaceState"in r.history?(r.history[o?"pushState":"replaceState"]({},a.title,r.location.pathname+r.location.search+"#"+t.currentHash),o&&(t.hasCreatedHistory=!0)):r.location.hash=t.currentHash,t.hashTimer=null},300)))},"beforeClose.fb":function(e,t,n){n&&!1!==n.opts.hash&&(clearTimeout(t.hashTimer),t.currentHash&&t.hasCreatedHistory?r.history.back():t.currentHash&&("replaceState"in r.history?r.history.replaceState({},a.title,r.location.pathname+r.location.search+(t.origHash||"")):r.location.hash=t.origHash),t.currentHash=null)}}),i(r).on("hashchange.fb",function(){var e=s(),o=null;i.each(i(".fancybox-container").get().reverse(),function(e,t){var n=i(t).data("FancyBox");if(n&&n.currentHash)return o=n,!1}),o?o.currentHash===e.gallery+"-"+e.index||1===e.index&&o.currentHash==e.gallery||(o.currentHash=null,o.close()):""!==e.gallery&&t(e)}),setTimeout(function(){i.fancybox.getInstance()||t(s())},50))})}(window,document,jQuery),function(e,t){var i=(new Date).getTime();t(e).on({"onInit.fb":function(e,o){o.$refs.stage.on("mousewheel DOMMouseScroll wheel MozMousePixelScroll",function(e){var t=o.current,n=(new Date).getTime();o.group.length<2||!1===t.opts.wheel||"auto"===t.opts.wheel&&"image"!==t.type||(e.preventDefault(),e.stopPropagation(),t.$slide.hasClass("fancybox-animated")||(e=e.originalEvent||e,n-i<250||(i=n,o[(-e.deltaY||-e.deltaX||e.wheelDelta||-e.detail)<0?"next":"previous"]())))})}})}(document,jQuery),function(e){"function"==typeof define&&define.amd&&define.amd.jQuery?define(["jquery"],e):e("undefined"!=typeof module&&module.exports?require("jquery"):jQuery)}(function(se){function o(e,g){function t(e){if(!(!0===Y.data(De+"_intouch")||0<se(e.target).closest(g.excludedElements,Y).length)){var t=e.originalEvent?e.originalEvent:e;if(!t.pointerType||"mouse"!=t.pointerType||0!=g.fallbackToMouseEvents){var n,o=t.touches,i=o?o[0]:t;return Q=Ae,o?Z=o.length:!1!==g.preventDefaultEvents&&e.preventDefault(),U=X=V=null,q=1,z=j=_=W=F=0,(r={})[le]=G(le),r[ce]=G(ce),r[ue]=G(ue),r[de]=G(de),K=r,P(),M(0,i),!o||Z===g.fingers||g.fingers===Pe||T()?(ee=I(),2==Z&&(M(1,o[1]),_=j=B(J[0].start,J[1].start)),(g.swipeStatus||g.pinchStatus)&&(n=m(t,Q))):n=!1,!1===n?(m(t,Q=Ee),n):(g.hold&&(ae=setTimeout(se.proxy(function(){Y.trigger("hold",[t.target]),g.hold&&(n=g.hold.call(Y,t,t.target))},this),g.longTapThreshold)),A(!0),null)}}var r}function n(e){var t,n,o,i,r,a,s,l,c,u,d,p,f,h=e.originalEvent?e.originalEvent:e;Q===Ce||Q===Ee||w()||(o=C((n=h.touches)?n[0]:h),te=I(),n&&(Z=n.length),g.hold&&clearTimeout(ae),Q=Me,2==Z&&(0==_?(M(1,n[1]),_=j=B(J[0].start,J[1].start)):(C(n[1]),j=B(J[0].end,J[1].end),J[0].end,J[1].end,U=q<1?fe:pe),q=(j/_*1).toFixed(2),z=Math.abs(_-j)),Z===g.fingers||g.fingers===Pe||!n||T()?(V=D(o.start,o.end),function(e,t){if(!1!==g.preventDefaultEvents)if(g.allowPageScroll===he)e.preventDefault();else{var n=g.allowPageScroll===ge;switch(t){case le:(g.swipeLeft&&n||!n&&g.allowPageScroll!=ye)&&e.preventDefault();break;case ce:(g.swipeRight&&n||!n&&g.allowPageScroll!=ye)&&e.preventDefault();break;case ue:(g.swipeUp&&n||!n&&g.allowPageScroll!=xe)&&e.preventDefault();break;case de:(g.swipeDown&&n||!n&&g.allowPageScroll!=xe)&&e.preventDefault()}}}(e,X=D(o.last,o.end)),p=o.start,f=o.end,F=Math.round(Math.sqrt(Math.pow(f.x-p.x,2)+Math.pow(f.y-p.y,2))),W=H(),d=F,(u=V)!=he&&(d=Math.max(d,E(u)),K[u].distance=d),t=m(h,Q),g.triggerOnTouchEnd&&!g.triggerOnTouchLeave||(i=!0,g.triggerOnTouchLeave&&(r={left:(c=(l=se(l=this)).offset()).left,right:c.left+l.outerWidth(),top:c.top,bottom:c.top+l.outerHeight()},a=o.end,s=r,i=a.x>s.left&&a.x<s.right&&a.y>s.top&&a.y<s.bottom),!g.triggerOnTouchEnd&&i?Q=b(Me):g.triggerOnTouchLeave&&!i&&(Q=b(Ce)),Q!=Ee&&Q!=Ce||m(h,Q))):m(h,Q=Ee),!1===t&&m(h,Q=Ee))}function o(e){var t,n=e.originalEvent?e.originalEvent:e,o=n.touches;if(o){if(o.length&&!w())return t=n,ne=I(),oe=t.touches.length+1,!0;if(o.length&&w())return!0}return w()&&(Z=oe),te=I(),W=H(),c()||!l()?m(n,Q=Ee):g.triggerOnTouchEnd||!1===g.triggerOnTouchEnd&&Q===Me?(!1!==g.preventDefaultEvents&&!1!==e.cancelable&&e.preventDefault(),m(n,Q=Ce)):!g.triggerOnTouchEnd&&S()?s(n,Q=Ce,Te):Q===Me&&m(n,Q=Ee),A(!1),null}function i(){j=_=ee=te=Z=0,P(),A(!(q=1))}function r(e){var t=e.originalEvent?e.originalEvent:e;g.triggerOnTouchLeave&&m(t,Q=b(Ce))}function a(){Y.off(k,t),Y.off(R,i),Y.off(N,n),Y.off(O,o),$&&Y.off($,r),A(!1)}function b(e){var t=e,n=u(),o=l(),i=c();return!n||i?t=Ee:!o||e!=Me||g.triggerOnTouchEnd&&!g.triggerOnTouchLeave?!o&&e==Ce&&g.triggerOnTouchLeave&&(t=Ee):t=Ce,t}function m(e,t){var n,o=e.touches;return(p()&&f()||f())&&(n=s(e,t,be)),(d()&&T()||T())&&!1!==n&&(n=s(e,t,me)),x()&&y()&&!1!==n?n=s(e,t,ve):W>g.longTapThreshold&&F<we&&g.longTap&&!1!==n?n=s(e,t,Se):1!==Z&&Ge||!(isNaN(F)||F<g.threshold)||!S()||!1===n||(n=s(e,t,Te)),t===Ee&&i(),t===Ce&&(o&&o.length||i()),n}function s(e,t,n){var o;if(n==be){if(Y.trigger("swipeStatus",[t,V||null,F||0,W||0,Z,J,X]),g.swipeStatus&&!1===(o=g.swipeStatus.call(Y,e,t,V||null,F||0,W||0,Z,J,X)))return!1;if(t==Ce&&p()){if(clearTimeout(re),clearTimeout(ae),Y.trigger("swipe",[V,F,W,Z,J,X]),g.swipe&&!1===(o=g.swipe.call(Y,e,V,F,W,Z,J,X)))return!1;switch(V){case le:Y.trigger("swipeLeft",[V,F,W,Z,J,X]),g.swipeLeft&&(o=g.swipeLeft.call(Y,e,V,F,W,Z,J,X));break;case ce:Y.trigger("swipeRight",[V,F,W,Z,J,X]),g.swipeRight&&(o=g.swipeRight.call(Y,e,V,F,W,Z,J,X));break;case ue:Y.trigger("swipeUp",[V,F,W,Z,J,X]),g.swipeUp&&(o=g.swipeUp.call(Y,e,V,F,W,Z,J,X));break;case de:Y.trigger("swipeDown",[V,F,W,Z,J,X]),g.swipeDown&&(o=g.swipeDown.call(Y,e,V,F,W,Z,J,X))}}}if(n==me){if(Y.trigger("pinchStatus",[t,U||null,z||0,W||0,Z,q,J]),g.pinchStatus&&!1===(o=g.pinchStatus.call(Y,e,t,U||null,z||0,W||0,Z,q,J)))return!1;if(t==Ce&&d())switch(U){case pe:Y.trigger("pinchIn",[U||null,z||0,W||0,Z,q,J]),g.pinchIn&&(o=g.pinchIn.call(Y,e,U||null,z||0,W||0,Z,q,J));break;case fe:Y.trigger("pinchOut",[U||null,z||0,W||0,Z,q,J]),g.pinchOut&&(o=g.pinchOut.call(Y,e,U||null,z||0,W||0,Z,q,J))}}return n==Te?t!==Ee&&t!==Ce||(clearTimeout(re),clearTimeout(ae),y()&&!x()?(ie=I(),re=setTimeout(se.proxy(function(){ie=null,Y.trigger("tap",[e.target]),g.tap&&(o=g.tap.call(Y,e,e.target))},this),g.doubleTapThreshold)):(ie=null,Y.trigger("tap",[e.target]),g.tap&&(o=g.tap.call(Y,e,e.target)))):n==ve?t!==Ee&&t!==Ce||(clearTimeout(re),clearTimeout(ae),ie=null,Y.trigger("doubletap",[e.target]),g.doubleTap&&(o=g.doubleTap.call(Y,e,e.target))):n==Se&&(t!==Ee&&t!==Ce||(clearTimeout(re),ie=null,Y.trigger("longtap",[e.target]),g.longTap&&(o=g.longTap.call(Y,e,e.target)))),o}function l(){var e=!0;return null!==g.threshold&&(e=F>=g.threshold),e}function c(){var e=!1;return null!==g.cancelThreshold&&null!==V&&(e=E(V)-F>=g.cancelThreshold),e}function u(){return!g.maxTimeThreshold||!(W>=g.maxTimeThreshold)}function d(){var e=h(),t=v(),n=null===g.pinchThreshold||z>=g.pinchThreshold;return e&&t&&n}function T(){return g.pinchStatus||g.pinchIn||g.pinchOut}function p(){var e=u(),t=l(),n=h(),o=v();return!c()&&o&&n&&t&&e}function f(){return g.swipe||g.swipeStatus||g.swipeLeft||g.swipeRight||g.swipeUp||g.swipeDown}function h(){return Z===g.fingers||g.fingers===Pe||!Ge}function v(){return 0!==J[0].end.x}function S(){return g.tap}function y(){return!!g.doubleTap}function x(){if(null==ie)return!1;var e=I();return y()&&e-ie<=g.doubleTapThreshold}function P(){oe=ne=0}function w(){var e=!1;return ne&&I()-ne<=g.fingerReleaseThreshold&&(e=!0),e}function A(e){Y&&(!0===e?(Y.on(N,n),Y.on(O,o),$&&Y.on($,r)):(Y.off(N,n,!1),Y.off(O,o,!1),$&&Y.off($,r,!1)),Y.data(De+"_intouch",!0===e))}function M(e,t){var n={start:{x:0,y:0},last:{x:0,y:0},end:{x:0,y:0}};return n.start.x=n.last.x=n.end.x=t.pageX||t.clientX,n.start.y=n.last.y=n.end.y=t.pageY||t.clientY,J[e]=n}function C(e){var t=void 0!==e.identifier?e.identifier:0,n=J[t]||null;return null===n&&(n=M(t,e)),n.last.x=n.end.x,n.last.y=n.end.y,n.end.x=e.pageX||e.clientX,n.end.y=e.pageY||e.clientY,n}function E(e){return K[e]?K[e].distance:void 0}function G(e){return{direction:e,distance:0}}function H(){return te-ee}function B(e,t){var n=Math.abs(e.x-t.x),o=Math.abs(e.y-t.y);return Math.round(Math.sqrt(n*n+o*o))}function D(e,t){if(o=t,(n=e).x==o.x&&n.y==o.y)return he;var n,o,i,r,a,s,l,c,u=(r=t,a=(i=e).x-r.x,s=r.y-i.y,l=Math.atan2(s,a),(c=Math.round(180*l/Math.PI))<0&&(c=360-Math.abs(c)),c);return u<=45&&0<=u||u<=360&&315<=u?le:135<=u&&u<=225?ce:45<u&&u<135?de:ue}function I(){return(new Date).getTime()}var g=se.extend({},g),L=Ge||Be||!g.fallbackToMouseEvents,k=L?Be?He?"MSPointerDown":"pointerdown":"touchstart":"mousedown",N=L?Be?He?"MSPointerMove":"pointermove":"touchmove":"mousemove",O=L?Be?He?"MSPointerUp":"pointerup":"touchend":"mouseup",$=!L||Be?"mouseleave":null,R=Be?He?"MSPointerCancel":"pointercancel":"touchcancel",F=0,V=null,X=null,W=0,_=0,j=0,q=1,z=0,U=0,K=null,Y=se(e),Q="start",Z=0,J={},ee=0,te=0,ne=0,oe=0,ie=0,re=null,ae=null;try{Y.on(k,t),Y.on(R,i)}catch(e){se.error("events not supported "+k+","+R+" on jQuery.swipe")}this.enable=function(){return this.disable(),Y.on(k,t),Y.on(R,i),Y},this.disable=function(){return a(),Y},this.destroy=function(){a(),Y.data(De,null),Y=null},this.option=function(e,t){if("object"==_typeof(e))g=se.extend(g,e);else if(void 0!==g[e]){if(void 0===t)return g[e];g[e]=t}else{if(!e)return g;se.error("Option "+e+" does not exist on jQuery.swipe.options")}return null}}var le="left",ce="right",ue="up",de="down",pe="in",fe="out",he="none",ge="auto",be="swipe",me="pinch",Te="tap",ve="doubletap",Se="longtap",ye="horizontal",xe="vertical",Pe="all",we=10,Ae="start",Me="move",Ce="end",Ee="cancel",Ge="ontouchstart"in window,He=window.navigator.msPointerEnabled&&!window.PointerEvent&&!Ge,Be=(window.PointerEvent||window.navigator.msPointerEnabled)&&!Ge,De="TouchSwipe";se.fn.swipe=function(e){var t=se(this),n=t.data(De);if(n&&"string"==typeof e){if(n[e])return n[e].apply(n,Array.prototype.slice.call(arguments,1));se.error("Method "+e+" does not exist on jQuery.swipe")}else if(n&&"object"==_typeof(e))n.option.apply(n,arguments);else if(!(n||"object"!=_typeof(e)&&e))return function(n){return!n||void 0!==n.allowPageScroll||void 0===n.swipe&&void 0===n.swipeStatus||(n.allowPageScroll=he),void 0!==n.click&&void 0===n.tap&&(n.tap=n.click),n=n||{},n=se.extend({},se.fn.swipe.defaults,n),this.each(function(){var e=se(this),t=e.data(De);t||(t=new o(this,n),e.data(De,t))})}.apply(this,arguments);return t},se.fn.swipe.version="1.6.18",se.fn.swipe.defaults={fingers:1,threshold:75,cancelThreshold:null,pinchThreshold:20,maxTimeThreshold:null,fingerReleaseThreshold:250,longTapThreshold:500,doubleTapThreshold:200,swipe:null,swipeLeft:null,swipeRight:null,swipeUp:null,swipeDown:null,swipeStatus:null,pinchIn:null,pinchOut:null,pinchStatus:null,click:null,tap:null,doubleTap:null,longTap:null,hold:null,triggerOnTouchEnd:!0,triggerOnTouchLeave:!1,allowPageScroll:"auto",fallbackToMouseEvents:!0,excludedElements:".noSwipe",preventDefaultEvents:!0},se.fn.swipe.phases={PHASE_START:Ae,PHASE_MOVE:Me,PHASE_END:Ce,PHASE_CANCEL:Ee},se.fn.swipe.directions={LEFT:le,RIGHT:ce,UP:ue,DOWN:de,IN:pe,OUT:fe},se.fn.swipe.pageScroll={NONE:he,HORIZONTAL:ye,VERTICAL:xe,AUTO:ge},se.fn.swipe.fingers={ONE:1,TWO:2,THREE:3,FOUR:4,FIVE:5,ALL:Pe}}),function(d){(function(){if("undefined"!=typeof module&&module.exports)return function(e){module.exports=e()};if("function"==typeof define&&define.amd)return define;if("undefined"!=typeof window)return function(e){window.MobileDetect=e()};throw new Error("unknown environment")})()(function(){function t(e,t){return null!=e&&null!=t&&e.toLowerCase()===t.toLowerCase()}function n(e,t){var n,o,i=e.length;if(!i||!t)return!1;for(n=t.toLowerCase(),o=0;o<i;++o)if(n===e[o].toLowerCase())return!0;return!1}function s(e){for(var t in e)u.call(e,t)&&(e[t]=new RegExp(e[t],"i"))}function a(e,t){this.ua=(e||"").substr(0,500),this._cache={},this.maxPhoneWidth=t||600}var l,c={mobileDetectRules:{phones:{iPhone:"\\biPhone\\b|\\biPod\\b",BlackBerry:"BlackBerry|\\bBB10\\b|rim[0-9]+|\\b(BBA100|BBB100|BBD100|BBE100|BBF100|STH100)\\b-[0-9]+",HTC:"HTC|HTC.*(Sensation|Evo|Vision|Explorer|6800|8100|8900|A7272|S510e|C110e|Legend|Desire|T8282)|APX515CKT|Qtek9090|APA9292KT|HD_mini|Sensation.*Z710e|PG86100|Z715e|Desire.*(A8181|HD)|ADR6200|ADR6400L|ADR6425|001HT|Inspire 4G|Android.*\\bEVO\\b|T-Mobile G1|Z520m|Android [0-9.]+; Pixel",Nexus:"Nexus One|Nexus S|Galaxy.*Nexus|Android.*Nexus.*Mobile|Nexus 4|Nexus 5|Nexus 6",Dell:"Dell[;]? (Streak|Aero|Venue|Venue Pro|Flash|Smoke|Mini 3iX)|XCD28|XCD35|\\b001DL\\b|\\b101DL\\b|\\bGS01\\b",Motorola:"Motorola|DROIDX|DROID BIONIC|\\bDroid\\b.*Build|Android.*Xoom|HRI39|MOT-|A1260|A1680|A555|A853|A855|A953|A955|A956|Motorola.*ELECTRIFY|Motorola.*i1|i867|i940|MB200|MB300|MB501|MB502|MB508|MB511|MB520|MB525|MB526|MB611|MB612|MB632|MB810|MB855|MB860|MB861|MB865|MB870|ME501|ME502|ME511|ME525|ME600|ME632|ME722|ME811|ME860|ME863|ME865|MT620|MT710|MT716|MT720|MT810|MT870|MT917|Motorola.*TITANIUM|WX435|WX445|XT300|XT301|XT311|XT316|XT317|XT319|XT320|XT390|XT502|XT530|XT531|XT532|XT535|XT603|XT610|XT611|XT615|XT681|XT701|XT702|XT711|XT720|XT800|XT806|XT860|XT862|XT875|XT882|XT883|XT894|XT901|XT907|XT909|XT910|XT912|XT928|XT926|XT915|XT919|XT925|XT1021|\\bMoto E\\b|XT1068|XT1092|XT1052",Samsung:"\\bSamsung\\b|SM-G950F|SM-G955F|SM-G9250|GT-19300|SGH-I337|BGT-S5230|GT-B2100|GT-B2700|GT-B2710|GT-B3210|GT-B3310|GT-B3410|GT-B3730|GT-B3740|GT-B5510|GT-B5512|GT-B5722|GT-B6520|GT-B7300|GT-B7320|GT-B7330|GT-B7350|GT-B7510|GT-B7722|GT-B7800|GT-C3010|GT-C3011|GT-C3060|GT-C3200|GT-C3212|GT-C3212I|GT-C3262|GT-C3222|GT-C3300|GT-C3300K|GT-C3303|GT-C3303K|GT-C3310|GT-C3322|GT-C3330|GT-C3350|GT-C3500|GT-C3510|GT-C3530|GT-C3630|GT-C3780|GT-C5010|GT-C5212|GT-C6620|GT-C6625|GT-C6712|GT-E1050|GT-E1070|GT-E1075|GT-E1080|GT-E1081|GT-E1085|GT-E1087|GT-E1100|GT-E1107|GT-E1110|GT-E1120|GT-E1125|GT-E1130|GT-E1160|GT-E1170|GT-E1175|GT-E1180|GT-E1182|GT-E1200|GT-E1210|GT-E1225|GT-E1230|GT-E1390|GT-E2100|GT-E2120|GT-E2121|GT-E2152|GT-E2220|GT-E2222|GT-E2230|GT-E2232|GT-E2250|GT-E2370|GT-E2550|GT-E2652|GT-E3210|GT-E3213|GT-I5500|GT-I5503|GT-I5700|GT-I5800|GT-I5801|GT-I6410|GT-I6420|GT-I7110|GT-I7410|GT-I7500|GT-I8000|GT-I8150|GT-I8160|GT-I8190|GT-I8320|GT-I8330|GT-I8350|GT-I8530|GT-I8700|GT-I8703|GT-I8910|GT-I9000|GT-I9001|GT-I9003|GT-I9010|GT-I9020|GT-I9023|GT-I9070|GT-I9082|GT-I9100|GT-I9103|GT-I9220|GT-I9250|GT-I9300|GT-I9305|GT-I9500|GT-I9505|GT-M3510|GT-M5650|GT-M7500|GT-M7600|GT-M7603|GT-M8800|GT-M8910|GT-N7000|GT-S3110|GT-S3310|GT-S3350|GT-S3353|GT-S3370|GT-S3650|GT-S3653|GT-S3770|GT-S3850|GT-S5210|GT-S5220|GT-S5229|GT-S5230|GT-S5233|GT-S5250|GT-S5253|GT-S5260|GT-S5263|GT-S5270|GT-S5300|GT-S5330|GT-S5350|GT-S5360|GT-S5363|GT-S5369|GT-S5380|GT-S5380D|GT-S5560|GT-S5570|GT-S5600|GT-S5603|GT-S5610|GT-S5620|GT-S5660|GT-S5670|GT-S5690|GT-S5750|GT-S5780|GT-S5830|GT-S5839|GT-S6102|GT-S6500|GT-S7070|GT-S7200|GT-S7220|GT-S7230|GT-S7233|GT-S7250|GT-S7500|GT-S7530|GT-S7550|GT-S7562|GT-S7710|GT-S8000|GT-S8003|GT-S8500|GT-S8530|GT-S8600|SCH-A310|SCH-A530|SCH-A570|SCH-A610|SCH-A630|SCH-A650|SCH-A790|SCH-A795|SCH-A850|SCH-A870|SCH-A890|SCH-A930|SCH-A950|SCH-A970|SCH-A990|SCH-I100|SCH-I110|SCH-I400|SCH-I405|SCH-I500|SCH-I510|SCH-I515|SCH-I600|SCH-I730|SCH-I760|SCH-I770|SCH-I830|SCH-I910|SCH-I920|SCH-I959|SCH-LC11|SCH-N150|SCH-N300|SCH-R100|SCH-R300|SCH-R351|SCH-R400|SCH-R410|SCH-T300|SCH-U310|SCH-U320|SCH-U350|SCH-U360|SCH-U365|SCH-U370|SCH-U380|SCH-U410|SCH-U430|SCH-U450|SCH-U460|SCH-U470|SCH-U490|SCH-U540|SCH-U550|SCH-U620|SCH-U640|SCH-U650|SCH-U660|SCH-U700|SCH-U740|SCH-U750|SCH-U810|SCH-U820|SCH-U900|SCH-U940|SCH-U960|SCS-26UC|SGH-A107|SGH-A117|SGH-A127|SGH-A137|SGH-A157|SGH-A167|SGH-A177|SGH-A187|SGH-A197|SGH-A227|SGH-A237|SGH-A257|SGH-A437|SGH-A517|SGH-A597|SGH-A637|SGH-A657|SGH-A667|SGH-A687|SGH-A697|SGH-A707|SGH-A717|SGH-A727|SGH-A737|SGH-A747|SGH-A767|SGH-A777|SGH-A797|SGH-A817|SGH-A827|SGH-A837|SGH-A847|SGH-A867|SGH-A877|SGH-A887|SGH-A897|SGH-A927|SGH-B100|SGH-B130|SGH-B200|SGH-B220|SGH-C100|SGH-C110|SGH-C120|SGH-C130|SGH-C140|SGH-C160|SGH-C170|SGH-C180|SGH-C200|SGH-C207|SGH-C210|SGH-C225|SGH-C230|SGH-C417|SGH-C450|SGH-D307|SGH-D347|SGH-D357|SGH-D407|SGH-D415|SGH-D780|SGH-D807|SGH-D980|SGH-E105|SGH-E200|SGH-E315|SGH-E316|SGH-E317|SGH-E335|SGH-E590|SGH-E635|SGH-E715|SGH-E890|SGH-F300|SGH-F480|SGH-I200|SGH-I300|SGH-I320|SGH-I550|SGH-I577|SGH-I600|SGH-I607|SGH-I617|SGH-I627|SGH-I637|SGH-I677|SGH-I700|SGH-I717|SGH-I727|SGH-i747M|SGH-I777|SGH-I780|SGH-I827|SGH-I847|SGH-I857|SGH-I896|SGH-I897|SGH-I900|SGH-I907|SGH-I917|SGH-I927|SGH-I937|SGH-I997|SGH-J150|SGH-J200|SGH-L170|SGH-L700|SGH-M110|SGH-M150|SGH-M200|SGH-N105|SGH-N500|SGH-N600|SGH-N620|SGH-N625|SGH-N700|SGH-N710|SGH-P107|SGH-P207|SGH-P300|SGH-P310|SGH-P520|SGH-P735|SGH-P777|SGH-Q105|SGH-R210|SGH-R220|SGH-R225|SGH-S105|SGH-S307|SGH-T109|SGH-T119|SGH-T139|SGH-T209|SGH-T219|SGH-T229|SGH-T239|SGH-T249|SGH-T259|SGH-T309|SGH-T319|SGH-T329|SGH-T339|SGH-T349|SGH-T359|SGH-T369|SGH-T379|SGH-T409|SGH-T429|SGH-T439|SGH-T459|SGH-T469|SGH-T479|SGH-T499|SGH-T509|SGH-T519|SGH-T539|SGH-T559|SGH-T589|SGH-T609|SGH-T619|SGH-T629|SGH-T639|SGH-T659|SGH-T669|SGH-T679|SGH-T709|SGH-T719|SGH-T729|SGH-T739|SGH-T746|SGH-T749|SGH-T759|SGH-T769|SGH-T809|SGH-T819|SGH-T839|SGH-T919|SGH-T929|SGH-T939|SGH-T959|SGH-T989|SGH-U100|SGH-U200|SGH-U800|SGH-V205|SGH-V206|SGH-X100|SGH-X105|SGH-X120|SGH-X140|SGH-X426|SGH-X427|SGH-X475|SGH-X495|SGH-X497|SGH-X507|SGH-X600|SGH-X610|SGH-X620|SGH-X630|SGH-X700|SGH-X820|SGH-X890|SGH-Z130|SGH-Z150|SGH-Z170|SGH-ZX10|SGH-ZX20|SHW-M110|SPH-A120|SPH-A400|SPH-A420|SPH-A460|SPH-A500|SPH-A560|SPH-A600|SPH-A620|SPH-A660|SPH-A700|SPH-A740|SPH-A760|SPH-A790|SPH-A800|SPH-A820|SPH-A840|SPH-A880|SPH-A900|SPH-A940|SPH-A960|SPH-D600|SPH-D700|SPH-D710|SPH-D720|SPH-I300|SPH-I325|SPH-I330|SPH-I350|SPH-I500|SPH-I600|SPH-I700|SPH-L700|SPH-M100|SPH-M220|SPH-M240|SPH-M300|SPH-M305|SPH-M320|SPH-M330|SPH-M350|SPH-M360|SPH-M370|SPH-M380|SPH-M510|SPH-M540|SPH-M550|SPH-M560|SPH-M570|SPH-M580|SPH-M610|SPH-M620|SPH-M630|SPH-M800|SPH-M810|SPH-M850|SPH-M900|SPH-M910|SPH-M920|SPH-M930|SPH-N100|SPH-N200|SPH-N240|SPH-N300|SPH-N400|SPH-Z400|SWC-E100|SCH-i909|GT-N7100|GT-N7105|SCH-I535|SM-N900A|SGH-I317|SGH-T999L|GT-S5360B|GT-I8262|GT-S6802|GT-S6312|GT-S6310|GT-S5312|GT-S5310|GT-I9105|GT-I8510|GT-S6790N|SM-G7105|SM-N9005|GT-S5301|GT-I9295|GT-I9195|SM-C101|GT-S7392|GT-S7560|GT-B7610|GT-I5510|GT-S7582|GT-S7530E|GT-I8750|SM-G9006V|SM-G9008V|SM-G9009D|SM-G900A|SM-G900D|SM-G900F|SM-G900H|SM-G900I|SM-G900J|SM-G900K|SM-G900L|SM-G900M|SM-G900P|SM-G900R4|SM-G900S|SM-G900T|SM-G900V|SM-G900W8|SHV-E160K|SCH-P709|SCH-P729|SM-T2558|GT-I9205|SM-G9350|SM-J120F|SM-G920F|SM-G920V|SM-G930F|SM-N910C|SM-A310F|GT-I9190|SM-J500FN|SM-G903F|SM-J330F",LG:"\\bLG\\b;|LG[- ]?(C800|C900|E400|E610|E900|E-900|F160|F180K|F180L|F180S|730|855|L160|LS740|LS840|LS970|LU6200|MS690|MS695|MS770|MS840|MS870|MS910|P500|P700|P705|VM696|AS680|AS695|AX840|C729|E970|GS505|272|C395|E739BK|E960|L55C|L75C|LS696|LS860|P769BK|P350|P500|P509|P870|UN272|US730|VS840|VS950|LN272|LN510|LS670|LS855|LW690|MN270|MN510|P509|P769|P930|UN200|UN270|UN510|UN610|US670|US740|US760|UX265|UX840|VN271|VN530|VS660|VS700|VS740|VS750|VS910|VS920|VS930|VX9200|VX11000|AX840A|LW770|P506|P925|P999|E612|D955|D802|MS323|M257)|LM-G710",Sony:"SonyST|SonyLT|SonyEricsson|SonyEricssonLT15iv|LT18i|E10i|LT28h|LT26w|SonyEricssonMT27i|C5303|C6902|C6903|C6906|C6943|D2533",Asus:"Asus.*Galaxy|PadFone.*Mobile",NokiaLumia:"Lumia [0-9]{3,4}",Micromax:"Micromax.*\\b(A210|A92|A88|A72|A111|A110Q|A115|A116|A110|A90S|A26|A51|A35|A54|A25|A27|A89|A68|A65|A57|A90)\\b",Palm:"PalmSource|Palm",Vertu:"Vertu|Vertu.*Ltd|Vertu.*Ascent|Vertu.*Ayxta|Vertu.*Constellation(F|Quest)?|Vertu.*Monika|Vertu.*Signature",Pantech:"PANTECH|IM-A850S|IM-A840S|IM-A830L|IM-A830K|IM-A830S|IM-A820L|IM-A810K|IM-A810S|IM-A800S|IM-T100K|IM-A725L|IM-A780L|IM-A775C|IM-A770K|IM-A760S|IM-A750K|IM-A740S|IM-A730S|IM-A720L|IM-A710K|IM-A690L|IM-A690S|IM-A650S|IM-A630K|IM-A600S|VEGA PTL21|PT003|P8010|ADR910L|P6030|P6020|P9070|P4100|P9060|P5000|CDM8992|TXT8045|ADR8995|IS11PT|P2030|P6010|P8000|PT002|IS06|CDM8999|P9050|PT001|TXT8040|P2020|P9020|P2000|P7040|P7000|C790",Fly:"IQ230|IQ444|IQ450|IQ440|IQ442|IQ441|IQ245|IQ256|IQ236|IQ255|IQ235|IQ245|IQ275|IQ240|IQ285|IQ280|IQ270|IQ260|IQ250",Wiko:"KITE 4G|HIGHWAY|GETAWAY|STAIRWAY|DARKSIDE|DARKFULL|DARKNIGHT|DARKMOON|SLIDE|WAX 4G|RAINBOW|BLOOM|SUNSET|GOA(?!nna)|LENNY|BARRY|IGGY|OZZY|CINK FIVE|CINK PEAX|CINK PEAX 2|CINK SLIM|CINK SLIM 2|CINK +|CINK KING|CINK PEAX|CINK SLIM|SUBLIM",iMobile:"i-mobile (IQ|i-STYLE|idea|ZAA|Hitz)",SimValley:"\\b(SP-80|XT-930|SX-340|XT-930|SX-310|SP-360|SP60|SPT-800|SP-120|SPT-800|SP-140|SPX-5|SPX-8|SP-100|SPX-8|SPX-12)\\b",Wolfgang:"AT-B24D|AT-AS50HD|AT-AS40W|AT-AS55HD|AT-AS45q2|AT-B26D|AT-AS50Q",Alcatel:"Alcatel",Nintendo:"Nintendo (3DS|Switch)",Amoi:"Amoi",INQ:"INQ",OnePlus:"ONEPLUS",GenericPhone:"Tapatalk|PDA;|SAGEM|\\bmmp\\b|pocket|\\bpsp\\b|symbian|Smartphone|smartfon|treo|up.browser|up.link|vodafone|\\bwap\\b|nokia|Series40|Series60|S60|SonyEricsson|N900|MAUI.*WAP.*Browser"},tablets:{iPad:"iPad|iPad.*Mobile",NexusTablet:"Android.*Nexus[\\s]+(7|9|10)",GoogleTablet:"Android.*Pixel C",SamsungTablet:"SAMSUNG.*Tablet|Galaxy.*Tab|SC-01C|GT-P1000|GT-P1003|GT-P1010|GT-P3105|GT-P6210|GT-P6800|GT-P6810|GT-P7100|GT-P7300|GT-P7310|GT-P7500|GT-P7510|SCH-I800|SCH-I815|SCH-I905|SGH-I957|SGH-I987|SGH-T849|SGH-T859|SGH-T869|SPH-P100|GT-P3100|GT-P3108|GT-P3110|GT-P5100|GT-P5110|GT-P6200|GT-P7320|GT-P7511|GT-N8000|GT-P8510|SGH-I497|SPH-P500|SGH-T779|SCH-I705|SCH-I915|GT-N8013|GT-P3113|GT-P5113|GT-P8110|GT-N8010|GT-N8005|GT-N8020|GT-P1013|GT-P6201|GT-P7501|GT-N5100|GT-N5105|GT-N5110|SHV-E140K|SHV-E140L|SHV-E140S|SHV-E150S|SHV-E230K|SHV-E230L|SHV-E230S|SHW-M180K|SHW-M180L|SHW-M180S|SHW-M180W|SHW-M300W|SHW-M305W|SHW-M380K|SHW-M380S|SHW-M380W|SHW-M430W|SHW-M480K|SHW-M480S|SHW-M480W|SHW-M485W|SHW-M486W|SHW-M500W|GT-I9228|SCH-P739|SCH-I925|GT-I9200|GT-P5200|GT-P5210|GT-P5210X|SM-T311|SM-T310|SM-T310X|SM-T210|SM-T210R|SM-T211|SM-P600|SM-P601|SM-P605|SM-P900|SM-P901|SM-T217|SM-T217A|SM-T217S|SM-P6000|SM-T3100|SGH-I467|XE500|SM-T110|GT-P5220|GT-I9200X|GT-N5110X|GT-N5120|SM-P905|SM-T111|SM-T2105|SM-T315|SM-T320|SM-T320X|SM-T321|SM-T520|SM-T525|SM-T530NU|SM-T230NU|SM-T330NU|SM-T900|XE500T1C|SM-P605V|SM-P905V|SM-T337V|SM-T537V|SM-T707V|SM-T807V|SM-P600X|SM-P900X|SM-T210X|SM-T230|SM-T230X|SM-T325|GT-P7503|SM-T531|SM-T330|SM-T530|SM-T705|SM-T705C|SM-T535|SM-T331|SM-T800|SM-T700|SM-T537|SM-T807|SM-P907A|SM-T337A|SM-T537A|SM-T707A|SM-T807A|SM-T237|SM-T807P|SM-P607T|SM-T217T|SM-T337T|SM-T807T|SM-T116NQ|SM-T116BU|SM-P550|SM-T350|SM-T550|SM-T9000|SM-P9000|SM-T705Y|SM-T805|GT-P3113|SM-T710|SM-T810|SM-T815|SM-T360|SM-T533|SM-T113|SM-T335|SM-T715|SM-T560|SM-T670|SM-T677|SM-T377|SM-T567|SM-T357T|SM-T555|SM-T561|SM-T713|SM-T719|SM-T813|SM-T819|SM-T580|SM-T355Y?|SM-T280|SM-T817A|SM-T820|SM-W700|SM-P580|SM-T587|SM-P350|SM-P555M|SM-P355M|SM-T113NU|SM-T815Y|SM-T585|SM-T285|SM-T825|SM-W708|SM-T835|SM-T830|SM-T837V|SM-T720|SM-T510|SM-T387V",Kindle:"Kindle|Silk.*Accelerated|Android.*\\b(KFOT|KFTT|KFJWI|KFJWA|KFOTE|KFSOWI|KFTHWI|KFTHWA|KFAPWI|KFAPWA|WFJWAE|KFSAWA|KFSAWI|KFASWI|KFARWI|KFFOWI|KFGIWI|KFMEWI)\\b|Android.*Silk/[0-9.]+ like Chrome/[0-9.]+ (?!Mobile)",SurfaceTablet:"Windows NT [0-9.]+; ARM;.*(Tablet|ARMBJS)",HPTablet:"HP Slate (7|8|10)|HP ElitePad 900|hp-tablet|EliteBook.*Touch|HP 8|Slate 21|HP SlateBook 10",AsusTablet:"^.*PadFone((?!Mobile).)*$|Transformer|TF101|TF101G|TF300T|TF300TG|TF300TL|TF700T|TF700KL|TF701T|TF810C|ME171|ME301T|ME302C|ME371MG|ME370T|ME372MG|ME172V|ME173X|ME400C|Slider SL101|\\bK00F\\b|\\bK00C\\b|\\bK00E\\b|\\bK00L\\b|TX201LA|ME176C|ME102A|\\bM80TA\\b|ME372CL|ME560CG|ME372CG|ME302KL| K010 | K011 | K017 | K01E |ME572C|ME103K|ME170C|ME171C|\\bME70C\\b|ME581C|ME581CL|ME8510C|ME181C|P01Y|PO1MA|P01Z|\\bP027\\b|\\bP024\\b|\\bP00C\\b",BlackBerryTablet:"PlayBook|RIM Tablet",HTCtablet:"HTC_Flyer_P512|HTC Flyer|HTC Jetstream|HTC-P715a|HTC EVO View 4G|PG41200|PG09410",MotorolaTablet:"xoom|sholest|MZ615|MZ605|MZ505|MZ601|MZ602|MZ603|MZ604|MZ606|MZ607|MZ608|MZ609|MZ615|MZ616|MZ617",NookTablet:"Android.*Nook|NookColor|nook browser|BNRV200|BNRV200A|BNTV250|BNTV250A|BNTV400|BNTV600|LogicPD Zoom2",AcerTablet:"Android.*; \\b(A100|A101|A110|A200|A210|A211|A500|A501|A510|A511|A700|A701|W500|W500P|W501|W501P|W510|W511|W700|G100|G100W|B1-A71|B1-710|B1-711|A1-810|A1-811|A1-830)\\b|W3-810|\\bA3-A10\\b|\\bA3-A11\\b|\\bA3-A20\\b|\\bA3-A30",ToshibaTablet:"Android.*(AT100|AT105|AT200|AT205|AT270|AT275|AT300|AT305|AT1S5|AT500|AT570|AT700|AT830)|TOSHIBA.*FOLIO",LGTablet:"\\bL-06C|LG-V909|LG-V900|LG-V700|LG-V510|LG-V500|LG-V410|LG-V400|LG-VK810\\b",FujitsuTablet:"Android.*\\b(F-01D|F-02F|F-05E|F-10D|M532|Q572)\\b",PrestigioTablet:"PMP3170B|PMP3270B|PMP3470B|PMP7170B|PMP3370B|PMP3570C|PMP5870C|PMP3670B|PMP5570C|PMP5770D|PMP3970B|PMP3870C|PMP5580C|PMP5880D|PMP5780D|PMP5588C|PMP7280C|PMP7280C3G|PMP7280|PMP7880D|PMP5597D|PMP5597|PMP7100D|PER3464|PER3274|PER3574|PER3884|PER5274|PER5474|PMP5097CPRO|PMP5097|PMP7380D|PMP5297C|PMP5297C_QUAD|PMP812E|PMP812E3G|PMP812F|PMP810E|PMP880TD|PMT3017|PMT3037|PMT3047|PMT3057|PMT7008|PMT5887|PMT5001|PMT5002",LenovoTablet:"Lenovo TAB|Idea(Tab|Pad)( A1|A10| K1|)|ThinkPad([ ]+)?Tablet|YT3-850M|YT3-X90L|YT3-X90F|YT3-X90X|Lenovo.*(S2109|S2110|S5000|S6000|K3011|A3000|A3500|A1000|A2107|A2109|A1107|A5500|A7600|B6000|B8000|B8080)(-|)(FL|F|HV|H|)|TB-X103F|TB-X304X|TB-X304F|TB-X304L|TB-X505F|TB-X505L|TB-X505X|TB-X605F|TB-X605L|TB-8703F|TB-8703X|TB-8703N|TB-8704N|TB-8704F|TB-8704X|TB-8704V|TB-7304F|TB-7304I|TB-7304X|Tab2A7-10F|Tab2A7-20F|TB2-X30L|YT3-X50L|YT3-X50F|YT3-X50M|YT-X705F|YT-X703F|YT-X703L|YT-X705L|YT-X705X|TB2-X30F|TB2-X30L|TB2-X30M|A2107A-F|A2107A-H|TB3-730F|TB3-730M|TB3-730X|TB-7504F|TB-7504X",DellTablet:"Venue 11|Venue 8|Venue 7|Dell Streak 10|Dell Streak 7",YarvikTablet:"Android.*\\b(TAB210|TAB211|TAB224|TAB250|TAB260|TAB264|TAB310|TAB360|TAB364|TAB410|TAB411|TAB420|TAB424|TAB450|TAB460|TAB461|TAB464|TAB465|TAB467|TAB468|TAB07-100|TAB07-101|TAB07-150|TAB07-151|TAB07-152|TAB07-200|TAB07-201-3G|TAB07-210|TAB07-211|TAB07-212|TAB07-214|TAB07-220|TAB07-400|TAB07-485|TAB08-150|TAB08-200|TAB08-201-3G|TAB08-201-30|TAB09-100|TAB09-211|TAB09-410|TAB10-150|TAB10-201|TAB10-211|TAB10-400|TAB10-410|TAB13-201|TAB274EUK|TAB275EUK|TAB374EUK|TAB462EUK|TAB474EUK|TAB9-200)\\b",MedionTablet:"Android.*\\bOYO\\b|LIFE.*(P9212|P9514|P9516|S9512)|LIFETAB",ArnovaTablet:"97G4|AN10G2|AN7bG3|AN7fG3|AN8G3|AN8cG3|AN7G3|AN9G3|AN7dG3|AN7dG3ST|AN7dG3ChildPad|AN10bG3|AN10bG3DT|AN9G2",IntensoTablet:"INM8002KP|INM1010FP|INM805ND|Intenso Tab|TAB1004",IRUTablet:"M702pro",MegafonTablet:"MegaFon V9|\\bZTE V9\\b|Android.*\\bMT7A\\b",EbodaTablet:"E-Boda (Supreme|Impresspeed|Izzycomm|Essential)",AllViewTablet:"Allview.*(Viva|Alldro|City|Speed|All TV|Frenzy|Quasar|Shine|TX1|AX1|AX2)",ArchosTablet:"\\b(101G9|80G9|A101IT)\\b|Qilive 97R|Archos5|\\bARCHOS (70|79|80|90|97|101|FAMILYPAD|)(b|c|)(G10| Cobalt| TITANIUM(HD|)| Xenon| Neon|XSK| 2| XS 2| PLATINUM| CARBON|GAMEPAD)\\b",AinolTablet:"NOVO7|NOVO8|NOVO10|Novo7Aurora|Novo7Basic|NOVO7PALADIN|novo9-Spark",NokiaLumiaTablet:"Lumia 2520",SonyTablet:"Sony.*Tablet|Xperia Tablet|Sony Tablet S|SO-03E|SGPT12|SGPT13|SGPT114|SGPT121|SGPT122|SGPT123|SGPT111|SGPT112|SGPT113|SGPT131|SGPT132|SGPT133|SGPT211|SGPT212|SGPT213|SGP311|SGP312|SGP321|EBRD1101|EBRD1102|EBRD1201|SGP351|SGP341|SGP511|SGP512|SGP521|SGP541|SGP551|SGP621|SGP641|SGP612|SOT31|SGP771|SGP611|SGP612|SGP712",PhilipsTablet:"\\b(PI2010|PI3000|PI3100|PI3105|PI3110|PI3205|PI3210|PI3900|PI4010|PI7000|PI7100)\\b",CubeTablet:"Android.*(K8GT|U9GT|U10GT|U16GT|U17GT|U18GT|U19GT|U20GT|U23GT|U30GT)|CUBE U8GT",CobyTablet:"MID1042|MID1045|MID1125|MID1126|MID7012|MID7014|MID7015|MID7034|MID7035|MID7036|MID7042|MID7048|MID7127|MID8042|MID8048|MID8127|MID9042|MID9740|MID9742|MID7022|MID7010",MIDTablet:"M9701|M9000|M9100|M806|M1052|M806|T703|MID701|MID713|MID710|MID727|MID760|MID830|MID728|MID933|MID125|MID810|MID732|MID120|MID930|MID800|MID731|MID900|MID100|MID820|MID735|MID980|MID130|MID833|MID737|MID960|MID135|MID860|MID736|MID140|MID930|MID835|MID733|MID4X10",MSITablet:"MSI \\b(Primo 73K|Primo 73L|Primo 81L|Primo 77|Primo 93|Primo 75|Primo 76|Primo 73|Primo 81|Primo 91|Primo 90|Enjoy 71|Enjoy 7|Enjoy 10)\\b",SMiTTablet:"Android.*(\\bMID\\b|MID-560|MTV-T1200|MTV-PND531|MTV-P1101|MTV-PND530)",RockChipTablet:"Android.*(RK2818|RK2808A|RK2918|RK3066)|RK2738|RK2808A",FlyTablet:"IQ310|Fly Vision",bqTablet:"Android.*(bq)?.*\\b(Elcano|Curie|Edison|Maxwell|Kepler|Pascal|Tesla|Hypatia|Platon|Newton|Livingstone|Cervantes|Avant|Aquaris ([E|M]10|M8))\\b|Maxwell.*Lite|Maxwell.*Plus",HuaweiTablet:"MediaPad|MediaPad 7 Youth|IDEOS S7|S7-201c|S7-202u|S7-101|S7-103|S7-104|S7-105|S7-106|S7-201|S7-Slim|M2-A01L|BAH-L09|BAH-W09|AGS-L09|CMR-AL19",NecTablet:"\\bN-06D|\\bN-08D",PantechTablet:"Pantech.*P4100",BronchoTablet:"Broncho.*(N701|N708|N802|a710)",VersusTablet:"TOUCHPAD.*[78910]|\\bTOUCHTAB\\b",ZyncTablet:"z1000|Z99 2G|z930|z990|z909|Z919|z900",PositivoTablet:"TB07STA|TB10STA|TB07FTA|TB10FTA",NabiTablet:"Android.*\\bNabi",KoboTablet:"Kobo Touch|\\bK080\\b|\\bVox\\b Build|\\bArc\\b Build",DanewTablet:"DSlide.*\\b(700|701R|702|703R|704|802|970|971|972|973|974|1010|1012)\\b",TexetTablet:"NaviPad|TB-772A|TM-7045|TM-7055|TM-9750|TM-7016|TM-7024|TM-7026|TM-7041|TM-7043|TM-7047|TM-8041|TM-9741|TM-9747|TM-9748|TM-9751|TM-7022|TM-7021|TM-7020|TM-7011|TM-7010|TM-7023|TM-7025|TM-7037W|TM-7038W|TM-7027W|TM-9720|TM-9725|TM-9737W|TM-1020|TM-9738W|TM-9740|TM-9743W|TB-807A|TB-771A|TB-727A|TB-725A|TB-719A|TB-823A|TB-805A|TB-723A|TB-715A|TB-707A|TB-705A|TB-709A|TB-711A|TB-890HD|TB-880HD|TB-790HD|TB-780HD|TB-770HD|TB-721HD|TB-710HD|TB-434HD|TB-860HD|TB-840HD|TB-760HD|TB-750HD|TB-740HD|TB-730HD|TB-722HD|TB-720HD|TB-700HD|TB-500HD|TB-470HD|TB-431HD|TB-430HD|TB-506|TB-504|TB-446|TB-436|TB-416|TB-146SE|TB-126SE",PlaystationTablet:"Playstation.*(Portable|Vita)",TrekstorTablet:"ST10416-1|VT10416-1|ST70408-1|ST702xx-1|ST702xx-2|ST80208|ST97216|ST70104-2|VT10416-2|ST10216-2A|SurfTab",PyleAudioTablet:"\\b(PTBL10CEU|PTBL10C|PTBL72BC|PTBL72BCEU|PTBL7CEU|PTBL7C|PTBL92BC|PTBL92BCEU|PTBL9CEU|PTBL9CUK|PTBL9C)\\b",AdvanTablet:"Android.* \\b(E3A|T3X|T5C|T5B|T3E|T3C|T3B|T1J|T1F|T2A|T1H|T1i|E1C|T1-E|T5-A|T4|E1-B|T2Ci|T1-B|T1-D|O1-A|E1-A|T1-A|T3A|T4i)\\b ",DanyTechTablet:"Genius Tab G3|Genius Tab S2|Genius Tab Q3|Genius Tab G4|Genius Tab Q4|Genius Tab G-II|Genius TAB GII|Genius TAB GIII|Genius Tab S1",GalapadTablet:"Android.*\\bG1\\b(?!\\))",MicromaxTablet:"Funbook|Micromax.*\\b(P250|P560|P360|P362|P600|P300|P350|P500|P275)\\b",KarbonnTablet:"Android.*\\b(A39|A37|A34|ST8|ST10|ST7|Smart Tab3|Smart Tab2)\\b",AllFineTablet:"Fine7 Genius|Fine7 Shine|Fine7 Air|Fine8 Style|Fine9 More|Fine10 Joy|Fine11 Wide",PROSCANTablet:"\\b(PEM63|PLT1023G|PLT1041|PLT1044|PLT1044G|PLT1091|PLT4311|PLT4311PL|PLT4315|PLT7030|PLT7033|PLT7033D|PLT7035|PLT7035D|PLT7044K|PLT7045K|PLT7045KB|PLT7071KG|PLT7072|PLT7223G|PLT7225G|PLT7777G|PLT7810K|PLT7849G|PLT7851G|PLT7852G|PLT8015|PLT8031|PLT8034|PLT8036|PLT8080K|PLT8082|PLT8088|PLT8223G|PLT8234G|PLT8235G|PLT8816K|PLT9011|PLT9045K|PLT9233G|PLT9735|PLT9760G|PLT9770G)\\b",YONESTablet:"BQ1078|BC1003|BC1077|RK9702|BC9730|BC9001|IT9001|BC7008|BC7010|BC708|BC728|BC7012|BC7030|BC7027|BC7026",ChangJiaTablet:"TPC7102|TPC7103|TPC7105|TPC7106|TPC7107|TPC7201|TPC7203|TPC7205|TPC7210|TPC7708|TPC7709|TPC7712|TPC7110|TPC8101|TPC8103|TPC8105|TPC8106|TPC8203|TPC8205|TPC8503|TPC9106|TPC9701|TPC97101|TPC97103|TPC97105|TPC97106|TPC97111|TPC97113|TPC97203|TPC97603|TPC97809|TPC97205|TPC10101|TPC10103|TPC10106|TPC10111|TPC10203|TPC10205|TPC10503",GUTablet:"TX-A1301|TX-M9002|Q702|kf026",PointOfViewTablet:"TAB-P506|TAB-navi-7-3G-M|TAB-P517|TAB-P-527|TAB-P701|TAB-P703|TAB-P721|TAB-P731N|TAB-P741|TAB-P825|TAB-P905|TAB-P925|TAB-PR945|TAB-PL1015|TAB-P1025|TAB-PI1045|TAB-P1325|TAB-PROTAB[0-9]+|TAB-PROTAB25|TAB-PROTAB26|TAB-PROTAB27|TAB-PROTAB26XL|TAB-PROTAB2-IPS9|TAB-PROTAB30-IPS9|TAB-PROTAB25XXL|TAB-PROTAB26-IPS10|TAB-PROTAB30-IPS10",OvermaxTablet:"OV-(SteelCore|NewBase|Basecore|Baseone|Exellen|Quattor|EduTab|Solution|ACTION|BasicTab|TeddyTab|MagicTab|Stream|TB-08|TB-09)|Qualcore 1027",HCLTablet:"HCL.*Tablet|Connect-3G-2.0|Connect-2G-2.0|ME Tablet U1|ME Tablet U2|ME Tablet G1|ME Tablet X1|ME Tablet Y2|ME Tablet Sync",DPSTablet:"DPS Dream 9|DPS Dual 7",VistureTablet:"V97 HD|i75 3G|Visture V4( HD)?|Visture V5( HD)?|Visture V10",CrestaTablet:"CTP(-)?810|CTP(-)?818|CTP(-)?828|CTP(-)?838|CTP(-)?888|CTP(-)?978|CTP(-)?980|CTP(-)?987|CTP(-)?988|CTP(-)?989",MediatekTablet:"\\bMT8125|MT8389|MT8135|MT8377\\b",ConcordeTablet:"Concorde([ ]+)?Tab|ConCorde ReadMan",GoCleverTablet:"GOCLEVER TAB|A7GOCLEVER|M1042|M7841|M742|R1042BK|R1041|TAB A975|TAB A7842|TAB A741|TAB A741L|TAB M723G|TAB M721|TAB A1021|TAB I921|TAB R721|TAB I720|TAB T76|TAB R70|TAB R76.2|TAB R106|TAB R83.2|TAB M813G|TAB I721|GCTA722|TAB I70|TAB I71|TAB S73|TAB R73|TAB R74|TAB R93|TAB R75|TAB R76.1|TAB A73|TAB A93|TAB A93.2|TAB T72|TAB R83|TAB R974|TAB R973|TAB A101|TAB A103|TAB A104|TAB A104.2|R105BK|M713G|A972BK|TAB A971|TAB R974.2|TAB R104|TAB R83.3|TAB A1042",ModecomTablet:"FreeTAB 9000|FreeTAB 7.4|FreeTAB 7004|FreeTAB 7800|FreeTAB 2096|FreeTAB 7.5|FreeTAB 1014|FreeTAB 1001 |FreeTAB 8001|FreeTAB 9706|FreeTAB 9702|FreeTAB 7003|FreeTAB 7002|FreeTAB 1002|FreeTAB 7801|FreeTAB 1331|FreeTAB 1004|FreeTAB 8002|FreeTAB 8014|FreeTAB 9704|FreeTAB 1003",VoninoTablet:"\\b(Argus[ _]?S|Diamond[ _]?79HD|Emerald[ _]?78E|Luna[ _]?70C|Onyx[ _]?S|Onyx[ _]?Z|Orin[ _]?HD|Orin[ _]?S|Otis[ _]?S|SpeedStar[ _]?S|Magnet[ _]?M9|Primus[ _]?94[ _]?3G|Primus[ _]?94HD|Primus[ _]?QS|Android.*\\bQ8\\b|Sirius[ _]?EVO[ _]?QS|Sirius[ _]?QS|Spirit[ _]?S)\\b",ECSTablet:"V07OT2|TM105A|S10OT1|TR10CS1",StorexTablet:"eZee[_']?(Tab|Go)[0-9]+|TabLC7|Looney Tunes Tab",VodafoneTablet:"SmartTab([ ]+)?[0-9]+|SmartTabII10|SmartTabII7|VF-1497|VFD 1400",EssentielBTablet:"Smart[ ']?TAB[ ]+?[0-9]+|Family[ ']?TAB2",RossMoorTablet:"RM-790|RM-997|RMD-878G|RMD-974R|RMT-705A|RMT-701|RME-601|RMT-501|RMT-711",iMobileTablet:"i-mobile i-note",TolinoTablet:"tolino tab [0-9.]+|tolino shine",AudioSonicTablet:"\\bC-22Q|T7-QC|T-17B|T-17P\\b",AMPETablet:"Android.* A78 ",SkkTablet:"Android.* (SKYPAD|PHOENIX|CYCLOPS)",TecnoTablet:"TECNO P9|TECNO DP8D",JXDTablet:"Android.* \\b(F3000|A3300|JXD5000|JXD3000|JXD2000|JXD300B|JXD300|S5800|S7800|S602b|S5110b|S7300|S5300|S602|S603|S5100|S5110|S601|S7100a|P3000F|P3000s|P101|P200s|P1000m|P200m|P9100|P1000s|S6600b|S908|P1000|P300|S18|S6600|S9100)\\b",iJoyTablet:"Tablet (Spirit 7|Essentia|Galatea|Fusion|Onix 7|Landa|Titan|Scooby|Deox|Stella|Themis|Argon|Unique 7|Sygnus|Hexen|Finity 7|Cream|Cream X2|Jade|Neon 7|Neron 7|Kandy|Scape|Saphyr 7|Rebel|Biox|Rebel|Rebel 8GB|Myst|Draco 7|Myst|Tab7-004|Myst|Tadeo Jones|Tablet Boing|Arrow|Draco Dual Cam|Aurix|Mint|Amity|Revolution|Finity 9|Neon 9|T9w|Amity 4GB Dual Cam|Stone 4GB|Stone 8GB|Andromeda|Silken|X2|Andromeda II|Halley|Flame|Saphyr 9,7|Touch 8|Planet|Triton|Unique 10|Hexen 10|Memphis 4GB|Memphis 8GB|Onix 10)",FX2Tablet:"FX2 PAD7|FX2 PAD10",XoroTablet:"KidsPAD 701|PAD[ ]?712|PAD[ ]?714|PAD[ ]?716|PAD[ ]?717|PAD[ ]?718|PAD[ ]?720|PAD[ ]?721|PAD[ ]?722|PAD[ ]?790|PAD[ ]?792|PAD[ ]?900|PAD[ ]?9715D|PAD[ ]?9716DR|PAD[ ]?9718DR|PAD[ ]?9719QR|PAD[ ]?9720QR|TelePAD1030|Telepad1032|TelePAD730|TelePAD731|TelePAD732|TelePAD735Q|TelePAD830|TelePAD9730|TelePAD795|MegaPAD 1331|MegaPAD 1851|MegaPAD 2151",ViewsonicTablet:"ViewPad 10pi|ViewPad 10e|ViewPad 10s|ViewPad E72|ViewPad7|ViewPad E100|ViewPad 7e|ViewSonic VB733|VB100a",VerizonTablet:"QTAQZ3|QTAIR7|QTAQTZ3|QTASUN1|QTASUN2|QTAXIA1",OdysTablet:"LOOX|XENO10|ODYS[ -](Space|EVO|Xpress|NOON)|\\bXELIO\\b|Xelio10Pro|XELIO7PHONETAB|XELIO10EXTREME|XELIOPT2|NEO_QUAD10",CaptivaTablet:"CAPTIVA PAD",IconbitTablet:"NetTAB|NT-3702|NT-3702S|NT-3702S|NT-3603P|NT-3603P|NT-0704S|NT-0704S|NT-3805C|NT-3805C|NT-0806C|NT-0806C|NT-0909T|NT-0909T|NT-0907S|NT-0907S|NT-0902S|NT-0902S",TeclastTablet:"T98 4G|\\bP80\\b|\\bX90HD\\b|X98 Air|X98 Air 3G|\\bX89\\b|P80 3G|\\bX80h\\b|P98 Air|\\bX89HD\\b|P98 3G|\\bP90HD\\b|P89 3G|X98 3G|\\bP70h\\b|P79HD 3G|G18d 3G|\\bP79HD\\b|\\bP89s\\b|\\bA88\\b|\\bP10HD\\b|\\bP19HD\\b|G18 3G|\\bP78HD\\b|\\bA78\\b|\\bP75\\b|G17s 3G|G17h 3G|\\bP85t\\b|\\bP90\\b|\\bP11\\b|\\bP98t\\b|\\bP98HD\\b|\\bG18d\\b|\\bP85s\\b|\\bP11HD\\b|\\bP88s\\b|\\bA80HD\\b|\\bA80se\\b|\\bA10h\\b|\\bP89\\b|\\bP78s\\b|\\bG18\\b|\\bP85\\b|\\bA70h\\b|\\bA70\\b|\\bG17\\b|\\bP18\\b|\\bA80s\\b|\\bA11s\\b|\\bP88HD\\b|\\bA80h\\b|\\bP76s\\b|\\bP76h\\b|\\bP98\\b|\\bA10HD\\b|\\bP78\\b|\\bP88\\b|\\bA11\\b|\\bA10t\\b|\\bP76a\\b|\\bP76t\\b|\\bP76e\\b|\\bP85HD\\b|\\bP85a\\b|\\bP86\\b|\\bP75HD\\b|\\bP76v\\b|\\bA12\\b|\\bP75a\\b|\\bA15\\b|\\bP76Ti\\b|\\bP81HD\\b|\\bA10\\b|\\bT760VE\\b|\\bT720HD\\b|\\bP76\\b|\\bP73\\b|\\bP71\\b|\\bP72\\b|\\bT720SE\\b|\\bC520Ti\\b|\\bT760\\b|\\bT720VE\\b|T720-3GE|T720-WiFi",OndaTablet:"\\b(V975i|Vi30|VX530|V701|Vi60|V701s|Vi50|V801s|V719|Vx610w|VX610W|V819i|Vi10|VX580W|Vi10|V711s|V813|V811|V820w|V820|Vi20|V711|VI30W|V712|V891w|V972|V819w|V820w|Vi60|V820w|V711|V813s|V801|V819|V975s|V801|V819|V819|V818|V811|V712|V975m|V101w|V961w|V812|V818|V971|V971s|V919|V989|V116w|V102w|V973|Vi40)\\b[\\s]+|V10 \\b4G\\b",JaytechTablet:"TPC-PA762",BlaupunktTablet:"Endeavour 800NG|Endeavour 1010",DigmaTablet:"\\b(iDx10|iDx9|iDx8|iDx7|iDxD7|iDxD8|iDsQ8|iDsQ7|iDsQ8|iDsD10|iDnD7|3TS804H|iDsQ11|iDj7|iDs10)\\b",EvolioTablet:"ARIA_Mini_wifi|Aria[ _]Mini|Evolio X10|Evolio X7|Evolio X8|\\bEvotab\\b|\\bNeura\\b",LavaTablet:"QPAD E704|\\bIvoryS\\b|E-TAB IVORY|\\bE-TAB\\b",AocTablet:"MW0811|MW0812|MW0922|MTK8382|MW1031|MW0831|MW0821|MW0931|MW0712",MpmanTablet:"MP11 OCTA|MP10 OCTA|MPQC1114|MPQC1004|MPQC994|MPQC974|MPQC973|MPQC804|MPQC784|MPQC780|\\bMPG7\\b|MPDCG75|MPDCG71|MPDC1006|MP101DC|MPDC9000|MPDC905|MPDC706HD|MPDC706|MPDC705|MPDC110|MPDC100|MPDC99|MPDC97|MPDC88|MPDC8|MPDC77|MP709|MID701|MID711|MID170|MPDC703|MPQC1010",CelkonTablet:"CT695|CT888|CT[\\s]?910|CT7 Tab|CT9 Tab|CT3 Tab|CT2 Tab|CT1 Tab|C820|C720|\\bCT-1\\b",WolderTablet:"miTab \\b(DIAMOND|SPACE|BROOKLYN|NEO|FLY|MANHATTAN|FUNK|EVOLUTION|SKY|GOCAR|IRON|GENIUS|POP|MINT|EPSILON|BROADWAY|JUMP|HOP|LEGEND|NEW AGE|LINE|ADVANCE|FEEL|FOLLOW|LIKE|LINK|LIVE|THINK|FREEDOM|CHICAGO|CLEVELAND|BALTIMORE-GH|IOWA|BOSTON|SEATTLE|PHOENIX|DALLAS|IN 101|MasterChef)\\b",MediacomTablet:"M-MPI10C3G|M-SP10EG|M-SP10EGP|M-SP10HXAH|M-SP7HXAH|M-SP10HXBH|M-SP8HXAH|M-SP8MXA",MiTablet:"\\bMI PAD\\b|\\bHM NOTE 1W\\b",NibiruTablet:"Nibiru M1|Nibiru Jupiter One",NexoTablet:"NEXO NOVA|NEXO 10|NEXO AVIO|NEXO FREE|NEXO GO|NEXO EVO|NEXO 3G|NEXO SMART|NEXO KIDDO|NEXO MOBI",LeaderTablet:"TBLT10Q|TBLT10I|TBL-10WDKB|TBL-10WDKBO2013|TBL-W230V2|TBL-W450|TBL-W500|SV572|TBLT7I|TBA-AC7-8G|TBLT79|TBL-8W16|TBL-10W32|TBL-10WKB|TBL-W100",UbislateTablet:"UbiSlate[\\s]?7C",PocketBookTablet:"Pocketbook",KocasoTablet:"\\b(TB-1207)\\b",HisenseTablet:"\\b(F5281|E2371)\\b",Hudl:"Hudl HT7S3|Hudl 2",TelstraTablet:"T-Hub2",GenericTablet:"Android.*\\b97D\\b|Tablet(?!.*PC)|BNTV250A|MID-WCDMA|LogicPD Zoom2|\\bA7EB\\b|CatNova8|A1_07|CT704|CT1002|\\bM721\\b|rk30sdk|\\bEVOTAB\\b|M758A|ET904|ALUMIUM10|Smartfren Tab|Endeavour 1010|Tablet-PC-4|Tagi Tab|\\bM6pro\\b|CT1020W|arc 10HD|\\bTP750\\b|\\bQTAQZ3\\b|WVT101|TM1088|KT107"},oss:{AndroidOS:"Android",BlackBerryOS:"blackberry|\\bBB10\\b|rim tablet os",PalmOS:"PalmOS|avantgo|blazer|elaine|hiptop|palm|plucker|xiino",SymbianOS:"Symbian|SymbOS|Series60|Series40|SYB-[0-9]+|\\bS60\\b",WindowsMobileOS:"Windows CE.*(PPC|Smartphone|Mobile|[0-9]{3}x[0-9]{3})|Windows Mobile|Windows Phone [0-9.]+|WCE;",WindowsPhoneOS:"Windows Phone 10.0|Windows Phone 8.1|Windows Phone 8.0|Windows Phone OS|XBLWP7|ZuneWP7|Windows NT 6.[23]; ARM;",iOS:"\\biPhone.*Mobile|\\biPod|\\biPad|AppleCoreMedia",iPadOS:"CPU OS 13",MeeGoOS:"MeeGo",MaemoOS:"Maemo",JavaOS:"J2ME/|\\bMIDP\\b|\\bCLDC\\b",webOS:"webOS|hpwOS",badaOS:"\\bBada\\b",BREWOS:"BREW"},uas:{Chrome:"\\bCrMo\\b|CriOS|Android.*Chrome/[.0-9]* (Mobile)?",Dolfin:"\\bDolfin\\b",Opera:"Opera.*Mini|Opera.*Mobi|Android.*Opera|Mobile.*OPR/[0-9.]+$|Coast/[0-9.]+",Skyfire:"Skyfire",Edge:"Mobile Safari/[.0-9]* Edge",IE:"IEMobile|MSIEMobile",Firefox:"fennec|firefox.*maemo|(Mobile|Tablet).*Firefox|Firefox.*Mobile|FxiOS",Bolt:"bolt",TeaShark:"teashark",Blazer:"Blazer",Safari:"Version.*Mobile.*Safari|Safari.*Mobile|MobileSafari",WeChat:"\\bMicroMessenger\\b",UCBrowser:"UC.*Browser|UCWEB",baiduboxapp:"baiduboxapp",baidubrowser:"baidubrowser",DiigoBrowser:"DiigoBrowser",Mercury:"\\bMercury\\b",ObigoBrowser:"Obigo",NetFront:"NF-Browser",GenericBrowser:"NokiaBrowser|OviBrowser|OneBrowser|TwonkyBeamBrowser|SEMC.*Browser|FlyFlow|Minimo|NetFront|Novarra-Vision|MQQBrowser|MicroMessenger",PaleMoon:"Android.*PaleMoon|Mobile.*PaleMoon"},props:{Mobile:"Mobile/[VER]",Build:"Build/[VER]",Version:"Version/[VER]",VendorID:"VendorID/[VER]",iPad:"iPad.*CPU[a-z ]+[VER]",iPhone:"iPhone.*CPU[a-z ]+[VER]",iPod:"iPod.*CPU[a-z ]+[VER]",Kindle:"Kindle/[VER]",Chrome:["Chrome/[VER]","CriOS/[VER]","CrMo/[VER]"],Coast:["Coast/[VER]"],Dolfin:"Dolfin/[VER]",Firefox:["Firefox/[VER]","FxiOS/[VER]"],Fennec:"Fennec/[VER]",Edge:"Edge/[VER]",IE:["IEMobile/[VER];","IEMobile [VER]","MSIE [VER];","Trident/[0-9.]+;.*rv:[VER]"],NetFront:"NetFront/[VER]",NokiaBrowser:"NokiaBrowser/[VER]",Opera:[" OPR/[VER]","Opera Mini/[VER]","Version/[VER]"],"Opera Mini":"Opera Mini/[VER]","Opera Mobi":"Version/[VER]",UCBrowser:["UCWEB[VER]","UC.*Browser/[VER]"],MQQBrowser:"MQQBrowser/[VER]",MicroMessenger:"MicroMessenger/[VER]",baiduboxapp:"baiduboxapp/[VER]",baidubrowser:"baidubrowser/[VER]",SamsungBrowser:"SamsungBrowser/[VER]",Iron:"Iron/[VER]",Safari:["Version/[VER]","Safari/[VER]"],Skyfire:"Skyfire/[VER]",Tizen:"Tizen/[VER]",Webkit:"webkit[ /][VER]",PaleMoon:"PaleMoon/[VER]",Gecko:"Gecko/[VER]",Trident:"Trident/[VER]",Presto:"Presto/[VER]",Goanna:"Goanna/[VER]",iOS:" \\bi?OS\\b [VER][ ;]{1}",Android:"Android [VER]",BlackBerry:["BlackBerry[\\w]+/[VER]","BlackBerry.*Version/[VER]","Version/[VER]"],BREW:"BREW [VER]",Java:"Java/[VER]","Windows Phone OS":["Windows Phone OS [VER]","Windows Phone [VER]"],"Windows Phone":"Windows Phone [VER]","Windows CE":"Windows CE/[VER]","Windows NT":"Windows NT [VER]",Symbian:["SymbianOS/[VER]","Symbian/[VER]"],webOS:["webOS/[VER]","hpwOS/[VER];"]},utils:{Bot:"Googlebot|facebookexternalhit|Google-AMPHTML|s~amp-validator|AdsBot-Google|Google Keyword Suggestion|Facebot|YandexBot|YandexMobileBot|bingbot|ia_archiver|AhrefsBot|Ezooms|GSLFbot|WBSearchBot|Twitterbot|TweetmemeBot|Twikle|PaperLiBot|Wotbox|UnwindFetchor|Exabot|MJ12bot|YandexImages|TurnitinBot|Pingdom|contentkingapp",MobileBot:"Googlebot-Mobile|AdsBot-Google-Mobile|YahooSeeker/M1A1-R2D2",DesktopMode:"WPDesktop",TV:"SonyDTV|HbbTV",WebKit:"(webkit)[ /]([\\w.]+)",Console:"\\b(Nintendo|Nintendo WiiU|Nintendo 3DS|Nintendo Switch|PLAYSTATION|Xbox)\\b",Watch:"SM-V700"}},detectMobileBrowsers:{fullPattern:/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i,shortPattern:/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i,tabletPattern:/android|ipad|playbook|silk/i}},u=Object.prototype.hasOwnProperty;return c.FALLBACK_PHONE="UnknownPhone",c.FALLBACK_TABLET="UnknownTablet",c.FALLBACK_MOBILE="UnknownMobile",l="isArray"in Array?Array.isArray:function(e){return"[object Array]"===Object.prototype.toString.call(e)},function(){var e,t,n,o,i,r,a=c.mobileDetectRules;for(e in a.props)if(u.call(a.props,e)){for(t=a.props[e],l(t)||(t=[t]),i=t.length,o=0;o<i;++o)0<=(r=(n=t[o]).indexOf("[VER]"))&&(n=n.substring(0,r)+"([\\w._\\+]+)"+n.substring(r+5)),t[o]=new RegExp(n,"i");a.props[e]=t}s(a.oss),s(a.phones),s(a.tablets),s(a.uas),s(a.utils),a.oss0={WindowsPhoneOS:a.oss.WindowsPhoneOS,WindowsMobileOS:a.oss.WindowsMobileOS}}(),c.findMatch=function(e,t){for(var n in e)if(u.call(e,n)&&e[n].test(t))return n;return null},c.findMatches=function(e,t){var n=[];for(var o in e)u.call(e,o)&&e[o].test(t)&&n.push(o);return n},c.getVersionStr=function(e,t){var n,o,i,r,a=c.mobileDetectRules.props;if(u.call(a,e))for(i=(n=a[e]).length,o=0;o<i;++o)if(null!==(r=n[o].exec(t)))return r[1];return null},c.getVersion=function(e,t){var n=c.getVersionStr(e,t);return n?c.prepareVersionNo(n):NaN},c.prepareVersionNo=function(e){var t=e.split(/[a-z._ \/\-]/i);return 1===t.length&&(e=t[0]),1<t.length&&(e=t[0]+".",t.shift(),e+=t.join("")),Number(e)},c.isMobileFallback=function(e){return c.detectMobileBrowsers.fullPattern.test(e)||c.detectMobileBrowsers.shortPattern.test(e.substr(0,4))},c.isTabletFallback=function(e){return c.detectMobileBrowsers.tabletPattern.test(e)},c.prepareDetectionCache=function(e,t,n){var o,i,r;if(e.mobile===d)return(i=c.findMatch(c.mobileDetectRules.tablets,t))?(e.mobile=e.tablet=i,void(e.phone=null)):(o=c.findMatch(c.mobileDetectRules.phones,t))?(e.mobile=e.phone=o,void(e.tablet=null)):void(c.isMobileFallback(t)?(r=a.isPhoneSized(n))===d?(e.mobile=c.FALLBACK_MOBILE,e.tablet=e.phone=null):r?(e.mobile=e.phone=c.FALLBACK_PHONE,e.tablet=null):(e.mobile=e.tablet=c.FALLBACK_TABLET,e.phone=null):c.isTabletFallback(t)?(e.mobile=e.tablet=c.FALLBACK_TABLET,e.phone=null):e.mobile=e.tablet=e.phone=null)},c.mobileGrade=function(e){var t=null!==e.mobile();return e.os("iOS")&&4.3<=e.version("iPad")||e.os("iOS")&&3.1<=e.version("iPhone")||e.os("iOS")&&3.1<=e.version("iPod")||2.1<e.version("Android")&&e.is("Webkit")||7<=e.version("Windows Phone OS")||e.is("BlackBerry")&&6<=e.version("BlackBerry")||e.match("Playbook.*Tablet")||1.4<=e.version("webOS")&&e.match("Palm|Pre|Pixi")||e.match("hp.*TouchPad")||e.is("Firefox")&&12<=e.version("Firefox")||e.is("Chrome")&&e.is("AndroidOS")&&4<=e.version("Android")||e.is("Skyfire")&&4.1<=e.version("Skyfire")&&e.is("AndroidOS")&&2.3<=e.version("Android")||e.is("Opera")&&11<e.version("Opera Mobi")&&e.is("AndroidOS")||e.is("MeeGoOS")||e.is("Tizen")||e.is("Dolfin")&&2<=e.version("Bada")||(e.is("UC Browser")||e.is("Dolfin"))&&2.3<=e.version("Android")||e.match("Kindle Fire")||e.is("Kindle")&&3<=e.version("Kindle")||e.is("AndroidOS")&&e.is("NookTablet")||11<=e.version("Chrome")&&!t||5<=e.version("Safari")&&!t||4<=e.version("Firefox")&&!t||7<=e.version("MSIE")&&!t||10<=e.version("Opera")&&!t?"A":e.os("iOS")&&e.version("iPad")<4.3||e.os("iOS")&&e.version("iPhone")<3.1||e.os("iOS")&&e.version("iPod")<3.1||e.is("Blackberry")&&5<=e.version("BlackBerry")&&e.version("BlackBerry")<6||5<=e.version("Opera Mini")&&e.version("Opera Mini")<=6.5&&(2.3<=e.version("Android")||e.is("iOS"))||e.match("NokiaN8|NokiaC7|N97.*Series60|Symbian/3")||11<=e.version("Opera Mobi")&&e.is("SymbianOS")?"B":(e.version("BlackBerry")<5||e.match("MSIEMobile|Windows CE.*Mobile")||e.version("Windows Mobile"),"C")},c.detectOS=function(e){return c.findMatch(c.mobileDetectRules.oss0,e)||c.findMatch(c.mobileDetectRules.oss,e)},c.getDeviceSmallerSide=function(){return window.screen.width<window.screen.height?window.screen.width:window.screen.height},a.prototype={constructor:a,mobile:function(){return c.prepareDetectionCache(this._cache,this.ua,this.maxPhoneWidth),this._cache.mobile},phone:function(){return c.prepareDetectionCache(this._cache,this.ua,this.maxPhoneWidth),this._cache.phone},tablet:function(){return c.prepareDetectionCache(this._cache,this.ua,this.maxPhoneWidth),this._cache.tablet},userAgent:function(){return this._cache.userAgent===d&&(this._cache.userAgent=c.findMatch(c.mobileDetectRules.uas,this.ua)),this._cache.userAgent},userAgents:function(){return this._cache.userAgents===d&&(this._cache.userAgents=c.findMatches(c.mobileDetectRules.uas,this.ua)),this._cache.userAgents},os:function(){return this._cache.os===d&&(this._cache.os=c.detectOS(this.ua)),this._cache.os},version:function(e){return c.getVersion(e,this.ua)},versionStr:function(e){return c.getVersionStr(e,this.ua)},is:function(e){return n(this.userAgents(),e)||t(e,this.os())||t(e,this.phone())||t(e,this.tablet())||n(c.findMatches(c.mobileDetectRules.utils,this.ua),e)},match:function(e){return e instanceof RegExp||(e=new RegExp(e,"i")),e.test(this.ua)},isPhoneSized:function(e){return a.isPhoneSized(e||this.maxPhoneWidth)},mobileGrade:function(){return this._cache.grade===d&&(this._cache.grade=c.mobileGrade(this)),this._cache.grade}},"undefined"!=typeof window&&window.screen?a.isPhoneSized=function(e){return e<0?d:c.getDeviceSmallerSide()<=e}:a.isPhoneSized=function(){},a._impl=c,a.version="1.4.4 2019-09-21",a})}(),$(".team__name").on("click",function(){var e=$(this.closest(".team__item"));e.siblings().removeClass("team__item--active"),e.toggleClass("team__item--active")});var myMap,openMenu=document.querySelector("#openMenu"),menuContent=document.querySelector("#menuContent"),closeMenu=document.querySelector("#closeMenu"),menuList=document.querySelector("#menu__list");function init(){myMap=new ymaps.Map("map",{center:[55.752264,37.600023],zoom:13,controls:[]});for(var e=[[55.755565,37.620905],[55.748141,37.604512],[55.742889,37.583089],[55.758612,37.583919]],t=new ymaps.GeoObjectCollection({},{draggable:!1,iconLayout:"default#image",iconImageHref:"./images/marker.png",iconImageSize:[46,57],iconImageOffset:[-35,-52]}),n=0;n<e.length;n++)t.add(new ymaps.Placemark(e[n]));myMap.geoObjects.add(t),myMap.behaviors.disable("scrollZoom")}openMenu.addEventListener("click",function(e){e.preventDefault(),menuContent.classList.add("mobile__menu--active")}),closeMenu.addEventListener("click",function(e){e.preventDefault(),menuContent.classList.remove("mobile__menu--active")}),menuList.addEventListener("click",function(e){e.preventDefault(),menuContent.classList.remove("mobile__menu--active")}),ymaps.ready(init);for(var accoMenu=document.querySelector(".menu-acco"),menuItem=document.querySelectorAll(".menu-acco__item"),itemLength=menuItem.length,i=0;i<itemLength;i++)menuItem[i].addEventListener("click",function(e){if(e.stopPropagation(),e.preventDefault(),this.classList.contains("menu-acco__item--active"))this.classList.remove("menu-acco__item--active");else{for(var t=0;t<itemLength;t++)menuItem[t].classList.remove("menu-acco__item--active");this.classList.add("menu-acco__item--active")}});accoMenu.addEventListener("click",function(){for(i=0;i<itemLength;i++)menuItem[i].classList.remove("menu-acco__item--active")});var validateFields=function(e,t){return t.forEach(function(e){e.removeClass("input-error"),""===e.val().trim()&&(e.addClass("input-error"),$(".error").text("ÐÐ°Ð¿Ð¾Ð»Ð½Ð¸ÑÐµ ÑÑÐ¾ Ð¿Ð¾Ð»Ðµ").css("color","red"))}),0===e.find(".input-error").length};$(".form").submit(function(e){e.preventDefault();var n=$(e.currentTarget),t=n.find("[name='name']"),o=n.find("[name='phone']"),i=n.find("[name='comment']"),r=n.find("[name='to']"),a=validateFields(n,[t,o,i,r]),s=$("#modal").find(".modal__content");a&&$.ajax({url:"https://webdev-api.loftschool.com/sendmail",method:"post",data:{name:t.val(),phone:o.val(),comment:i.val(),to:r.val()},success:function(e){s.text(e.message),$(".error").text(""),$(n)[0].reset(),$.fancybox.open({src:".modal",type:"inline",smallBtn:!1})},error:function(e){$(".error").text(""),$(n)[0].reset();var t=e.responseJSON.message;s.text(t),$.fancybox.open({src:".modal",type:"inline",smallBtn:!1})}})}),$(".js-submit-btn").click(function(e){e.preventDefault(),$.fancybox.close()});var sections=$("section"),display=$(".maincontent"),sideMenu=$(".fixed-menu"),menuItems=sideMenu.find(".fixed-menu__item"),mobileDetect=new MobileDetect(window.navigator.userAgent),isMobile=mobileDetect.mobile(),inScroll=!1;sections.first().addClass("active");var countSectionPosition=function(e){var t=-100*e;return isNaN(t)?(console.error("Ð¿ÐµÑÐµÐ´Ð°Ð½Ð¾ Ð½ÐµÐ²ÐµÑÐ½Ð¾Ðµ Ð·Ð½Ð°ÑÐµÐ½Ð¸Ðµ Ð² countSectionPosition"),0):t},activeClass="fixed-menu__item--active",resetActiveClassForItem=function(e,t,n){e.eq(t).addClass(n).siblings().removeClass(n)},performTransition=function(e){var t;inScroll||(inScroll=!0,t=countSectionPosition(e),display.css({transform:"translateY(".concat(t,"%)")}),resetActiveClassForItem(sections,e,"active"),setTimeout(function(){inScroll=!1,resetActiveClassForItem(menuItems,e,"fixed-menu__item--active")},1300))},viewportScroller=function(){var e=sections.filter(".active"),t=e.next(),n=e.prev();return{next:function(){t.length&&performTransition(t.index())},prev:function(){n.length&&performTransition(n.index())}}};$(window).on("wheel",function(e){var t=e.originalEvent.deltaY,n=viewportScroller();0<t&&n.next(),t<0&&n.prev()}),$(window).on("keydown",function(e){var t=e.target.tagName.toLowerCase(),n="input"==t||"textarea"==t,o=viewportScroller();if(!n)switch(e.keyCode){case 38:o.prev();break;case 40:o.next()}}),$(".wrapper").on("touchmove",function(e){return e.preventDefault()}),$("[data-scroll-to]").click(function(e){e.preventDefault();var t=$(e.currentTarget).attr("data-scroll-to"),n=$("[data-section-id=".concat(t,"]"));performTransition(n.index())}),isMobile&&$("body").swipe({swipe:function(e,t){viewportScroller()["down"==t?"prev":"up"==t?"next":""]()}});var carousel=$(".carousel__list").bxSlider({controls:!1,pager:!1});$(".arrow--right").click(function(e){e.preventDefault(),carousel.goToNextSlide()}),$(".arrow--left").click(function(e){e.preventDefault(),carousel.goToPrevSlide()}),$(".reviews__switcher-item").on("click",function(e){e.preventDefault();var t=$(this).index(),n=$(".reviews__display-inner").eq(t);$(this).addClass("interactive-avatar--active").siblings().removeClass("interactive-avatar--active"),n.addClass("reviews__display-inner--active").siblings().removeClass("reviews__display-inner--active")});var btnPlay=document.querySelector(".player__start"),video=document.querySelector(".player__video"),splash=document.querySelector(".player__splash"),togglePlay=function(){video.paused||video.ended?(video.play(),$(".player").addClass("active"),$(".player__start").addClass("paused"),setInterval(currentMove)):(video.pause(),$(".player").removeClass("active"),$(".player__start").removeClass("paused"))};$(splash).on("click",togglePlay),$(btnPlay).on("click",togglePlay),$(video).on("click",togglePlay);var currentMove=function(){var e=video.currentTime/video.duration*100,t=100*video.volume;$(".player__playback-btn").css({left:"".concat(e,"%")}),$(".volume__playback-btn").css({left:"".concat(t,"%")})};$(".player__playback").on("click",function(e){var t=$(e.currentTarget),n=e.originalEvent.layerX/t.width()*100;$(".player__playback-btn").css({left:"".concat(n,"%")});var o=(e.pageX-$(this).offset().left)/$(this).width();video.currentTime=o*video.duration}),$(".player__volume-btn").on("click",function(){0<video.volume?(video.volume=0,$(this).addClass("mute")):(video.volume=1,$(".player__volume-btn").removeClass("mute"))}),$(".volume__playback").on("click",function(e){var t=(e.pageX-$(this).offset().left)/$(this).width();video.volume=t});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
